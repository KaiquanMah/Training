Using a lambda expression as an argument
Let's pass lambda expressions as arguments to functions. You will deal with the list .sort() method. By default, it sorts numbers in increasing order. Characters and strings are sorted alphabetically. The method can be defined as .sort(key=function). Here, key defines a mapping of each item in the considered list to a sortable object (e.g. a number or a character). Thus, the items in a list are sorted the way sortable objects are.
Your task is to define different ways to sort the list words using the key argument with a lambda expression.


Sort words by string length.
# Sort words by the string length
words.sort(key=lambda s: len(s))
print(words)


In [1]: words
Out[1]: 
['car',
 'truck',
 'interview',
 'tequila',
 'time',
 'cell',
 'chicken',
 'leader',
 'government',
 'transaction',
 'country',
 'bag',
 'call',
 'area',
 'service',
 'phone',
 'advantage',
 'job',
 'shape',
 'item',
 'atmosphere',
 'height',
 'creature',
 'plane',
 'unit']
 
 
 
<script.py> output:
    ['car', 'bag', 'job', 'time', 'cell', 'call', 'area', 'item', 'unit', 'truck', 'phone', 'shape', 'plane', 'leader', 'height', 'tequila', 'chicken', 'country', 'service', 'creature', 'interview', 'advantage', 'government', 'atmosphere', 'transaction']







Sort words by the last character in a string.
# Sort words by the last character in a string
words.sort(key=lambda s: s[-1])
print(words)






Sort words by the total amount of characters a, b, and c (e.g., the word 'cabana' has 3 a's, 1 b, and 1 c; in total, 5)
# Sort words by the total amount of certain characters
words.sort(key=lambda s: s.count('a') + s.count('b') + s.count('c'))
print(words)


<script.py> output:
    ['interview', 'time', 'government', 'phone', 'item', 'height', 'unit', 'truck', 'tequila', 'cell', 'leader', 'country', 'service', 'job', 'shape', 'atmosphere', 'plane', 'car', 'chicken', 'bag', 'call', 'area', 'creature', 'transaction', 'advantage']
    
    
    
    
