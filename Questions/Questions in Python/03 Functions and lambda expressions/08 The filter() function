The filter() function
Let's do some filtering! You will be given three corresponding tasks you have to complete. Use lambda expressions! And remember: the filter() function keeps all the elements that are mapped to the True value.

The variables string and spells are available in your workspace.



Exclude all the numbers from nums divisible by 3 or 5.
#ATTEMPT 1
# Exclude all the numbers from nums divisible by 3 or 5
print(nums)
fnums = filter(lambda x: x if ((x%3)!= 0) & ((x%5)!= 0), nums)
print(list(fnums))


#attempt 2
# Exclude all the numbers from nums divisible by 3 or 5
print(nums)
fnums = filter(lambda x: x % 3 != 0 and x % 5 != 0, nums)
print(list(fnums))

<script.py> output:
    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]
    [1, 2, 4, 7, 8, 11, 13, 14, 16, 17, 19, 22, 23, 26, 28, 29, 31, 32, 34, 37, 38, 41, 43, 44, 46, 47, 49, 52, 53, 56, 58, 59, 61, 62, 64, 67, 68, 71, 73, 74, 76, 77, 79, 82, 83, 86, 88, 89, 91, 92, 94, 97, 98]
    
    





Return the string without its vowels ('y' is not a vowel in this case).
In [1]: string
Out[1]: 'Ordinary Least Squares'

#attempt 1
# Return the string without its vowels
print(string)
vowels = ['a', 'e', 'i', 'o', 'u']
fstring = filter(lambda x: char(x) not in vowels, string)
print(''.join(fstring))



#attempt 2
# Return the string without its vowels
print(string)
vowels = ['a', 'e', 'i', 'o', 'u']
fstring = filter(lambda x: x.lower() not in vowels, string)
print(''.join(fstring))

<script.py> output:
    Ordinary Least Squares
    rdnry Lst Sqrs






Filter all the spells in spells with more than two 'a' characters.
# Filter all the spells in spells with more than two 'a's
print(spells)
fspells = filter(lambda x: x.count('a')>2, spells)
print(list(fspells))

<script.py> output:
    ['riddikulus', 'obliviate', 'sectumsempra', 'avada kedavra', 'alohomora', 'lumos', 'expelliarmus', 'expecto patronum']
    ['avada kedavra']
    
    
Great! No surprise that we got 'avada kedavra' as the only Harry Potter spell with more than two as!

