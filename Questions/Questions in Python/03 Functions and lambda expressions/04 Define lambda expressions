Define lambda expressions
Let's write some lambda expressions! You will be given three tasks: each will require you to define a lambda expression taking some values as arguments and using them to calculate a specific result.


Take x and return x2 if x>0 and 0, otherwise.
# Take x and return x squared if x > 0 and 0, otherwise
squared_no_negatives = lambda x: x**2 if x>0 else 0
print(squared_no_negatives(2.0))
print(squared_no_negatives(-1))

<script.py> output:
    4.0
    0







Take a list of integers nums and leave only even numbers.
# Take a list of integers nums and leave only even numbers
get_even = lambda nums: [num for num in nums if (num%2) == 0]
print(get_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))

<script.py> output:
    [2, 4, 6, 8, 10]
    
    
    
Take strings s1, s2 and list their common characters.
In [4]: set('pasta')
Out[4]: {'a', 'p', 's', 't'}

# Take strings s1, s2 and list their common characters
# setA.intersection(setB)
common_chars = lambda x, y: set(x).intersection(set(y))
print(common_chars('pasta', 'pizza'))



<script.py> output:
    {'a', 'p'}
    
    
Very good start on lambda expressions! As you can see, you can fold a pretty complicated code into a short statement and reuse it as much as you want.

