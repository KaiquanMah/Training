Combining argument types
Now you'll try to combine different argument types. Your task is to define the sort_all_types() function. It takes positional and keyword arguments of variable size, finds all the numbers and strings contained within them, and concatenates type-wise the results. Use the sort_types() function you defined before (available in the workspace). It takes a positional argument of variable size and returns a tuple containing a list of numbers and a list of strings (type sort_types? to get additional help).


Define the arguments passed to the function (use any name you want).
Find all the numbers and strings in the 1st argument.
Find all the numbers and strings in the 2nd argument.
Remember that you will need to access the values of the keyword arguments when calling the function sort_types().


The second and third instruction require that you apply the sort_types() function.
To access the values of the keyword arguments, you can use the .values() method.
Remember that positional arguments of variable size are preceded by a single preceding asterisk *, whereas keyword arguments of variable size are preceded by double preceding asterisks ** (e.g., *args and **kwargs).



# kwargs.items() gives u key-value pairs of keywordArgumentName-keywordArgumentValue
# *kwargs.values() gives u keywordArgumentValues.




# Define the arguments passed to the function
def sort_all_types(*args, **kwargs):

    # Find all the numbers and strings in the 1st argument
    nums1, strings1 = sort_types(*args)
    
    
    # Find all the numbers and strings in the 2nd argument
    nums2, strings2 = sort_types(*kwargs.values())
    
    return (nums1 + nums2, strings1 + strings2)
  
  
  
res = sort_all_types(
	1, 2.0, 'dog', 5.1, num1 = 0.0, num2 = 5, str1 = 'cat'
)
print(res)


<script.py> output:
    ([1, 2.0, 5.1, 0.0, 5], ['dog', 'cat'])


























#changing to *kwargs.keys()
# Define the arguments passed to the function
def sort_all_types(*args, **kwargs):

    # Find all the numbers and strings in the 1st argument
    nums1, strings1 = sort_types(*args)
    
    
    # Find all the numbers and strings in the 2nd argument
    nums2, strings2 = sort_types(*kwargs.keys())
    
    return (nums1 + nums2, strings1 + strings2)
  
res = sort_all_types(
	1, 2.0, 'dog', 5.1, num1 = 0.0, num2 = 5, str1 = 'cat'
)
print(res)


([1, 2.0, 5.1], ['dog', 'num1', 'num2', 'str1'])










#changing to *kwargs.items()
# Define the arguments passed to the function
def sort_all_types(*args, **kwargs):

    # Find all the numbers and strings in the 1st argument
    nums1, strings1 = sort_types(*args)
    
    
    # Find all the numbers and strings in the 2nd argument
    nums2, strings2 = sort_types(*kwargs.items())
    
    return (nums1 + nums2, strings1 + strings2)
  
res = sort_all_types(
	1, 2.0, 'dog', 5.1, num1 = 0.0, num2 = 5, str1 = 'cat'
)
print(res)

([1, 2.0, 5.1], ['dog'])




