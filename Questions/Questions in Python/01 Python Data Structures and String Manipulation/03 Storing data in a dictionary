Storing data in a dictionary
The surface you see below is called circular paraboloid:
<Circular Paraboloid>

It can be described by the following equation:
x**2/a**2 + y**2/a**2 = z
Let's set the coefficient a to 1. Therefore, the radius at each cut will be equal to zâˆš.

Your task is to create a dictionary that stores the mapping from the pair of coordinates (x,y) to the z coordinate (the lists storing considered ranges for x and y are given: range_x and range_y, respectively).






Calculate the value for z coordinate using coordinates x and y.
Create a new key for the dictionary circ_parab represented as a tuple containing x and y.
Create a new key-value pair for circ_parab.

range_x = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0]
range_y = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0]



circ_parab = dict()

for x in range_x:
    for y in range_y:        
        # Calculate the value for z
        z = x**2 + y**2
        # Create a new key for the dictionary
        key = (x, y)
        # Create a new key-value pair      
        circ_parab[key] = z



In [2]: circ_parab
Out[2]: 
{(0.0, 0.0): 0.0,
 (0.0, 0.2): 0.04000000000000001,
 (0.0, 0.4): 0.16000000000000003,
 (0.0, 0.6): 0.36,
 (0.0, 0.8): 0.6400000000000001,
 (0.0, 1.0): 1.0,
 (0.0, 1.2): 1.44,
 (0.0, 1.4): 1.9599999999999997,
 (0.0, 1.6): 2.5600000000000005,
 (0.0, 1.8): 3.24,
 (0.0, 2.0): 4.0,
 (0.2, 0.0): 0.04000000000000001,
 (0.2, 0.2): 0.08000000000000002,
 (0.2, 0.4): 0.20000000000000004,
 (0.2, 0.6): 0.4,
 (0.2, 0.8): 0.6800000000000002,
 (0.2, 1.0): 1.04,
 (0.2, 1.2): 1.48,
 (0.2, 1.4): 1.9999999999999998,
 (0.2, 1.6): 2.6000000000000005,
 (0.2, 1.8): 3.2800000000000002,
 (0.2, 2.0): 4.04,
 (0.4, 0.0): 0.16000000000000003,
 (0.4, 0.2): 0.20000000000000004,
 (0.4, 0.4): 0.32000000000000006,
 (0.4, 0.6): 0.52,
 (0.4, 0.8): 0.8000000000000002,
 (0.4, 1.0): 1.1600000000000001,
 (0.4, 1.2): 1.6,
 (0.4, 1.4): 2.1199999999999997,
 (0.4, 1.6): 2.7200000000000006,
 (0.4, 1.8): 3.4000000000000004,
 (0.4, 2.0): 4.16,
 (0.6, 0.0): 0.36,
 (0.6, 0.2): 0.4,
 (0.6, 0.4): 0.52,
 (0.6, 0.6): 0.72,
 (0.6, 0.8): 1.0,
 (0.6, 1.0): 1.3599999999999999,
 (0.6, 1.2): 1.7999999999999998,
 (0.6, 1.4): 2.32,
 (0.6, 1.6): 2.9200000000000004,
 (0.6, 1.8): 3.6,
 (0.6, 2.0): 4.36,
 (0.8, 0.0): 0.6400000000000001,
 (0.8, 0.2): 0.6800000000000002,
 (0.8, 0.4): 0.8000000000000002,
 (0.8, 0.6): 1.0,
 (0.8, 0.8): 1.2800000000000002,
 (0.8, 1.0): 1.6400000000000001,
 (0.8, 1.2): 2.08,
 (0.8, 1.4): 2.5999999999999996,
 (0.8, 1.6): 3.2000000000000006,
 (0.8, 1.8): 3.8800000000000003,
 (0.8, 2.0): 4.640000000000001,
 (1.0, 0.0): 1.0,
 (1.0, 0.2): 1.04,
 (1.0, 0.4): 1.1600000000000001,
 (1.0, 0.6): 1.3599999999999999,
 (1.0, 0.8): 1.6400000000000001,
 (1.0, 1.0): 2.0,
 (1.0, 1.2): 2.44,
 (1.0, 1.4): 2.96,
 (1.0, 1.6): 3.5600000000000005,
 (1.0, 1.8): 4.24,
 (1.0, 2.0): 5.0,
 (1.2, 0.0): 1.44,
 (1.2, 0.2): 1.48,
 (1.2, 0.4): 1.6,
 (1.2, 0.6): 1.7999999999999998,
 (1.2, 0.8): 2.08,
 (1.2, 1.0): 2.44,
 (1.2, 1.2): 2.88,
 (1.2, 1.4): 3.3999999999999995,
 (1.2, 1.6): 4.0,
 (1.2, 1.8): 4.68,
 (1.2, 2.0): 5.4399999999999995,
 (1.4, 0.0): 1.9599999999999997,
 (1.4, 0.2): 1.9999999999999998,
 (1.4, 0.4): 2.1199999999999997,
 (1.4, 0.6): 2.32,
 (1.4, 0.8): 2.5999999999999996,
 (1.4, 1.0): 2.96,
 (1.4, 1.2): 3.3999999999999995,
 (1.4, 1.4): 3.9199999999999995,
 (1.4, 1.6): 4.5200000000000005,
 (1.4, 1.8): 5.2,
 (1.4, 2.0): 5.96,
 (1.6, 0.0): 2.5600000000000005,
 (1.6, 0.2): 2.6000000000000005,
 (1.6, 0.4): 2.7200000000000006,
 (1.6, 0.6): 2.9200000000000004,
 (1.6, 0.8): 3.2000000000000006,
 (1.6, 1.0): 3.5600000000000005,
 (1.6, 1.2): 4.0,
 (1.6, 1.4): 4.5200000000000005,
 (1.6, 1.6): 5.120000000000001,
 (1.6, 1.8): 5.800000000000001,
 (1.6, 2.0): 6.5600000000000005,
 (1.8, 0.0): 3.24,
 (1.8, 0.2): 3.2800000000000002,
 (1.8, 0.4): 3.4000000000000004,
 (1.8, 0.6): 3.6,
 (1.8, 0.8): 3.8800000000000003,
 (1.8, 1.0): 4.24,
 (1.8, 1.2): 4.68,
 (1.8, 1.4): 5.2,
 (1.8, 1.6): 5.800000000000001,
 (1.8, 1.8): 6.48,
 (1.8, 2.0): 7.24,
 (2.0, 0.0): 4.0,
 (2.0, 0.2): 4.04,
 (2.0, 0.4): 4.16,
 (2.0, 0.6): 4.36,
 (2.0, 0.8): 4.640000000000001,
 (2.0, 1.0): 5.0,
 (2.0, 1.2): 5.4399999999999995,
 (2.0, 1.4): 5.96,
 (2.0, 1.6): 6.5600000000000005,
 (2.0, 1.8): 7.24,
 (2.0, 2.0): 8.0}










What is the value of circ_parab for the key (1.8, 1.4)?
In [3]: circ_parab[(1.8, 1.4)]
Out[3]: 5.2

10.0
5.96
4.0

#YES - 5.2








Is it possible to use a list instead of a tuple for a key in the circ_parab dictionary?

Yes, there is no substantial difference between two data structures in this regard.
No, because a dictionary can accept only a tuple as a key.
No, because a list is an ordered sequence and the operation will result in TypeError.

#YES - No, because a list is mutable and the operation will result in TypeError.
Correct. Keys can represent only immutable objects.




