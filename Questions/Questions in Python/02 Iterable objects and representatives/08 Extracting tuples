Extracting tuples
In the previous exercise, you used two list comprehensions to create lists lengths and words that, respectively, refer to the lengths of the constituent lists in wlist and the longest words stored in those lists. In this exercise, you'll create them in a slightly different way. First, you'll need to put the same calculations into one list comprehension, which should result in a list of tuples. Second, apply the unzip operation to generate two distinct tuples, resembling lengths and words from the previous exercise.
The list wlist and the function get_longest_word() are already available in your workspace.

wlist = [['Python', 'creativity', 'universe'], ['interview', 'study', 'job', 'university', 'lecture'], ['task', 'objective', 'aim', 'subject', 'programming', 'test', 'research']]





Create a list of tuples each containing the length and the longest word of each item in wlist.
Unwrap the created list and create two distinct tuples.

# Create a list of tuples with lengths and longest words
result = [
    (len(item), get_longest_word(item)) for item in wlist
]


In [8]: result
Out[8]: [(3, 'creativity'), (5, 'university'), (7, 'programming')]






# Unzip the result    
lengths, words = zip(*result)

In [10]: zip(*result)
Out[10]: <zip at 0x7fcd20324948>

In [11]: lengths
Out[11]: (3, 5, 7)

In [12]: words
Out[12]: ('creativity', 'university', 'programming')







for item in zip(wlist, lengths, words):
    print(item)
    
    
<script.py> output:
    (['Python', 'creativity', 'universe'], 3, 'creativity')
    (['interview', 'study', 'job', 'university', 'lecture'], 5, 'university')
    (['task', 'objective', 'aim', 'subject', 'programming', 'test', 'research'], 7, 'programming')    



