Shift a string
You're going to create a generator that, given a string, produces a sequence of constituent characters shifted by a specified number of positions shift. For example, the string 'sushi' will result in the sequence 'h', 'i', 's', 'u', 's' if we use the shift of 2 positions to the right (shift = 2). If we use the shift of 2 positions to the left (shift = -2), the resulting sequence will be 's', 'h', 'i', 's', 'u'.

Tip: the % operator might be helpful when indexing your string. Applying it to a positive or negative number gives a non-negative remainder, which can be helpful when shifting your index. For example:
-2 % 10 = 8
-1 % 10 = 9
0 % 10 = 0
1 % 10 = 1
2 % 10 = 2


Define a for loop with the yield statement.
  Your function should yield the character in string indexed at the shifted value.
Create a generator that shifts the string 'DataCamp' by 5 positions to the right.
Create a new string using the generator and print it out.





#first attempt
def shift_string(string, shift):
    len_string = len(string)
    # Define a for loop with the yield statement
    for idx in range(0, len_string):
        new_idx = (idx + shift)%len_string
        yield (string[new_idx])


# Create a generator
gen = shift_string('DataCamp', 5)

# Create a new string using the generator and print it out
string_shifted = ''.join(gen)
print(string_shifted)

<script.py> output:
    ampDataC







#second attempt
def shift_string(string, shift):
    len_string = len(string)
    # Define a for loop with the yield statement
    for idx in range(0, len_string):
        yield string[(idx - shift) % len_string]
       
# Create a generator
gen = shift_string('DataCamp', 5)

# Create a new string using the generator and print it out
string_shifted = ''.join(gen)
print(string_shifted)

<script.py> output:
    aCampDat
    
    
    
# somehow what was taught (i.e. shifting to the right being a positive value) differs from the second attempt solution above
