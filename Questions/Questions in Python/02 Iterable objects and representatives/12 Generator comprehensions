Generator comprehensions
You are given the following generator functions:

def func1(n):
  for i in range(0, n):
    yield i**2
def func2(n):
  for i in range(0, n):
     if i%2 == 0:
       yield 2*i
def func3(n, m):
  for i in func1(n):
    for j in func2(m):
      yield ((i, j), i + j)






Rewrite func1() as a generator comprehension with n = 10.
# Rewrite func1() as a generator comprehension
gen = (i**2 for i in range(0, 10))

for item in zip(gen, func1(10)):
    print(item)
    
    
    
<script.py> output:
    (0, 0)
    (1, 1)
    (4, 4)
    (9, 9)
    (16, 16)
    (25, 25)
    (36, 36)
    (49, 49)
    (64, 64)
    (81, 81)
    
    
    
    
    
    
    
    
    

Rewrite func2() as a generator comprehension with n = 20.
# Rewrite func2() as a generator comprehension
gen = (2*i for i in range(0, 20) if (i%2)==0)

for item in zip(gen, func2(20)):
    print(item)

<script.py> output:
    (0, 0)
    (4, 4)
    (8, 8)
    (12, 12)
    (16, 16)
    (20, 20)
    (24, 24)
    (28, 28)
    (32, 32)
    (36, 36)







Rewrite func3() as a generator comprehension with n = 8 and m = 10.

# Rewrite func3() as a generator comprehension
gen = (((i, j), i + j) for i in func1(8) for j in func2(10))

for item in zip(gen, func3(8, 10)):
    print(item)



<script.py> output:
    (((0, 0), 0), ((0, 0), 0))
    (((0, 4), 4), ((0, 4), 4))
    (((0, 8), 8), ((0, 8), 8))
    (((0, 12), 12), ((0, 12), 12))
    (((0, 16), 16), ((0, 16), 16))
    (((1, 0), 1), ((1, 0), 1))
    (((1, 4), 5), ((1, 4), 5))
    (((1, 8), 9), ((1, 8), 9))
    (((1, 12), 13), ((1, 12), 13))
    (((1, 16), 17), ((1, 16), 17))
    (((4, 0), 4), ((4, 0), 4))
    (((4, 4), 8), ((4, 4), 8))
    (((4, 8), 12), ((4, 8), 12))
    (((4, 12), 16), ((4, 12), 16))
    (((4, 16), 20), ((4, 16), 20))
    (((9, 0), 9), ((9, 0), 9))
    (((9, 4), 13), ((9, 4), 13))
    (((9, 8), 17), ((9, 8), 17))
    (((9, 12), 21), ((9, 12), 21))
    (((9, 16), 25), ((9, 16), 25))
    (((16, 0), 16), ((16, 0), 16))
    (((16, 4), 20), ((16, 4), 20))
    (((16, 8), 24), ((16, 8), 24))
    (((16, 12), 28), ((16, 12), 28))
    (((16, 16), 32), ((16, 16), 32))
    (((25, 0), 25), ((25, 0), 25))
    (((25, 4), 29), ((25, 4), 29))
    (((25, 8), 33), ((25, 8), 33))
    (((25, 12), 37), ((25, 12), 37))
    (((25, 16), 41), ((25, 16), 41))
    (((36, 0), 36), ((36, 0), 36))
    (((36, 4), 40), ((36, 4), 40))
    (((36, 8), 44), ((36, 8), 44))
    (((36, 12), 48), ((36, 12), 48))
    (((36, 16), 52), ((36, 16), 52))
    (((49, 0), 49), ((49, 0), 49))
    (((49, 4), 53), ((49, 4), 53))
    (((49, 8), 57), ((49, 8), 57))
    (((49, 12), 61), ((49, 12), 61))
    (((49, 16), 65), ((49, 16), 65))




