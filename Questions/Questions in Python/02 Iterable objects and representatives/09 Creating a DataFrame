Creating a DataFrame
Your last task in this lesson is to create a DataFrame from a dictionary supplied by a zip object. You have to take each single word stored in the list wlist and calculate its length. This data should be stored in two separate tuples that are supplied to the zip() initializer. The resulting zip object should be used to construct a DataFrame where the first column will store words and the second column will store their lengths.
The module pandas is already imported for you as pd.

wlist = [['Python', 'creativity', 'universe'], ['interview', 'study', 'job', 'university', 'lecture'], ['task', 'objective', 'aim', 'subject', 'programming', 'test', 'research']]





Create a list with tuples of the form (word itself, length of the word).
In[2]:
word_lengths = [
    (word, len(word)) for word in wlist
]

Out[2]: 
[(['Python', 'creativity', 'universe'], 3),
 (['interview', 'study', 'job', 'university', 'lecture'], 5),
 (['task', 'objective', 'aim', 'subject', 'programming', 'test', 'research'],
  7)]
  





# Create a list of tuples with words and their lengths
word_lengths = [
    (word, len(word)) for list in wlist for word in list
]

In [4]: word_lengths
Out[4]: 
[('Python', 6),
 ('creativity', 10),
 ('universe', 8),
 ('interview', 9),
 ('study', 5),
 ('job', 3),
 ('university', 10),
 ('lecture', 7),
 ('task', 4),
 ('objective', 9),
 ('aim', 3),
 ('subject', 7),
 ('programming', 11),
 ('test', 4),
 ('research', 8)]











Unwrap the word_lengths and create two separate tuples words and lengths.
# Create a list of tuples with words and their lengths
word_lengths = [
    (item, len(item)) for items in wlist for item in items
]

# Unwrap the word_lengths
words, lengths = zip(*word_lengths)


In [6]: words
Out[6]: 
('Python',
 'creativity',
 'universe',
 'interview',
 'study',
 'job',
 'university',
 'lecture',
 'task',
 'objective',
 'aim',
 'subject',
 'programming',
 'test',
 'research')

In [7]: lengths
Out[7]: (6, 10, 8, 9, 5, 3, 10, 7, 4, 9, 3, 7, 11, 4, 8)










Create a zip object combining column names for the future DataFrame and the associated data.
# Create a list of tuples with words and their lengths
word_lengths = [
    (item, len(item)) for items in wlist for item in items
]

# Unwrap the word_lengths
words, lengths = zip(*word_lengths)

# Create a zip object
col_names = ['word', 'length']
result = zip(col_names, (words, lengths))

In [10]: result
Out[10]: <zip at 0x7fcd44c59208>










Convert result to a dictionary and build a DataFrame.
# Create a list of tuples with words and their lengths
word_lengths = [
    (item, len(item)) for items in wlist for item in items
]

# Unwrap the word_lengths
words, lengths = zip(*word_lengths)

# Create a zip object
col_names = ['word', 'length']
result = zip(col_names, [words, lengths])

# Convert the result to a dictionary and build a DataFrame
data_frame = pd.DataFrame(dict(result))
print(data_frame)

<script.py> output:
               word  length
    0        Python       6
    1    creativity      10
    2      universe       8
    3     interview       9
    4         study       5
    5           job       3
    6    university      10
    7       lecture       7
    8          task       4
    9     objective       9
    10          aim       3
    11      subject       7
    12  programming      11
    13         test       4
    14     research       8

Great! You practiced the workflow to create a DataFrame from a zip object.

