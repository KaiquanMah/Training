Accessing subarrays
Let's access elements in NumPy arrays! Your task is to convert a square two-dimensional array square of size size to a list created by following a spiral pattern:
Traversing the matrix in spiral way
Rather than simply accessing certain slices, you will define a more general solution using a for loop (the solution should work for all the square two-dimensional arrays of odd size).
The module numpy is already imported as np.
You will need the reversed() function, which reverses an Iterable.

[[ 1  2  3  4  5]
 [ 6  7  8  9 10]
 [11 12 13 14 15]
 [16 17 18 19 20]
 [21 22 23 24 25]]
 
 
 
 
 
 
 
 
Convert each part marked by a red arrow to a list.
Convert each part marked by a green arrow to a list.
Convert each part marked by a blue arrow to a list.
Convert each part marked by a magenta arrow to a list.

#attempt 1
spiral = []

for i in range(0, size):
    # Convert each part marked by a red arrow to a list
    spiral += list(square[1:5, 7:9, 13])
    # Convert each part marked by a green arrow to a list
    spiral += list(square[10, 15, 20, 25, 14, 19])
    # Convert each part marked by a blue arrow to a list
    spiral += list(reversed(square[17:18, 21:24]))
    # Convert each part marked by a magenta arrow to a list
    spiral += list(reversed(square[6, 11, 12, 16]))
        
print(spiral)






#attempt 2
spiral = []

for i in range(0, size):
    # Convert each part marked by a red arrow to a list
    spiral += list(square[i, i:size-i])
    # Convert each part marked by a green arrow to a list
    spiral += list(square[i+1:size-i, size-i-1])
    # Convert each part marked by a blue arrow to a list
    spiral += list(reversed(square[size-i-1, i:size-i-1]))
    # Convert each part marked by a magenta arrow to a list
    spiral += list(reversed(square[i+1:size-i-1, i]))
        
print(spiral)



<script.py> output:
    [1, 2, 3, 4, 5, 10, 15, 20, 25, 24, 23, 22, 21, 16, 11, 6, 7, 8, 9, 14, 19, 18, 17, 12, 13]








In [36]:         help(reversed)
Help on class reversed in module builtins:

class reversed(object)
 |  reversed(sequence) -> reverse iterator over values of the sequence
 |  
 |  Return a reverse iterator
 |  
 |  Methods defined here:
 |  
 |  __getattribute__(self, name, /)
 |      Return getattr(self, name).
 |  
 |  __iter__(self, /)
 |      Implement iter(self).
 |  
 |  __length_hint__(...)
 |      Private method returning an estimate of len(list(it)).
 |  
 |  __new__(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  __next__(self, /)
 |      Implement next(self).
 |  
 |  __reduce__(...)
 |      Return state information for pickling.
 |  
 |  __setstate__(...)
 |      Set state information for unpickling.
 
 
