Accessing subarrays
Let's access elements in NumPy arrays! Your task is to convert a square two-dimensional array square of size size to a list created by following a spiral pattern:
Traversing the matrix in spiral way
Rather than simply accessing certain slices, you will define a more general solution using a for loop (the solution should work for all the square two-dimensional arrays of odd size).
The module numpy is already imported as np.
You will need the reversed() function, which reverses an Iterable.

[[ 1  2  3  4  5]
 [ 6  7  8  9 10]
 [11 12 13 14 15]
 [16 17 18 19 20]
 [21 22 23 24 25]]
 
 
 
 
 
 
 
 
Convert each part marked by a red arrow to a list.
Convert each part marked by a green arrow to a list.
Convert each part marked by a blue arrow to a list.
Convert each part marked by a magenta arrow to a list.

#attempt 1
spiral = []

for i in range(0, size):
    # Convert each part marked by a red arrow to a list
    spiral += list(square[1:5, 7:9, 13])
    # Convert each part marked by a green arrow to a list
    spiral += list(square[10, 15, 20, 25, 14, 19])
    # Convert each part marked by a blue arrow to a list
    spiral += list(reversed(square[17:18, 21:24]))
    # Convert each part marked by a magenta arrow to a list
    spiral += list(reversed(square[6, 11, 12, 16]))
        
print(spiral)






#attempt 2


