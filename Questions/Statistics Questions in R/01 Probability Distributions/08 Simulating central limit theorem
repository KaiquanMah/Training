Simulating central limit theorem
The cental limit theorem (CLT) implies that we can apply statistical methods that work for normal distributions to problems involving other types of distributions. Interviewers are eager to check your understanding of CLT, especially if your future position involves A/B testing.

You will show the mechanics behind CLT on the example of die rolls.

In the last exercise, you generated 1000 die rolls by setting the size parameter: sample(1:6, size = 1000, replace = TRUE).

In step 1 of this exercise, you will generate 1 die roll output in a loop with 1000 iterations which is equivalent to the above.

To visualize:
discrete data - you can use barplot(table(x)),
continuous data - you can use hist(x).

The die_outputs and mean_die_outputs vectors have already been initialized.






In a loop with 1000 iterations, generate 1 random number from the range 1 to 6. Assign the results to the die_outputs vector.
Draw a bar chart to visualize the number of occurrences of each outcome.
# Simulate 1000 die roll outputs
for (i in 1:1000) {
    die_outputs[i] <- sample(1:6, size = 1)
}

# Visualize the number of occurrences of each result
barplot(table(die_outputs))








Generate 30 die rolls 1000 times. 
Calculate means for each set of outputs and assign them to the mean_die_outputs vector.
Plot the histogram of means for each set of 30 die rolls.
# Simulate 1000 die roll outputs
for (i in 1:1000) {
    die_outputs[i] <- sample(1:6, size = 1)
}

# Visualize the number of occurrences of each result
barplot(table(die_outputs))


# Calculate 1000 means of 30 die roll outputs
for (i in 1:1000) {
    mean_die_outputs[i] <- mean(sample(1:6, size = 30, replace = 1))
}

# Inspect the distribution of the results
hist(mean_die_outputs)



Fantastic work! The distribution of the results of rolling the dice is uniform, but the distribution of samples' means is bell-shaped! You can apply the probabilistic and statistical methods that work for normal distributions to the distribution of samples' means!


