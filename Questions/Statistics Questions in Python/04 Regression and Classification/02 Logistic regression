Logistic regression
Let's move on to logistic regression. You'll be working with the same weather dataset again, but the goal here is to predict if it's going to rain tomorrow. We've gone ahead and created your train and test sets for you. Your dependent variables are the Humidity9am and Humidity3pm features.
It's also worth noting that the dataset has already been normalized in order to ensure that we can interpret the coefficients later on. This is always good to bring up during your interview when talking about regression for inference.
https://en.wikipedia.org/wiki/Normalization_(statistics)

Create and fit your logistic regression model using the X_train and y_train variables.
from sklearn.linear_model import LogisticRegression

# Create and fit your model
clf = LogisticRegression()
clf.fit(X_train, y_train)




Print the accuracy of your model using the score() function.
# Compute and print the accuracy
acc = clf.score(X_test, y_test)
print(acc)

<script.py> output:
    0.7875



Let's take a look at the coefficients of our model; what does this tell you?
# Assign and print the coefficents
coefs = clf.coef_
print(coefs)

<script.py> output:
    [[0.20747557 3.17409056]]

Since our features were normalized beforehand, we can look at the magnitude of our coefficients to tell us the importance of each independent variable. Here you can see the the second variable, Humidity3pm was much more important to our outcome than humidity from that morning. This is intuitive since we are trying to predict the rain for tomorrow!

