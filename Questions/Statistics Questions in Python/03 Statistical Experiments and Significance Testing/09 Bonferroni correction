Bonferroni correction
Let's implement multiple hypothesis tests using the Bonferroni correction approach that we discussed in the slides. You'll use the imported multipletests() function in order to achieve this.
Use a single-test significance level of .05 and observe how the Bonferroni correction affects our sample list of p-values already created.


Compute a list of the Bonferroni adjusted p-values using the imported multipletests() function.
Print the results of the multiple hypothesis tests returned in index 0 of your p_adjusted variable.
Print the p-values themselves returned in index 1 of your p_adjusted variable.


from statsmodels.sandbox.stats.multicomp import multipletests
pvals = [.01, .05, .10, .50, .99]

# Create a list of the adjusted p-values
p_adjusted = multipletests(pvals, 
                           alpha=0.05, 
                           method='bonferroni')

# Print the resulting conclusions
print(p_adjusted[0])

# Print the adjusted p-values themselves 
print(p_adjusted[1])


<script.py> output:
    [ True False False False False]
    [0.05 0.25 0.5  1.   1.  ]
    
Good work! As you can see, the Bonferroni correction did it's job and corrected the family-wise error rate for our 5 hypothesis test results. In the end, only one of the tests remained signficant. If you're interested, check out some of the other methods, but interviewers typically won't get too far in the weeds here.

    
