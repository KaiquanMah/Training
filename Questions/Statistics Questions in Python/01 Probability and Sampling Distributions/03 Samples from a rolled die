Samples from a rolled die
Let's work through generating a simulation using the numpy package. You'll work with the same scenario from the slides, simulating rolls from a standard die numbered 1 through 6, using the randint() function. Take a look at the documentation for this function if you haven't encountered it before.
Starting with a small sample and working your way up to a larger sample, examine the outcome means and come to a conclusion about the underlying theorem.


Generate a sample of 10 die rolls using the randint() function; assign it to our small variable.
Assign the mean of the sample to small_mean and print the results; notice how close it is to the true mean.
Similarly, create a larger sample of 1000 die rolls and assign the list to our large variable.
Assign the mean of the larger sample to large_mean and print the mean; which theorem is at work here?

from numpy.random import randint

# Create a sample of 10 die rolls
small = randint(1, 7, 10)

# Calculate and print the mean of the sample
small_mean = small.mean()
print(small_mean)

# Create a sample of 1000 die rolls
large = randint(1, 7, 1000)

# Calculate and print the mean of the large sample
large_mean = large.mean()
print(large_mean)



In [5]: large
Out[5]: 
array([6, 3, 5, 3, 2, 4, 3, 4, 2, 2, 1, 2, 2, 1, 1, 2, 4, 6, 5, 1, 1, 5,
       2, 4, 3, 5, 3, 5, 1, 6, 1, 2, 4, 5, 5, 5, 2, 6, 4, 3, 2, 5, 1, 4,
       3, 6, 1, 4, 3, 3, 3, 6, 3, 5, 4, 4, 6, 5, 5, 6, 4, 3, 1, 5, 4, 2,
       4, 3, 6, 2, 3, 5, 1, 2, 5, 3, 2, 2, 4, 5, 6, 2, 1, 1, 4, 2, 4, 4,
       4, 6, 2, 2, 3, 4, 4, 4, 4, 1, 2, 4, 2, 5, 4, 2, 6, 3, 4, 5, 4, 2,
       6, 1, 6, 1, 6, 4, 1, 2, 6, 2, 1, 4, 6, 2, 4, 5, 6, 5, 2, 5, 5, 4,
       5, 4, 1, 6, 5, 5, 5, 5, 1, 1, 2, 1, 1, 5, 3, 3, 6, 6, 1, 2, 1, 3,
       5, 5, 2, 3, 4, 2, 6, 5, 4, 2, 2, 1, 2, 4, 2, 1, 6, 2, 3, 6, 3, 3,
       6, 2, 4, 3, 4, 2, 2, 4, 4, 3, 5, 1, 4, 3, 4, 6, 3, 3, 4, 2, 4, 2,
       4, 4, 4, 6, 4, 1, 1, 5, 5, 6, 1, 1, 5, 2, 3, 6, 2, 6, 5, 2, 4, 5,
       3, 3, 5, 4, 1, 4, 4, 3, 6, 2, 6, 2, 2, 3, 3, 6, 3, 1, 6, 1, 2, 4,
       4, 4, 2, 4, 2, 3, 5, 6, 2, 1, 2, 5, 3, 1, 6, 2, 3, 5, 5, 5, 4, 4,
       2, 5, 6, 1, 6, 5, 6, 1, 1, 1, 2, 1, 5, 4, 3, 6, 5, 6, 1, 2, 3, 3,
       3, 3, 4, 3, 2, 1, 5, 2, 6, 6, 2, 3, 1, 4, 2, 4, 6, 4, 6, 4, 6, 2,
       6, 2, 2, 4, 6, 2, 2, 6, 6, 3, 6, 2, 6, 1, 1, 5, 3, 4, 1, 5, 3, 3,
       6, 2, 1, 1, 3, 6, 6, 6, 5, 2, 2, 6, 4, 3, 5, 3, 6, 2, 1, 4, 2, 4,
       1, 1, 6, 6, 2, 5, 4, 3, 3, 6, 1, 3, 4, 3, 1, 3, 2, 1, 4, 2, 4, 1,
       3, 4, 6, 4, 5, 1, 6, 6, 1, 1, 4, 2, 1, 3, 2, 6, 4, 1, 5, 1, 5, 2,
       4, 6, 2, 1, 1, 2, 5, 2, 6, 5, 4, 5, 1, 1, 5, 1, 4, 2, 6, 5, 3, 1,
       1, 2, 2, 5, 3, 6, 4, 6, 6, 3, 3, 3, 4, 2, 4, 6, 2, 4, 3, 4, 2, 2,
       6, 1, 1, 3, 4, 3, 2, 4, 3, 3, 2, 2, 3, 5, 6, 5, 3, 4, 6, 5, 1, 3,
       1, 3, 5, 4, 4, 1, 6, 6, 1, 3, 1, 1, 5, 6, 4, 3, 5, 4, 4, 2, 2, 1,
       1, 2, 5, 3, 5, 4, 4, 5, 1, 4, 5, 2, 3, 5, 6, 3, 1, 5, 1, 4, 6, 3,
       3, 4, 5, 2, 2, 6, 3, 5, 3, 3, 1, 2, 5, 6, 3, 5, 6, 5, 5, 2, 4, 2,
       5, 2, 6, 6, 1, 2, 5, 6, 2, 1, 1, 2, 5, 5, 3, 5, 6, 4, 6, 5, 4, 4,
       3, 6, 3, 5, 5, 4, 3, 3, 5, 1, 1, 6, 1, 3, 1, 6, 6, 1, 5, 5, 2, 1,
       4, 1, 1, 6, 6, 1, 1, 5, 5, 1, 2, 2, 1, 4, 6, 6, 5, 6, 3, 4, 6, 6,
       5, 3, 6, 6, 2, 6, 6, 2, 5, 5, 3, 2, 6, 6, 4, 2, 3, 2, 4, 2, 4, 1,
       4, 6, 4, 5, 6, 2, 2, 5, 2, 1, 3, 2, 4, 1, 6, 4, 6, 4, 1, 1, 2, 3,
       4, 6, 4, 6, 1, 3, 6, 4, 1, 2, 2, 5, 5, 6, 2, 1, 1, 5, 3, 6, 2, 6,
       3, 6, 5, 3, 1, 4, 4, 3, 4, 3, 2, 5, 3, 6, 6, 1, 6, 5, 1, 6, 4, 2,
       6, 4, 2, 6, 3, 5, 1, 3, 6, 6, 1, 2, 1, 6, 4, 1, 2, 6, 1, 5, 2, 5,
       3, 5, 3, 2, 1, 2, 4, 2, 2, 6, 4, 4, 6, 2, 6, 4, 6, 6, 2, 2, 4, 3,
       4, 1, 3, 1, 4, 4, 2, 1, 4, 4, 4, 6, 1, 4, 5, 5, 4, 3, 6, 1, 6, 6,
       2, 6, 3, 5, 1, 2, 5, 4, 4, 2, 1, 2, 2, 3, 4, 4, 5, 3, 4, 3, 1, 3,
       4, 6, 2, 1, 6, 1, 4, 6, 3, 6, 2, 4, 1, 1, 1, 1, 1, 3, 2, 3, 6, 2,
       3, 4, 1, 4, 2, 2, 5, 1, 1, 2, 5, 1, 1, 4, 3, 5, 6, 2, 3, 4, 2, 2,
       4, 6, 6, 1, 6, 1, 3, 6, 5, 1, 5, 2, 4, 3, 1, 3, 5, 6, 6, 4, 5, 3,
       2, 6, 2, 5, 4, 5, 1, 4, 4, 5, 4, 2, 3, 2, 4, 3, 1, 5, 6, 4, 5, 6,
       3, 5, 6, 4, 4, 2, 5, 5, 2, 2, 6, 5, 3, 3, 1, 2, 3, 4, 4, 2, 6, 4,
       1, 4, 6, 1, 5, 4, 4, 3, 5, 2, 2, 1, 4, 4, 6, 4, 3, 2, 4, 5, 2, 6,
       6, 5, 5, 6, 1, 1, 3, 3, 6, 3, 1, 4, 2, 2, 1, 3, 3, 6, 2, 4, 4, 6,
       4, 5, 1, 2, 5, 3, 1, 1, 4, 3, 5, 2, 1, 5, 4, 3, 1, 5, 6, 1, 1, 1,
       2, 4, 5, 3, 5, 4, 6, 5, 6, 4, 1, 5, 2, 2, 1, 3, 1, 4, 5, 2, 6, 4,
       6, 1, 2, 4, 1, 1, 3, 2, 6, 4, 3, 5, 3, 6, 1, 5, 1, 4, 3, 4, 3, 4,
       1, 6, 5, 5, 5, 1, 4, 1, 4, 4])

<script.py> output:
    3.4
    3.486



Good job! Notice how the mean of the large sample has gotten closer to the true expected mean value of 3.5 for a rolled die. Which theorem did you say was being demonstrated here? Was it the law of large numbers? If so, you're correct! It's important to distinguish between the law of large numbers and central limit theorem in interviews.

