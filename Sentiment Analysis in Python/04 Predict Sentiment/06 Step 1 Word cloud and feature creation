Step 1 Word cloud and feature creation
You will work with a sample of the reviews dataset throughout this exercise. It contains the review and score columns. Feel free to explore it in the IPython Shell.
In the first step, you will build a word cloud using only positive reviews. The string positive_reviews has been created for you by concatenating the top 100 positive reviews.
In the second step, you will create a new feature for the length of each review and add that new feature to the dataset.
All the functions needed to plot a word cloud have been imported for you, as well as the word_tokenize function from the nltk module.

Call and create a word cloud image using the positive_reviews.
Display the generated image.
# Create and generate a word cloud image
cloud_positives = WordCloud(background_color='white').generate(positive_reviews)

# Display the generated wordcloud image
plt.imshow(cloud_positives, interpolation='bilinear') 
plt.axis("off")

# Don't forget to show the final image
plt.show()



Tokenize each item in the review column.
Iterate over the created word_tokens list and find the length of each item in the list. Append that length to the empty len_tokens list.
# Tokenize each item in the review column
word_tokens = [word_tokenize(review) for review in reviews.review]

# Create an empty list to store the length of the reviews
len_tokens = []

# Iterate over the word_tokens list and determine the length of each item
for i in range(len(word_tokens)):
     len_tokens.append(len(word_tokens[i]))

# Create a new feature for the lengh of each review
reviews['n_words'] = len_tokens 

Which words stood out in the word cloud image? After you have successfully created a feature about the number of tokens in each review, it is time to transform the text of the review.


