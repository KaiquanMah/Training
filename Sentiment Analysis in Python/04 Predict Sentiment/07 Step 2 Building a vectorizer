Step 2 Building a vectorizer
In this exercise, you are asked to build a TfIDf transformation of the review column in the reviews dataset. You are asked to specify the n-grams, stop words, the pattern of tokens and the size of the vocabulary arguments.
This is the last step before we train a classifier to predict the sentiment of a review.

Import the Tfidf vectorizer and the default list of English stop words.
Build the Tfidf vectorizer, specifying - in this order - the following arguments: use as stop words the default list of English stop words; as n-grams use uni- and bi-grams;the maximum number of features should be 200; capture only words using the specified pattern.
Create a DataFrame using the Tfidf vectorizer.

# Import the TfidfVectorizer and default list of English stop words
from sklearn.feature_extraction.text import TfidfVectorizer, ENGLISH_STOP_WORDS

# Build the vectorizer
vect = TfidfVectorizer(stop_words=ENGLISH_STOP_WORDS, ngram_range=(1, 2), max_features=200, token_pattern=r'\b[^\d\W][^\d\W]+\b').fit(reviews.review)
# Create sparse matrix from the vectorizer
X = vect.transform(reviews.review)

# Create a DataFrame
reviews_transformed = pd.DataFrame(X.toarray(), columns=vect.get_feature_names())
print('Top 5 rows of the DataFrame: \n', reviews_transformed.head())

<script.py> output:
    Top 5 rows of the DataFrame: 
        able  action  actually  ago  album  ...  writing  written  wrong  year     years
    0   0.0     0.0       0.0  0.0    0.0  ...      0.0      0.0    0.0   0.0  0.000000
    1   0.0     0.0       0.0  0.0    0.0  ...      0.0      0.0    0.0   0.0  0.208885
    2   0.0     0.0       0.0  0.0    0.0  ...      0.0      0.0    0.0   0.0  0.152410
    3   0.0     0.0       0.0  0.0    0.0  ...      0.0      0.0    0.0   0.0  0.000000
    4   0.0     0.0       0.0  0.0    0.0  ...      0.0      0.0    0.0   0.0  0.000000
    
    [5 rows x 200 columns]

You have transfomed the text column using the TfidfVectorizer and created 200 numeric columns from the review. You are now ready to build a binary classifier predicting the sentiment of a review.

