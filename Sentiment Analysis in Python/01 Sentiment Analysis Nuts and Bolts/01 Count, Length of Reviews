Elements of a sentiment analysis problem
What are the three typical elements of a sentiment analysis system?

Opinion, emotion, and subject.
Emotion, polarity, and opinion.
Opinion, subject, and polarity.

#yes Opinion, subject, and opinion holder.












How many positive and negative reviews are there?
As a first step in a sentiment analysis task, similar to other data science problems, we might want to explore the dataset in more detail.
You will work with a sample of the IMDB movies reviews. A dataset called movies has been created for you. It is a sample of the data we saw in the slides. Feel free to explore it in the IPython Shell, calling the .head() method, for example.
Be aware that this exercise uses real data, and as such there is always a risk that it may contain profanity or other offensive content (in this exercise, and any following exercises that also use real data).

Find the number of positive and negative reviews in the movies dataset.
Find the proportion (percentage) of positive and negative reviews in the dataset.

# Find the number of positive and negative reviews
print('Number of positive and negative reviews: ', movies.label.value_counts())

    Number of positive and negative reviews:  0    530
                                              1    470
    Name: label, dtype: int64



# Find the proportion of positive and negative reviews
print('Proportion of positive and negative reviews: ', movies.label.value_counts() / len(movies))

    Proportion of positive and negative reviews:  0    0.53
                                                  1    0.47
    Name: label, dtype: float64
    
    
The .value_counts() method is an easy way to gain a first impression about the contents of the label column.














Longest and shortest reviews
In this exercise, you will continue to work with the movies dataset. You explored how many positive and negative reviews there are. Now your task is to explore the review column in more detail.

Use the review column of the movies dataset to find the length of the longest review.
length_reviews = movies.review.str.len()

# How long is the longest review
print(max(length_reviews))
<script.py> output:
    5992




Similarly, find the length of the shortest review.
# How long is the shortest review
print(min(length_reviews))

<script.py> output:
    53
