# part 1
#spaCy NER Categories
#Which are the extra categories that spacy uses compared to nltk in its named-entity recognition?
#NORP, CARDINAL, MONEY, WORKOFART, LANGUAGE, EVENT


# part 2
#Using the same text you used in the first exercise of this chapter, you'll now see the results using spaCy's NER annotator. How will they compare?
#The article has been pre-loaded as article. To minimize execution times, you'll be asked to specify the keyword arguments tagger=False, parser=False, matcher=False when loading the spaCy model, because you only care about the entity in this exercise.


# Import spacy
import spacy

#Load the 'en' model using spacy.load(). Specify the additional keyword arguments tagger=False, parser=False, matcher=False.
# Instantiate the English model: nlp
nlp = spacy.load('en', tagger=False, parser=False, matcher=False)


#Create a spacy document object by passing article into nlp().
# Create a new document: doc
doc = nlp(article)


#Using ent as your iterator variable, iterate over the entities of doc and print out the labels (ent.label_) and text (ent.text).
# Print all of the found entities and their labels
for ent in doc.ents:
    print(ent.label_, ent.text)

    ORG Uber
    ORG Apple
    ORG Uber
    ORG Uber
    PERSON Travis Kalanick
    ORG Uber
    PERSON Tim Cook
    ORG Apple
    CARDINAL Millions
    ORG Uber
    GPE drivers’
    LOC Silicon Valley’s
    ORG Yahoo
    PERSON Marissa Mayer
    MONEY $186m
    
    
    
