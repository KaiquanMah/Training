#part 1
#French NER with polyglot I
#In this exercise and the next, you'll use the polyglot library to identify French entities. The library functions slightly differently than spacy, so you'll use a few of the new things you learned in the last video to display the named entity text and category.
#You have access to the full article string in article. Additionally, the Text class of polyglot has been imported from polyglot.text.

# Create a new text object using Polyglot's Text class: txt
txt = Text(article)

Out[5]: 
Text("﻿édition abonné
Dans une tribune au « Monde », l’universitaire Charles Cuvelliez estime que le fantasme d’un remplacement de l’homme par l’algorithme et le robot repose sur un malentendu.
Le Monde | 10.05.2017 à 06h44 • Mis à jour le 10.05.2017 à 09h47 | Par Charles Cuvelliez (Professeur à l’Ecole polytechnique de l'université libre de Bruxelles)
TRIBUNE. L’usage morbide, par certains, de Facebook Live a amené son fondateur à annoncer précipitamment le recrutement de 3 000 modérat...prentissage sur des paramètres pour lesquels une vision humaine n’explique pas pourquoi ils marchent si bien dans un contexte donné.
C’est aussi ce que dit le rapport de l’Office parlementaire d’évaluation des choix scientifiques et technologiques (« Pour une intelligence artificielle maîtrisée, utile et démystifiée », 29 mars 2017), pour qui ce côté « boîte noire » explique des angoisses infondées. Ethiquement, se fonder sur l’IA pour des tâches critiques sans bien comprendre le comment...")


# Print each of the entities found
for ent in txt.entities:
    print(ent)

<script.py> output:
    ['Charles', 'Cuvelliez']
    ['Charles', 'Cuvelliez']
    ['Bruxelles']
    ['l’IA']
    ['Julien', 'Maldonato']
    ['Deloitte']
    ['Ethiquement']
    ['l’IA']
    ['.']
    
    
    
# Print the type of ent
print(type(ent))
#<class 'polyglot.text.Chunk'>





#part 2
French NER with polyglot II
#Here, you'll complete the work you began in the previous exercise.
#Your task is to use a list comprehension to create a list of tuples, in which the first element is the entity tag, and the second element is the full string of the entity text.

#Use a list comprehension to create a list of tuples called entities.
#The output expression of your list comprehension should be a tuple. Remember to use () to create the tuple.
#The first element of each tuple is the entity tag, which you can access using its .tag attribute.
#The second element is the full string of the entity text, which you can access using ' '.join(ent)
# Create the list of tuples: entities
entities = [(ent.tag, ' '.join(ent)) for ent in txt.entities]

# Print entities
print(entities)

#   [('I-PER', 'CharlesCuvelliez'), ('I-PER', 'CharlesCuvelliez'), ('I-ORG', 'Bruxelles'), ('I-PER', 'l’IA'), ('I-PER', 'JulienMaldonato'), ('I-ORG', 'Deloitte'), ('I-PER', 'Ethiquement'), ('I-LOC', 'l’IA'), ('I-PER', '.')]

