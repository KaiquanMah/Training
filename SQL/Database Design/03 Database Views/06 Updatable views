Updatable views
In a previous exercise, we've used the information_schema.views to get all the views in a database. If you take a closer look at this table, you will notice a column that indicates whether the view is updatable.


SELECT *
FROM information_schema.views




table_catalog	table_schema	table_name	view_definition	check_option	is_updatable	is_insertable_into	is_trigger_updatable	is_trigger_deletable	is_trigger_insertable_into
dataarchpost	pg_catalog	pg_shadow	 SELECT pg_authid.rolname AS usename,
                                      pg_authid.oid AS usesysid,
                                      pg_authid.rolcreatedb AS usecreatedb,
                                      pg_authid.rolsuper AS usesuper,
                                      pg_authid.rolreplication AS userepl,
                                      pg_authid.rolbypassrls AS usebypassrls,
                                      pg_authid.rolpassword AS passwd,
                                      (pg_authid.rolvaliduntil)::abstime AS valuntil,
                                      s.setconfig AS useconfig
                                     FROM (pg_authid
                                       LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))))
                                    WHERE pg_authid.rolcanlogin;	NONE	NO	NO	NO	NO	NO
dataarchpost	pg_catalog	pg_roles	 SELECT pg_authid.rolname,
                                      pg_authid.rolsuper,
                                      pg_authid.rolinherit,
                                      pg_authid.rolcreaterole,
                                      pg_authid.rolcreatedb,
                                      pg_authid.rolcanlogin,
                                      pg_authid.rolreplication,
                                      pg_authid.rolconnlimit,
                                      '********'::text AS rolpassword,
                                      pg_authid.rolvaliduntil,
                                      pg_authid.rolbypassrls,
                                      s.setconfig AS rolconfig,
                                      pg_authid.oid
                                     FROM (pg_authid
                                       LEFT JOIN pg_db_role_setting s ON (((pg_authid.oid = s.setrole) AND (s.setdatabase = (0)::oid))));	NONE	NO	NO	NO	NO	NO







SELECT table_name
FROM information_schema.views
WHERE is_updatable='YES'

table_name
long_reviews
pg_group
pg_stat_database
pg_stat_database_conflicts



Which views are updatable?
long_reviews and top_25_2017
top_25_2017
top_25_2017 and artist_title

#YES - long_reviews
Nice! long_reviews is updatable because it's made from one table and doesn't have any special clauses.


