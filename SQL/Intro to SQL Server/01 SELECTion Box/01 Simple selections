Simple selections
It's time to begin writing your own queries! In this first coding exercise, you will use SELECT statements to retrieve columns from a database table. You'll be working with the eurovision table, which contains data relating to individual country performance at the Eurovision Song Contest from 1998 to 2012.
After selecting columns, you'll also practice renaming columns, and limiting the number of rows returned.
https://en.wikipedia.org/wiki/Eurovision_Song_Contest

euro_id	event_year	country	gender	group_type	place	points	host_country	host_region	is_final	sf_number	song_in_english
1	2009	Israel	Female	Group	16	53	Away	Away	1	null	1
2	2009	France	Female	Solo	8	107	Away	Away	1	null	0
3	2009	Sweden	Female	Solo	21	33	Away	Away	1	null	1
...





SELECT the country column FROM the eurovision table.
-- SELECT the country column FROM the eurovision table
SELECT country
FROM eurovision

country
Israel
France
Sweden
...





Amend your query to return the points column instead of the country column.
-- Select the points column
SELECT points 
FROM eurovision;

points
53
107
33
...





Use TOP to change the existing query so that only the first 50 rows are returned.
-- Limit the number of rows returned
SELECT TOP (50) points 
FROM eurovision;

-- Limit the number of rows returned
SELECT TOP 50 points 
FROM eurovision;

-- Limit the number of rows returned
SELECT points 
FROM eurovision
LIMIT 50;

points
53
107
33
...






Return a list of unique countries using DISTINCT. Give the results an alias of unique_country.
-- Return unique countries and use an alias
SELECT DISTINCT country AS unique_country 
FROM eurovision;

unique_country
Albania
Andorra
Armenia
...


You can use AS within queries to rename columns and tables, and to provide an alias for the table results.

