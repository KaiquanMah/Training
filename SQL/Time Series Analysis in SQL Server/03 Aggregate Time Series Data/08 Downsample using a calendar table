Downsample using a calendar table
Management liked the weekly report but they wanted to see every week in 2020, not just the weeks with amenity usage. We can use a calendar table to solve this problem: the calendar table includes all of the weeks, so we can join it to the dbo.DaySpaVisit table to find our answers.
Management would also like to see the first day of each calendar week, as that provides important context to report viewers.


Calendar
DateKey	Date	Day	DayOfWeek	DayName	IsWeekend	DayOfWeekInMonth	CalendarDayOfYear	WeekOfMonth	CalendarWeekOfYear	CalendarMonth	MonthName	CalendarQuarter	CalendarQuarterName	CalendarYear	FirstDayOfMonth	LastDayOfMonth	FirstDayOfWeek	LastDayOfWeek	FirstDayOfQuarter	LastDayOfQuarter	CalendarFirstDayOfYear	CalendarLastDayOfYear	FirstDayOfNextMonth	CalendarFirstDayOfNextYear	FiscalDayOfYear	FiscalWeekOfYear	FiscalMonth	FiscalQuarter	FiscalQuarterName	FiscalYear	FiscalFirstDayOfYear	FiscalLastDayOfYear	FiscalFirstDayOfNextYear
20000101	2000-01-01	1	7	Saturday	true	1	1	1	1	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-01	2000-01-01	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	185	27	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000102	2000-01-02	2	1	Sunday	true	1	2	2	2	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-02	2000-01-08	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	186	28	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000103	2000-01-03	3	2	Monday	false	1	3	2	2	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-02	2000-01-08	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	187	28	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000104	2000-01-04	4	3	Tuesday	false	1	4	2	2	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-02	2000-01-08	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	188	28	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000105	2000-01-05	5	4	Wednesday	false	1	5	2	2	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-02	2000-01-08	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	189	28	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000106	2000-01-06	6	5	Thursday	false	1	6	2	2	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-02	2000-01-08	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	190	28	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000107	2000-01-07	7	6	Friday	false	1	7	2	2	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-02	2000-01-08	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	191	28	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000108	2000-01-08	8	7	Saturday	true	2	8	2	2	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-02	2000-01-08	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	192	28	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000109	2000-01-09	9	1	Sunday	true	2	9	3	3	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-09	2000-01-15	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	193	29	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
20000110	2000-01-10	10	2	Monday	false	2	10	3	3	1	January	1	Q1	2000	2000-01-01	2000-01-31	2000-01-09	2000-01-15	2000-01-01	2000-03-31	2000-01-01	2000-12-31	2000-02-01	2001-01-01	194	29	7	3	Q3	1999	1999-07-01	2000-06-30	2000-07-01
...


DaySpaVisit
CustomerID	CustomerVisitStart	CustomerVisitEnd	AmenityUseInMinutes
1	2020-06-18 14:56:00	2020-06-18 17:49:00	139
26	2020-06-16 12:04:00	2020-06-16 13:48:00	81
82	2020-06-06 13:12:00	2020-06-06 15:15:00	92
78	2020-07-14 21:13:00	2020-07-14 22:28:00	44
40	2020-06-21 15:17:00	2020-06-21 15:39:00	20
17	2020-07-16 20:29:00	2020-07-16 22:53:00	80
9	2020-07-05 00:55:00	2020-07-05 00:55:00	0
59	2020-06-16 06:06:00	2020-06-16 08:28:00	94
34	2020-07-11 02:25:00	2020-07-11 05:48:00	119
37	2020-06-19 11:22:00	2020-06-19 12:58:00	79
66	2020-07-09 10:49:00	2020-07-09 12:31:00	87
79	2020-06-20 14:36:00	2020-06-20 17:08:00	89
...



Find and include the week of the calendar year.
Include the minimum value of c.Date in each group as FirstDateOfWeek. This works because we are grouping by week.
Join the Calendar table to the DaySpayVisit table based on the calendar table's date and each day spa customer's date of visit. CustomerVisitStart is a DATETIME2 which includes time, so a direct join would only include visits starting at exactly midnight.
Group by the week of calendar year.
SELECT
	-- Determine the week of the calendar year
	c.CalendarWeekOfYear,
	-- Determine the earliest date in this group
	MIN(c.Date) AS FirstDateOfWeek,
	ISNULL(SUM(dsv.AmenityUseInMinutes), 0) AS AmenityUseInMinutes,
	ISNULL(MAX(dsv.CustomerID), 0) AS HighestCustomerID,
	COUNT(dsv.CustomerID) AS NumberOfAttendees
FROM dbo.Calendar c
	LEFT OUTER JOIN dbo.DaySpaVisit dsv
		-- Connect dbo.Calendar with dbo.DaySpaVisit
		-- Remember that CustomerVisitStart is a DATETIME2 with time,
        -- so we need to turn it into a DATE type
		ON c.Date = CAST(dsv.CustomerVisitStart AS DATE)
WHERE
	c.CalendarYear = 2020
GROUP BY
	-- Arrange into groups
	c.CalendarWeekOfYear
ORDER BY
	c.CalendarWeekOfYear;
  
  
  


CalendarWeekOfYear	FirstDateOfWeek	AmenityUseInMinutes	HighestCustomerID	NumberOfAttendees
1	2020-01-01	117002	90	1334
2	2020-01-05	206917	90	2348
3	2020-01-12	204806	90	2289
4	2020-01-19	206902	90	2319
5	2020-01-26	205809	90	2334
6	2020-02-02	206992	90	2316
7	2020-02-09	206435	90	2328
8	2020-02-16	205300	90	2321
9	2020-02-23	210065	90	2334
10	2020-03-01	207455	90	2312
11	2020-03-08	208575	90	2339
12	2020-03-15	208557	90	2323
13	2020-03-22	204293	90	2315
14	2020-03-29	211310	90	2351
15	2020-04-05	206128	90	2321
16	2020-04-12	206379	90	2298
17	2020-04-19	208190	90	2335
18	2020-04-26	205659	90	2344
19	2020-05-03	205358	90	2311
20	2020-05-10	210072	90	2341
21	2020-05-17	211837	90	2344
22	2020-05-24	208153	90	2300
23	2020-05-31	203517	90	2321
24	2020-06-07	205594	90	2339
25	2020-06-14	206722	90	2327
26	2020-06-21	209326	90	2330
27	2020-06-28	205072	90	2331
28	2020-07-05	205056	90	2294
29	2020-07-12	203780	90	2276
30	2020-07-19	195711	90	2145
31	2020-07-26	172861	90	1934
32	2020-08-02	138231	90	1554
33	2020-08-09	97191	90	1103
34	2020-08-16	65563	90	736
35	2020-08-23	37691	90	411
36	2020-08-30	8449	81	93
37	2020-09-06	2641	14	27
38	2020-09-13	2160	14	23
39	2020-09-20	0	0	0
40	2020-09-27	0	0	0
41	2020-10-04	0	0	0
42	2020-10-11	0	0	0
43	2020-10-18	0	0	0
44	2020-10-25	0	0	0
45	2020-11-01	0	0	0
46	2020-11-08	0	0	0
47	2020-11-15	0	0	0
48	2020-11-22	0	0	0
49	2020-11-29	0	0	0
50	2020-12-06	0	0	0
51	2020-12-13	0	0	0
52	2020-12-20	0	0	0
53	2020-12-27	0	0	0



We can now see weeks even when they have no source data, which can be quite helpful for analysis. Calendar tables can also help with more complicated upsampling scenarios such as grouping by calendar quarter or grouping by day of the week or in 8-day intervals. As long as you have a column representing how you want to group data, you can downsample to that grain.

