Define immutable variables (val)
Scala has two kinds of variables: val and var. val are immutable, which means once initialized, they can't be reassigned.

In Twenty-One, a val is like any non-ace card. That is, 2 through 10 (worth 2 through 10 points) and all face cards (jack, queen, and king are worth 10 points) all have the same point value throughout the game.
#https://en.wikipedia.org/wiki/Twenty-One_(card_game)

In this exercise, you will define variables for some non-ace cards, each as a val of type Int (one of the four most common value types for data-related tasks). In the next lesson, you'll learn why immutable variables are preferred in Scala.



// Define immutable variables for clubs 2♣ through 4♣
val twoClubs: Int = 2
val threeClubs: Int = 3
val fourClubs: Int = 4















Don't try to change me
Imagine a three-player game of Twenty-One with your friends Alex, Chen, and Marta. Then imagine Marta dropping out of the game and your friend Umberto joining in her place. Note that player names are of type String, which is a sequence of Char in Scala. String is also commonly used in data-related tasks.

In this exercise, you will define immutable variables (val) then try to reassign them. You will encounter an error. Seeing this error message in a controlled setting will help you interpret this message and similar ones when you're coding on your own in the future.



1. Define playerA, playerB, and playerC as immutable variables with the strings "Alex", "Chen", and "Marta", respectively.
2. Read the code that reassigns playerC to "Umberto". Click "Run Code" and observe the error.

// Define immutable variables for player names
val playerA: String = "Alex"
val playerB: String = "Chen"
val playerC: String = "Marta"

// Change playerC from Marta to Umberto
playerC = "Umberto"


In <stdout> on line 6: reassignment to val
val res1_3 = playerC = "Umberto"
                     ^Compilation Failed





3. Delete the code that reassigns playerC to "Umberto".
4. Change the original playerC variable definition from "Marta" to "Umberto".

// Define immutable variables for player names
val playerA: String = "Alex"
val playerB: String = "Chen"
val playerC: String = "Umberto"

playerA: String = "Alex"
playerB: String = "Chen"
playerC: String = "Umberto"



Error messages aren't that scary! 
You weren't able to reassign playerC because it is a val. 
If you anticipate you'll need to change a variable, you should use a mutable variable (var), which you'll learn about next.

