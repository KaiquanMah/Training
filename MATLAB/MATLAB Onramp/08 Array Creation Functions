MATLAB contains many functions that help you to create commonly used matrices, such as matrices of random numbers.
x = rand(2)
x = 
    0.8147    0.1270
    0.9058    0.9134
Note that the 2 in the command rand(2) specifies that the output will be a 2-by-2 matrix of random numbers.
TASK
Create a variable named x that is a 5-by-5 matrix of random numbers.

Task 1
x = rand(5)

>> x
x =
   0.814723686393179   0.097540404999410   0.157613081677548   0.141886338627215   0.655740699156587
   0.905791937075619   0.278498218867048   0.970592781760616   0.421761282626275   0.035711678574190
   0.126986816293506   0.546881519204984   0.957166948242946   0.915735525189067   0.849129305868777
   0.913375856139019   0.957506835434298   0.485375648722841   0.792207329559554   0.933993247757551
   0.632359246225410   0.964888535199277   0.800280468888800   0.959492426392903   0.678735154857773











Many matrix creation functions allow you to input one number to create a square matrix (n-by-n) or input two numbers to create nonsquare matrices.
x = rand(2)
x = 
    0.8147    0.1270
    0.9058    0.9134

x = rand(2,3)
x = 
    0.6324    0.2785    0.9575
    0.0975    0.5469    0.9649
TASK
Use rand to create an array that contains 5 rows and 1 column. Assign the result to a variable named x.

Task 2
x = rand(5, 1)

>> x
x =
   0.757740130578333
   0.743132468124916
   0.392227019534168
   0.655477890177557
   0.171186687811562

 









Most array creation functions accept the same inputs as rand. For example, the zeros and ones functions create matrices of all zeros or ones, respectively.
x = ones(2,3)
x = 
    1    1    1
    1    1    1
TASK
Use the zeros function to create a matrix of all zeros that has 6 rows and 3 columns (6-by-3). Assign the result to a variable named x.

Task 3
x = zeros(6, 3)

>> x
x =
     0     0     0
     0     0     0
     0     0     0
     0     0     0
     0     0     0
     0     0     0

 











How do you get the size of an existing matrix? You can use the size function.
size(x)

You can also create a matrix with the same size as an existing matrix in one line of code.
rand(size(x))

Further Practice
y = size(x)
rand(size(x))

>> y
y =
     6     3

>> rand(size(x))
ans =
   0.917193663829810   0.075854289563064   0.568823660872193
   0.285839018820374   0.053950118666607   0.469390641058206
   0.757200229110721   0.530797553008973   0.011902069501241
   0.753729094278495   0.779167230102011   0.337122644398882
   0.380445846975357   0.934010684229183   0.162182308193243
   0.567821640725221   0.129906208473730   0.794284540683907









 



