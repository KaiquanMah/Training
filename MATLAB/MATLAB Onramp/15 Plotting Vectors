Plotting Vectors
Instructions are in the task pane to the left. Complete and submit each task one at a time.

This code sets up the interaction.
load datafile
sample = data(:,1);
density = data(:,2);
v1 = data(:,3);
v2 = data(:,4);
mass1 = density.*v1;
mass2 = density.*v2;






Two vectors of the same length can be plotted against each other using the plot function.
plot(x,y)
TASK
Create a plot with sample on the x-axis and mass1 on the y-axis.

Task 1
plot(sample, mass1)








The plot function accepts an additional argument that allows you to specify the color, line style, and marker style using different symbols in single quotes.
plot(x,y,"r--o")
The command above plots a red (r) dashed (--) line with a circle (o) as a marker. You can learn more about the symbols available in the documentation for Line Specification.
TASK
Plot mass2 (y-axis) against sample (x-axis). Use red (r) star (*) markers and no line in your plot.

Task 2
plot(sample, mass2, "r*")







Notice that each plot command created a separate plot. To plot one line on top of another, use the hold on command to hold the previous plot while you add another line.
plot(x1,y1)
hold on
plot(x2,y2)
TASK
Enter the hold on command.
Then plot mass1 (y-axis) against sample (x-axis) with black (k) square (s) markers and no line.

Task 3
hold on
plot(sample, mass1, "ks")







While the hold state is on, plots will continue to go on the same axes. To return to the default plot behavior, where each plot gets its own axes, enter hold off.
TASK
Enter the hold off command.

Task 4
hold off






When you plot a single vector by itself, MATLAB uses the vector values as the y-axis data and sets the x-axis data to range from 1 to n (the number of elements in the vector).
TASK
Plot the vector v1 using the command below.
plot(v1)

Task 5
plot(v1)





The plot function accepts optional additional inputs consisting of a property name and an associated value.
plot(y,"LineWidth",5)
The command above plots a heavy line. You can learn more about available properties in the documentation for Line Properties.
TASK
Plot v1 with a line width of 3.
https://www.mathworks.com/help/matlab/ref/matlab.graphics.chart.primitive.line-properties.html

Task 6
plot(v1, "LineWidth", 3)







You can provide additional inputs to the plot function after the line specifier.
plot(x,y,"ro-","LineWidth",5)
TASK
Plot v1 (y-axis) against sample (x-axis) with red (r) circle (o) markers and a solid line (-). Use a line width of 4.

Task 7
plot(sample, v1, "r-o","LineWidth",4)












The plot function creates lines. There are many other plotting functions in MATLAB. You can see an extensive list in the MATLAB Plot Gallery.
Each plot has different customization options. Try creating a histogram of density with the histogram function. Set the "FaceColor" to yellow ("y").
https://www.mathworks.com/products/matlab/plot-gallery.html

Further Practice
histogram(density, 'FaceColor', 'y')


>> help histogram
 histogram  Plots a histogram.
    histogram(X) plots a histogram of X. histogram uses an automatic binning 
    algorithm that returns bins with a uniform width, chosen to cover the 
    range of elements in X and reveal the underlying shape of the distribution.  
    X can be of numeric, datetime, or duration types, and can be a vector, 
    matrix, or multidimensional array. If X is not a vector, then histogram 
    treats it as a single column vector, X(:), and plots a single histogram.
 
    histogram(X,M), where M is a scalar, uses M bins.
 
    histogram(X,EDGES), where EDGES is a vector, specifies the edges of 
    the bins.
 
    The value X(i) is in the kth bin if EDGES(k) <= X(i) < EDGES(k+1). The 
    last bin will also include the right edge such that it will contain X(i)
    if EDGES(end-1) <= X(i) <= EDGES(end).
 
    histogram(...,'BinWidth',BW) uses bins of width BW. If X is datetime, 
    BW must be a scalar duration or calendarDuration. To prevent from accidentally
    creating too many bins, a maximum of 65536 bins can be created when
    specifying 'BinWidth'. If BW is too small such that more bins
    are needed, histogram uses a larger bin width corresponding 
    to the maximum number of bins.
 
    histogram(...,'BinLimits',[BMIN,BMAX]) plots a histogram with only 
    elements in X between BMIN and BMAX inclusive, X(X>=BMIN & X<=BMAX).
 
    histogram(...,'Normalization',NM) specifies the normalization scheme 
    of the histogram values. The normalization scheme affects the scaling 
    of the histogram along the vertical axis (or horizontal axis if 
    Orientation is 'horizontal'). NM can be:
                   'count'   The height of each bar is the number of 
                             observations in each bin. The sum of the
                             bar heights is generally equal to NUMEL(X),
                             but is less than if some of the input 
                             data is not included in the bins.
             'probability'   The height of each bar is the relative 
                             number of observations (number of observations
                             in bin / total number of observations), and
                             the sum of the bar heights is less than or 
                             equal to 1.
            'countdensity'   The height of each bar is the number of 
                             observations in each bin / width of bin. The 
                             area (height * width) of each bar is the number
                             of observations in the bin, and the sum of
                             the bar areas is less than or equal to NUMEL(X). 
                             This option is not supported for datetime or 
                             duration data.
                     'pdf'   Probability density function estimate. The height 
                             of each bar is, (number of observations in bin)
                             / (total number of observations * width of bin).
                             The area of each bar is the relative number of
                             observations, and the sum of the bar areas is 
                             less than or equal to 1. This option is not 
                             supported for datetime or duration data.
                'cumcount'   The height of each bar is the cumulative 
                             number of observations in each bin and all
                             previous bins. The height of the last bar
                             is less than or equal to NUMEL(X).
                     'cdf'   Cumulative density function estimate. The height 
                             of each bar is the cumulative relative number
                             of observations in each bin and all previous bins.
                             The height of the last bar is less than or equal 
                             to 1.
 
    histogram(...,'DisplayStyle',STYLE) specifies the display style of the 
    histogram. STYLE can be:
                     'bar'   Display a histogram bar plot. This is the default.
                  'stairs'   Display a stairstep plot, which shows the 
                             outlines of the histogram without filling the 
                             interior. 
 
    histogram(...,'BinMethod',BM), uses the specified automatic binning 
    algorithm to determine the number and width of the bins. BM can be:
                    'auto'   The default 'auto' algorithm chooses a bin 
                             width to cover the data range and reveal the 
                             shape of the underlying distribution.
                   'scott'   Scott's rule is optimal if the data is close  
                             to being normally distributed, but is also 
                             appropriate for most other distributions. It 
                             uses a bin width of 
                             3.5*STD(X(:))*NUMEL(X)^(-1/3).
                      'fd'   The Freedman-Diaconis rule is less sensitive  
                             to outliers in the data, and may be more 
                             suitable for data with heavy-tailed 
                             distributions. It uses a bin width of 
                             2*IQR(X(:))*NUMEL(X)^(-1/3), where IQR is the 
                             interquartile range.
                'integers'   The integer rule is useful with integer data, 
                             as it creates a bin for each integer. It uses 
                             a bin width of 1 and places bin edges halfway 
                             between integers. This option is not 
                             supported for datetime or duration data.
                 'sturges'   Sturges' rule is a simple rule that is popular
                             due to its simplicity. It chooses the number 
                             of bins to be CEIL(1 + LOG2(NUMEL(X))).
                    'sqrt'   The Square Root rule is another simple rule 
                             widely used in other software packages. It 
                             chooses the number of bins to be
                             CEIL(SQRT(NUMEL(X))).
    For datetime data, BM can also be the following time units: 'second', 
    'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year', 'decade', 
    or 'century'. For duration data, BM can be these time units: 'second', 
    'minute', 'hour', 'day', 'year'. If BM is a time unit, histogram places 
    bin edges at boundaries of the time unit.
 
    To prevent from accidentally creating too many bins, a maximum of 65536 
    bins can be created when specifying 'BinMethod'. If the data range is 
    too large and more bins are needed, histogram uses a larger bin width 
    corresponding to the maximum number of bins.
 
    histogram(...,NAME,VALUE) set the property NAME to VALUE. 
      
    histogram('BinEdges', EDGES, 'BinCounts', COUNTS) where COUNTS is a 
    vector of length equal to length(EDGES)-1, manually specifies
    the bin counts. histogram plots the counts and does not do any data binning.
 
    histogram(AX,...) plots into AX instead of the current axes.
        
    H = histogram(...) also returns a histogram object. Use this to inspect 
    and adjust the properties of the histogram.
 
    Class support for inputs X, EDGES:
       float: double, single
       integers: uint8, int8, uint16, int16, uint32, int32, uint64, int64
       logical
       datetime, duration
 
    See also histcounts, histogram2, histcounts2, discretize, matlab.graphics.chart.primitive.Histogram

    Documentation for histogram
    Other functions named histogram












>> sample

sample =

     3
    18
    19
    20
    21
    23
    38

>> density

density =

    0.5300
    1.7800
    0.8600
    1.6000
    3.0000
    6.1100
    2.5400

>> v1

v1 =

    4.0753
    6.6678
    1.5177
    3.6375
    4.7243
    9.0698
    5.3002

>> 
>> v2

v2 =

    0.5000
    2.1328
    3.6852
    8.5389
   10.1570
    2.8739
    4.4508

>> mass1

mass1 =

    2.1599
   11.8687
    1.3052
    5.8200
   14.1729
   55.4165
   13.4626

>> mass2

mass2 =

    0.2650
    3.7964
    3.1693
   13.6622
   30.4710
   17.5595
   11.3050
