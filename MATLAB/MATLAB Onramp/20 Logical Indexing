Logical Indexing
Instructions are in the task pane to the left. Complete and submit each task one at a time.

This code sets up the interaction.
load datafile
sample = data(:,1);
v1 = data(:,3);



>> data
data =
    3.0000    0.5300    4.0753    0.5000
   18.0000    1.7800    6.6678    2.1328
   19.0000    0.8600    1.5177    3.6852
   20.0000    1.6000    3.6375    8.5389
   21.0000    3.0000    4.7243   10.1570
   23.0000    6.1100    9.0698    2.8739
   38.0000    2.5400    5.3002    4.4508

>> sample
sample =
     3
    18
    19
    20
    21
    23
    38

>> v1
v1 =

    4.0753
    6.6678
    1.5177
    3.6375
    4.7243
    9.0698
    5.3002










Relational operators, such as >, <, ==, and ~= perform comparisons between two values. The outcome of a comparison for equality or inequality is either 1 (true) or 0 (false).
TASK
Use the relational operator, <, to test if π is less than 4. Assign the output to a variable named test.
https://www.mathworks.com/help/matlab/matlab_prog/array-comparison-with-relational-operators.html

Task 1
test = (pi < 4)

>> test

test = 

1







You can compare a vector or matrix to a single scalar value using relational operators. The result is a logical array of the same size as the original array.
[5 10 15] > 12
ans = 
    0    0    1
TASK
Test the vector v1 for elements that are less than 4. Assign the output to a variable named test.

Task 2
test = v1 < 4

>> test

test =

  7×1 logical array

   0
   0
   1
   1
   0
   0
   0
   
   
   
   
   
   
   
   









You can use a logical array as an array index, in which case MATLAB extracts the array elements where the index is true. The following example will extract all elements in v1 that are greater than six.
v = v1(v1 > 6)
v =
    6.6678
    9.0698
TASK
Create a variable v containing all the elements in v1 that are less than four.

Task 3
v = v1(v1<4)


>> v
v =

    1.5177
    3.6375


   
   









You can also use logical indexing with two different vectors.
v = sample(v1 > 6)
v =
    18
    23
TASK
Create a variable s that contains the elements in sample corresponding to where v1 is less than 4.

Task 4
s = sample(v1<4)

>> s

s =

    19
    20

 











You can use logical indexing to reassign values in an array. For example, if you wish to replace all values in the array x that are equal to 999 with the value 1, use the following syntax.
x(x==999) = 1
TASK
Modify v1 so that any value less than 4 is replaced with the value 0.

Task 5
v1(v1<4) = 0

>> v1

v1 =

    4.0753
    6.6678
         0
         0
    4.7243
    9.0698
    5.3002

 









You can use the logical operators and (&) and or (|) to combine logical comparisons.
To find values less than 4 and greater than 2, use &:
x = v1(v1<4 & v1>2)
To find values greater than 6 or less than 2, use |:
x = v1(v1>6 | v1<2)
Try getting the values in sample that are between 10 and 20.

Further Practice
sample(sample>10 & sample<20)

>> sample(sample>10 & sample<20)

ans =

    18
    19




