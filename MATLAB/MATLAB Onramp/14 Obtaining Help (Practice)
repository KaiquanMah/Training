Obtaining Help
Instructions are in the task pane to the left. Complete and submit each task one at a time.

>> help randi

randi Pseudorandom integers from a uniform discrete distribution.
    R = randi(IMAX,N) returns an N-by-N matrix containing pseudorandom
    integer values drawn from the discrete uniform distribution on 1:IMAX.
    randi(IMAX,M,N) or randi(IMAX,[M,N]) returns an M-by-N matrix.
    randi(IMAX,M,N,P,...) or randi(IMAX,[M,N,P,...]) returns an
    M-by-N-by-P-by-... array.  randi(IMAX) returns a scalar.
    randi(IMAX,SIZE(A)) returns an array the same size as A.
 
    R = randi([IMIN,IMAX],...) returns an array containing integer
    values drawn from the discrete uniform distribution on IMIN:IMAX.
 
    Note: The size inputs M, N, P, ... should be nonnegative integers.
    Negative integers are treated as 0.
 
    R = randi(..., CLASSNAME) returns an array of integer values of class
    CLASSNAME.
 
    R = randi(..., 'like', Y) returns an array of integer values of the
    same class as Y.
 
    The arrays returned by randi may contain repeated integer values.  This
    is sometimes referred to as sampling with replacement.  To get unique
    integer values, sometimes referred to as sampling without replacement,
    use RANDPERM.
 
    The sequence of numbers produced by randi is determined by the settings of
    the uniform random number generator that underlies RAND, RANDN, and randi.
    randi uses one uniform random value to create each integer random value.
    Control that shared random number generator using RNG.
 
    Examples:
 
       Example 1: Generate integer values from the uniform distribution on
       the set 1:10.
          r = randi(10,100,1);
 
       Example 2: Generate an integer array of integer values drawn uniformly
       from 1:10.
          r = randi(10,100,1,'uint32');
 
       Example 3: Generate integer values drawn uniformly from -10:10.
          r = randi([-10 10],100,1);
 
       Example 4: Reset the random number generator used by RAND, randi, and
       RANDN to its default startup settings, so that randi produces the same
       random numbers as if you restarted MATLAB.
          rng('default');
          randi(10,1,5)
 
       Example 5: Save the settings for the random number generator used by
       RAND, randi, and RANDN, generate 5 values from randi, restore the
       settings, and repeat those values.
          s = rng
          i1 = randi(10,1,5)
          rng(s);
          i2 = randi(10,1,5) % i2 contains exactly the same values as i1
 
       Example 6: Reinitialize the random number generator used by RAND,
       randi, and RANDN with a seed based on the current time.  randi will
       return different values each time you do this.  NOTE: It is usually
       not necessary to do this more than once per MATLAB session.
          rng('shuffle');
          randi(10,1,5)
 
    See also rand, randn, randperm, rng, RandStream

    Documentation for randi
    Other functions named randi
 
















The MATLAB documentation contains examples and information that can help you when working on your own problems.
TASK
Use the documentation for randi to help complete the task below.

Create a matrix named x that
Contains random integers in the range from 1 to 20
Has 5 rows
Has 7 columns

Task 1
x = randi([1,20], [5,7])

>> x

x =

    17     2     4     3    14    16    15
    19     6    20     9     1    15     1
     3    11    20    19    17     8     6
    19    20    10    16    19    14     1
    13    20    17    20    14     4     2









You can also open the documentation using the doc function. Try opening the documentation for randi with the code below:
doc randi
Search the documentation to create a 5-by-7 matrix with normally distributed numbers (instead of uniformly distributed numbers).

Further Practice
% doc randi
xn = randn([5,7])

>> xn

xn =

    1.4384   -0.1022   -0.0301   -0.8637    1.5326   -1.0891    0.0859
    0.3252   -0.2414   -0.1649    0.0774   -0.7697    0.0326   -1.4916
   -0.7549    0.3192    0.6277   -1.2141    0.3714    0.5525   -0.7423
    1.3703    0.3129    1.0933   -1.1135   -0.2256    1.1006   -1.0616
   -1.7115   -0.8649    1.1093   -0.0068    1.1174    1.5442    2.3505

 





