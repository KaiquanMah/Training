Function
% Matrix M
% compute the sum of elements to the top right of the matrix and along its diagonal
% To get the no of non zero columns: sum( all( a == 0, 1 ) );
% To get the no of non zero rows: sum( all( a == 0, 2 ) );
function summa = halfsum(M)
    % get # rows, # cols for your Matrix M
    [a b] = size(M);
    
    
    % if M has more than 1 row
    if a>1
     
     % iterate col by col for each row -> therefore put the for loop for each row in the outer loop
     % iterate from row 1 to row a
     for m = 1:a;
        % iterate from col 1 to col b
        for n = 1:b;
            
            % if row # is > col #
            % set the element at (row m, col n) to 0
            % then during every iteration, keep getting a new sum of elements along each row -> then sum up across each row's sum to get just 1 final sum/scalar value
            if m>n;
                M(m,n) = 0;
                summa = sum(sum(M));
            end
            
        end
     end 
     
    else 
        % just sum the elements in the one and only row
        summa = sum(M);
    end
        
end













Code to call your functionMore
summa = halfsum([1 2 3; 4 5 6; 7 8 9])




Output
summa =
    26
    
    
    
