Defining Optimization Variables 
Instructions are in the task pane to the left. Complete and submit each task one at a time.
Do not edit. This code initializes the optimization problem
prob = optimproblem("Description","Factory Location")






You can define optimization variables using the optimvar function.
varname = optimvar("varname")

This stores a symbolic optimization variable called varname in your workspace. The optimvar function requires a variable name as its first input. As a best practice, varname should be the same as the MATLAB variable name to avoid confusion.
TASK
Create a symbolic optimization variable x that represents the x-coordinate of your factory. Name the variable "x".  


Task 1
x = optimvar("x")










TASK
Create a symbolic optimization variable y that represents the y-coordinate of your factory. Give the variable an appropriate name. 


Task 2
y = optimvar("y")









While your optimization variables appear in the workspace, they have not yet been stored in your optimization problem.
MATLAB will automatically store your variables in the problem once you have used them to create an objective function.
TASK
Use the show function to verify that your optimization problem is still empty.

Task 3
show(prob)








The variables that you have defined in this example impact the shipping distances traveled by your drones. Try using the sliders to change the x and y position of the factory to see how they impact the total shipping distance. Note that the function plotOptProblem is specifically for visualizing the current example and is not part of the Optimization Toolbox.
In the following section, you will use these variables to create your objective and store it in your optimiziation problem.

Further Practice
x_pos = 30;
y_pos = 60;
plotOptProblem(x_pos,y_pos);








>> show(prob)

  OptimizationProblem : Factory Location

  No problem defined.
  
  
  
  
  
  
>> x

x = 

  OptimizationVariable with properties:

          Name: 'x'
          Type: 'continuous'
    IndexNames: {{}  {}}
    LowerBound: -Inf
    UpperBound: Inf

  See variables with show.
  See bounds with showbounds.

>> y

y = 

  OptimizationVariable with properties:

          Name: 'y'
          Type: 'continuous'
    IndexNames: {{}  {}}
    LowerBound: -Inf
    UpperBound: Inf

  See variables with show.
  See bounds with showbounds.

