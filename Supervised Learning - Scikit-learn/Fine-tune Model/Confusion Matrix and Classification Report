# Objective: Train a k-NN classifier with the data and evaluate the model's performance by generating a confusion matrix and classification report.
# Import modules
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report

# Create training and test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.40, random_state = 42)

# Instantiate a k-NN classifier: knn
knn = KNeighborsClassifier(n_neighbors = 6)

# Fit the classifier to the training data
knn.fit(X_train, y_train)

# Predict the labels of the test data: y_pred
y_pred = knn.predict(X_test)

# Generate the confusion matrix and classification report
# Confusion matrix contains counts of true positive, false positive, true negative and false negative
# Classification report contains precision, recall and F1-score information
# Precision = TP/(TP+FP)
# Recall = TP/(TP+FN)
print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

