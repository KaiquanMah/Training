Listing databases and collections
Our MongoClient object is not actually a dictionary, so we can't call keys() to list the names of accessible databases. The same is true for listing collections of a database. Instead, we can list database names by calling .list_database_names() on a client instance, and we can list collection names by calling .list_collection_names() on a database instance.




# Save a list of names of the databases managed by client
db_names = client.list_database_names()
print(db_names)
    ['admin', 'config', 'local', 'nobel']

# Save a list of names of the collections managed by the "nobel" database
nobel_coll_names = client.nobel.list_collection_names()
print(nobel_coll_names)
    ['laureates', 'prizes']


#Did you notice any strange database/collection names? Every Mongo host has 'admin' and 'local' databases for internal bookkeeping, and every Mongo database has a 'system.indexes' collection to store indexes that make searches faster.




In [5]: client.admin.list_collection_names()
Out[5]: ['system.version']

In [6]: client.config.list_collection_names()
Out[6]: ['system.sessions']

In [7]: client.local.list_collection_names()
Out[7]: ['startup_log']
