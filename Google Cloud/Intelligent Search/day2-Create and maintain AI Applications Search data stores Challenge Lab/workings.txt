Create and maintain AI Applications Search data stores: Challenge Lab
Task 1. Create an Unstructured Data Store for a RAG Application
Task 2. Create a Structured Data Store with periodic synching
Task 3. Create a data store for Website search
Task 4. Create a data store for the Cloud Healthcare API
Task 5. Create a data store for custom embeddings
Task 6. Create a data store connected to Google Drive
Task 7. Verify your data stores and applications
Task 8. Add data to an existing data store
Task 9. Delete an application and a data store

tasks:
Configure authentication for AI Applications.
Create and set up multiple data stores (RAG, structured data, website search).
Integrate a custom embedding model for optimized search.
Build an AI assistant that retrieves and processes relevant information.
Enable Google Drive integration for document-based queries.


user1
student-00-268eae8e30bb@qwiklabs.net
user2
student-00-10f468526ffa@qwiklabs.net
project
qwiklabs-gcp-00-3878bf15c313




======================



Task 1. Create an Unstructured Data Store for a RAG Application

source - cloud storage
data - Unstructured documents (PDF, HTML, TXT and more)
sync frequency - one time
folder - gs://cloud-samples-data/gen-app-builder/search/cymbal-bank-employee/
multi-region - global
Data store name -	rag-data-store
Default document parser -	Layout Parser





Create an AI Applications Custom search application with the following settings:
App Type - Custom search (general)

Setting	Value
Enterprise edition features	Enabled
Generative Responses	Enabled
App name	rag-search
Company name	Cymbal Bank
Multi-region	global
Data Stores	rag-data-store



 





======================



Task 2. Create a Structured Data Store with periodic synching from BigQuery



create a new data store with the following settings:

Setting	Value
Source	[select the right type] - BigQuery
Kind of data	[select the right type]
- WRONG		BigQuery table with metadata preview (BigQuery table that contains structured data with metadata about them. Prepare the table for the import with a Google-specified schema.)
- CORRECT	BigQuery table with your own schema preview (BiqQuery table that contains your structured data. Your schema will be auto-detected.)



Synchronization frequency	Periodic
Sync frequency	Every day
Dataset	lab_dataset			- qwiklabs-gcp-00-3878bf15c313.lab_dataset
Table to import	order_info
Multi-region	global
Data connector name	structured-data-store


Confirm that your datastore was created, and check the Connector state. The connector will show as creating. Confirm that the Sync frequency is set correctly.











Create an AI Applications Custom search application with the following settings:

Setting	Value
Enterprise edition features	Enabled
Generative Responses	Enabled
App name	structured-search
Company name	Cymbal Direct
Multi-region	global
Data Stores	[select the right data store]		- structured-data-store
Configure your application Search type as Search with an answer.

Note: It will take a few minutes for the import to complete, and a couple more for the search application to be fully functional. Move on to the next task for now, and later in the lab you will test out your application.






======================


Task 3. Create a data store for Website search


In this section, you will create a website search data store using AI Applications. You will configure the data store to include only relevant online documentation while excluding dynamic URLs to improve search quality and reduce indexing costs. After setting up the data store, you will build a Site search with AI mode application, ensuring users can retrieve accurate information efficiently.


To ensure high-quality search results while optimizing costs and performance, you need to:
Include only relevant content from specific websites.
Exclude dynamic URLs that could lead to irrelevant search results or index bloat.
Use a basic indexing approach to minimize costs.


You will build a data store with the required settings and test it with a search application.
Note: Edit all the website URLs below to have the appropriate pattern to include or exclude all pages that start with the given URLs.

You can use the operations listed below
Entire site: www.mysite.com/*
Parts of site: www.mysite.com/faq/*
Entire domain: *.mysite.com/*
Quotes for exact match: "www.mysite.com/faq"
Sites without quotes will match any path after the specified address:
www.mysite.com/faq â†’ www.mysite.com/faq*.


Include content from pages that start with:
INCORRECT
cloud.google.com/generative-ai-app-builder/docs/*
cloud.google.com/python/docs/reference/discoveryengine/latest/*
github.com/googleapis/google-cloud-python/tree/main/*
CORRECT
cloud.google.com/generative-ai-app-builder/docs*
cloud.google.com/python/docs/reference/discoveryengine/latest*
github.com/googleapis/google-cloud-python/tree/main*

Exclude dynamic search query URLs that start with:
cloud.google.com/s/results/generative-ai-app-builder/docs?q*
cloud.google.com/s/results/python/docs/reference?q*
github.com/search?q*

>>DO NO SPECIFY HTTP/HTTPS PROTOCOL
>>DO NOT SPECIFY WILDCARD (*) IN FRONT OF THE 1ST CHARACTER
>>START W DOMAIN NAME EG gitHub.com / cloud.google.com




Build a basic indexing data store
In AI Applications, create a new data store with the following settings:

Setting	Value
Source	[select the right type] - Website Content
Advanced website indexing	Disabled
Sites to include	[enter the right patterns]
Sites to exclude	[enter the right patterns]
Data store name	web-data-store








Create an AI Applications Site search with AI mode application with the following settings (keep in mind you are using basic indexing):

Setting	Value
Enterprise edition features	Enabled
Generative Responses	Disabled
App name	website-search-app
Company name	Cymbal Fintech
Multi-region	global
Data Stores	[select the right data store]








Consider advanced indexing
Creation of advanced indexing Website data stores isn't supported in the lab environment, but it is important to understand the features and benefits of this type of data store. Please answer the following questions:


What additional features does advanced indexing enable? (Select all that are correct)
YES	Extractive segments
YES	Search with summarization
YES	Lower search latencies
YES	Image search
YES	More frequent index updates
YES	Search with follow-ups

NO	Ability to exclude URL paths
NO	Video search





Which of the following is required to enable advanced indexing?
YES	Domain verification
Monthly project budget of at least $100
Billing account verification
There is no special requirement



Which of the following are reasons to use meta tags? (Select all that are correct)
YES	Boost search results that have certain labels
YES	Allow facets in widget based on custom metadata
YES	Filtering based on page modification date
YES	Take page description information into account when finding matches


======================


Task 4. Create a data store for the Cloud Healthcare API




Import FHIR data into a Google Healthcare API FHIR data store
Open Cloud Shell by selecting the Cloud Shell icon at the top of the Google Cloud Console ( Cloud Shell Icon ) and selecting Continue.

If prompted to authorize Cloud Shell, select Authorize.

Load data into Google Healthcare API with the following command:

gcloud healthcare fhir-stores import gcs fhir_store \
--dataset=lab_dataset \
--location=us \
--gcs-uri=gs://spls/gsp457/fhir_devdays_gcp/fhir1/* \
--content-structure=BUNDLE_PRETTY

Wait until the command completes - this will take 1-2 minutes.

Close Cloud Shell








Confirm your FHIR data store in Google Healthcare API
Open a new browser tab in your Incognito session, and visit https://console.cloud.google.com/healthcare/browser.

Click on the lab_dataset entry and note the fhir_store entry

On the left-hand side of the window, click on FHIR Viewer.

Select fhir_store from the FHIR Store drop down

Select the Patient resource type.

How many patients are there?
64
100
YES	10
32










Create the AI Applications healthcare data store

IAM
Assign the Discovery Engine Service Account the Healthcare FHIR Store Administrator role for your project. This is required for AI Applications to access your Healthcare data store.




In AI Applications, create a new data store with the following settings:
Setting	Value
Source	[select the right type] - Healthcare API (FHIR)
FHIR Store	[select the right store] - fhir_store
Data store name	healthcare-datastore

Verify that your datastore was created, and check that the import has started.



True or false: The data store was automatically created in the same location as the FHIR data store?
YES	True
False












In AI Applications, create the Custom search (Healthcare data) application with the following settings:
Setting	Value
App name	healthcare-search-app
Company name	Cymbal Health
Data Stores	[select the right data store] - healthcare-datastore











======================


Task 5. Create a data store for custom embeddings


In this task, you will create a custom embeddings data store in AI Applications using precomputed embeddings from an internal collection of Product Requirements Documents (PRDs). You will first explore the Cloud Storage bucket containing the documents and metadata, which includes custom embeddings generated from a trained model. Then, you will configure an AI Applications data store to use these embeddings instead of automatically generated ones. Finally, you will build a Custom Search application to enable efficient retrieval of relevant information based on semantic similarity.






In Cloud Storage, explore the contents of the prds folder in the qwiklabs-gcp-00-3878bf15c313 bucket.


How many PRD PDFs are there?
10
5
15
YES	6


What purpose does the prd-prfs.json file serve (pick the best answer)?
It is a metadata file that provides ids, ACL information, and embeddings
It is a metadata file that provides ACL information and ids
It is a metadata file that provides document ids
YES	It is a metadata file that provides ids, custom embeddings, and content chunks







In AI Applications, create a new data store with the following settings (remember that you have not only the PDFs, but the metadata file with links to the content files):

Setting	Value
Source	[select the right type] - Cloud Storage
Kind of data	[select the right type] - Unstructured data with metadata
File to import	gs://qwiklabs-gcp-00-3878bf15c313/prds/prd_pdfs.json
Multi-region	global
Data store name	embeddings-datastore
Confirm that your data store was created, and that the data import has begun.
>>parser - digital parser







Create an AI Applications Custom search application with the following settings:

Setting	Value
Enterprise edition features	Enabled
Generative Responses	Enabled
App name	embedding-search
Company name	Cymbal Embedding
Multi-region	global
Data Stores	[select the right data store] - embeddings-datastore





======================


Task 6. Create a data store connected to Google Drive


In this task, you will create a Google Drive data store in AI Applications to enable natural language search and LLM-driven answers for documents stored in Google Drive. You will first set up a Python environment, configure Application Default Credentials, and run a script to populate Google Drive with test files. Then, you will configure authentication settings to ensure search results respect Google Drive security permissions. Finally, you will create a Custom Search application that allows users to retrieve relevant information while maintaining access control.








Setting up a Python environment and configuring Application Default Credentials
Open Cloud Shell. Click Continue if prompted.

Wait for the Cloud Shell terminal to display, with a prompt that shows your project name in yellow

In the Cloud Shell menu bar, click the Open in new window icon. This will open the Cloud Shell terminal in a new browser tab.

In the upper-right of the window, click on Dismiss to clear the warning.


Copy some setup files into your Cloud Shell home directory with the following commands:
gcloud storage cp gs://qwiklabs-gcp-00-3878bf15c313/populate_drive.py .
gcloud storage cp gs://qwiklabs-gcp-00-3878bf15c313/requirements.txt .

Click Authorize if prompted.
The Python script will be used to download files from Google Cloud Storage, and then upload them into the Google Drive of your lab user.



Create and activate a Python virtual environment, and install required libraries with the following commands:
python -m venv .venv
source .venv/bin/activate
pip install -r requirements.txt

In order for your application to make API calls, you must configure Default Application Credentials for the Google Cloud SDK in your cloud shell terminal. This will require you to go through the Standard Google Login and permission allowance process in your Web browser.




Start the process of setting Application Default Credentials with this command:

gcloud auth application-default login --scopes https://www.googleapis.com/auth/drive.file,https://www.googleapis.com/auth/cloud-platform,openid,https://www.googleapis.com/auth/userinfo.email

---
You are running on a Google Compute Engine virtual machine.
The service credentials associated with this virtual machine
will automatically be used by Application Default
Credentials, so it is not necessary to use this command.

If you decide to proceed anyway, your user credentials may be visible
to others with access to this virtual machine. Are you sure you want
to authenticate with your personal account?

Do you want to continue (Y/n)?  y

Go to the following link in your browser, and complete the sign-in prompts:

    https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=764086051850-6qr4p6gpi6hn506pt8ejuq83di341hur.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fsdk.cloud.google.com%2Fapplicationdefaultauthcode.html&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.file+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform+openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&state=aqhSqGozO8kzztC9PGqeLi3g5r0A3m&prompt=consent&token_usage=remote&access_type=offline&code_challenge=SNSyH0p1huB_mBhv5oTwgwk9yfoYTNPnuNktZNRgJpY&code_challenge_method=S256

Once finished, enter the verification code provided in your browser: 4/0AVGzR1C5teqegHLxliUj7f7zFF2kxGpDIlFXYLOtPM7y7ocvG6jmmzjzS8T-o6cx5-KpfA

Credentials saved to file: [/tmp/tmp.SMrvje7P8Y/application_default_credentials.json]

These credentials will be used by any library that requests Application Default Credentials (ADC).

Quota project "qwiklabs-gcp-00-3878bf15c313" was added to ADC which can be used by Google client libraries for billing and quota. Note that some services may still bill the project owning the resource.
---




When prompted, Do you want to continue (Y/n), reply positively by pressing Enter.

Open the provided link in your Web browser.

Select your student account on the Sign in page

Click on Continue in the Sign in to Google Auth Library window.

Click Allow in the Google Auth Library wants to access your Google Account page

Click Copy to copy the token

Close the Sign in to the gcloud CLI tab, and paste your copied token into Cloud Shell.












Loading files into Google Drive and configure sharing
In Cloud Shell, run the populate_drive.py file:
python populate_drive.py

---
(.venv) student_00_268eae8e30bb@cloudshell:~ (qwiklabs-gcp-00-3878bf15c313)$ pwd
/home/student_00_268eae8e30bb
(.venv) student_00_268eae8e30bb@cloudshell:~ (qwiklabs-gcp-00-3878bf15c313)$ ls
populate_drive.py  README-cloudshell.txt  requirements.txt
(.venv) student_00_268eae8e30bb@cloudshell:~ (qwiklabs-gcp-00-3878bf15c313)$ python populate_drive.py
Downloading generative-ai/image/320px-Felis_catus-cat_on_snow.jpg to lab_drive_files/generative-ai_image/320px-Felis_catus-cat_on_snow.jpg
Downloading generative-ai/image/a-man-and-a-dog.png to lab_drive_files/generative-ai_image/a-man-and-a-dog.png
Downloading generative-ai/image/ad_copy_from_video.jpeg to lab_drive_files/generative-ai_image/ad_copy_from_video.jpeg
Downloading generative-ai/image/ai_performance.png to lab_drive_files/generative-ai_image/ai_performance.png
Downloading generative-ai/image/alice_doe_resume.png to lab_drive_files/generative-ai_image/alice_doe_resume.png
Downloading generative-ai/image/armchair.png to lab_drive_files/generative-ai_image/armchair.png
Downloading generative-ai/image/blocks-1.jpg to lab_drive_files/generative-ai_image/blocks-1.jpg
Downloading generative-ai/image/blocks-2.jpg to lab_drive_files/generative-ai_image/blocks-2.jpg
Downloading generative-ai/image/boats.jpeg to lab_drive_files/generative-ai_image/boats.jpeg
Downloading generative-ai/image/car_canny.png to lab_drive_files/generative-ai_image/car_canny.png
Downloading gen-app-builder/search/alphabet-investor-pdfs/2004Q3_earnings.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2004Q3_earnings.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2004Q4_earnings_google.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2004Q4_earnings_google.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2004_google_annual_report.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2004_google_annual_report.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2005Q1_earnings_google.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005Q1_earnings_google.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2005Q2_earnings_google.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005Q2_earnings_google.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2005Q3_earnings_google.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005Q3_earnings_google.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2005Q4_earnings_google.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005Q4_earnings_google.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2005_google_annual_report.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005_google_annual_report.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2006Q3_google_earnings_slides.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2006Q3_google_earnings_slides.pdf
Downloading gen-app-builder/search/alphabet-investor-pdfs/2006Q4_earnings_google.pdf to lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2006Q4_earnings_google.pdf
Downloading gen-app-builder/search/stanford-cs-224/11.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/11.pdf
Downloading gen-app-builder/search/stanford-cs-224/1207.0580.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/1207.0580.pdf
Downloading gen-app-builder/search/stanford-cs-224/1211.3711.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/1211.3711.pdf
Downloading gen-app-builder/search/stanford-cs-224/1211.5063.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/1211.5063.pdf
Downloading gen-app-builder/search/stanford-cs-224/1301.3781.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/1301.3781.pdf
Downloading gen-app-builder/search/stanford-cs-224/1346-3954-1-PB.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/1346-3954-1-PB.pdf
Downloading gen-app-builder/search/stanford-cs-224/14.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/14.pdf
Downloading gen-app-builder/search/stanford-cs-224/1404.2188.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/1404.2188.pdf
Downloading gen-app-builder/search/stanford-cs-224/1408.5882.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/1408.5882.pdf
Downloading gen-app-builder/search/stanford-cs-224/1409.0473.pdf to lab_drive_files/gen-app-builder_search_stanford-cs-224/1409.0473.pdf
lab_drive_files None
Created folder: lab_drive_files - ID: 13ZVFvvwVy1QXZMImZqgcZCZuDI12Xo-0
gen-app-builder_search_stanford-cs-224 13ZVFvvwVy1QXZMImZqgcZCZuDI12Xo-0
Created folder: gen-app-builder_search_stanford-cs-224 - ID: 1lNuRNJZqM7aRUL28CFYE01zLF64S9LnX
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/11.pdf - ID: 1D9U4mTp5gmc1plsPD1qV81CoJTdJLetx
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/1211.3711.pdf - ID: 1zaD_ljDvDNJQVSGz94M90__bkmRzsECs
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/1211.5063.pdf - ID: 1grTchEC6eC4HE9GqXmH2Q_A01elVJF_e
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/1409.0473.pdf - ID: 1gN2pLyuw8pKYLwdkKYr22GazZArdZATf
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/1346-3954-1-PB.pdf - ID: 1g1JNks_SDYiTRqYgUlCKH62pGc-geOtX
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/1301.3781.pdf - ID: 1pXkx23bueEo4_dl3cu-bhZkPTslY366K
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/1207.0580.pdf - ID: 1RybpZASDOVv2Uv6uqpThCAaYOQl3k3P6
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/14.pdf - ID: 1BnuGpDqT_3QhLxoTX7vrvXwO2YlSs5Ru
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/1408.5882.pdf - ID: 1okSLf0AGtQV6QHMvxUAVFvoMSeDwTwai
Uploaded: lab_drive_files/gen-app-builder_search_stanford-cs-224/1404.2188.pdf - ID: 1DwE0clY-LVp1yCJxavERQtCWY6Do4pXn
generative-ai_image 13ZVFvvwVy1QXZMImZqgcZCZuDI12Xo-0
Created folder: generative-ai_image - ID: 1gk0Ao2sLBPOIARCIrDYzDqdQnOYaXTBG
Uploaded: lab_drive_files/generative-ai_image/ad_copy_from_video.jpeg - ID: 1AIlSyFjcKrdkKB7y1Zvk0y0MHppw1yHK
Uploaded: lab_drive_files/generative-ai_image/boats.jpeg - ID: 14LjEyp00QWAFShYPvX1q21FMmEc7nwko
Uploaded: lab_drive_files/generative-ai_image/ai_performance.png - ID: 1vqyWSL08ghd61WD1BMIkxYeayB9Dk37j
Uploaded: lab_drive_files/generative-ai_image/armchair.png - ID: 1qQj0spInPgChE7eJY1Ck4lwP4Eo3BuBf
Uploaded: lab_drive_files/generative-ai_image/320px-Felis_catus-cat_on_snow.jpg - ID: 1qOVVY9m31Ju7wTAHlmAvnlB58RRPFz2F
Uploaded: lab_drive_files/generative-ai_image/blocks-2.jpg - ID: 15SKNNUd0E79dSCfj89N6_hMqKmheBcLD
Uploaded: lab_drive_files/generative-ai_image/a-man-and-a-dog.png - ID: 1rtsdF0vd5RU80f-htWD4HzBGiW9pHbAz
Uploaded: lab_drive_files/generative-ai_image/alice_doe_resume.png - ID: 1M5HsHqBvLqyh7ujSPGwFc9S5oYc4f_x0
Uploaded: lab_drive_files/generative-ai_image/blocks-1.jpg - ID: 1rOTBHRqToTXBWtjjxRiKKUusbOcId0w7
Uploaded: lab_drive_files/generative-ai_image/car_canny.png - ID: 1YYoXl1unFVj9VIDMMcIIFNMu_WR0Q7bR
gen-app-builder_search_alphabet-investor-pdfs 13ZVFvvwVy1QXZMImZqgcZCZuDI12Xo-0
Created folder: gen-app-builder_search_alphabet-investor-pdfs - ID: 1e6pDeqpC8EkMfAZbGZpHG6qZb_uBRQTw
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2004Q3_earnings.pdf - ID: 1YIHR9RTLDjoiv2P857LKoYYG2hguO6bK
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005Q3_earnings_google.pdf - ID: 12hXWIuiTdeXn_YshRqrr_AKqnOnlfqB2
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005Q2_earnings_google.pdf - ID: 1ba5FMjipa1EfUhCflHnfBMvP2-kaBt6v
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2006Q4_earnings_google.pdf - ID: 1_pREr7yXGcTiaqFvpXEA-peckIXPVnNu
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005Q4_earnings_google.pdf - ID: 1yOBn7N2g7-rJBLIDzJo5qhYknJcZZ5w8
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005Q1_earnings_google.pdf - ID: 1IMmK9UwN27GJ_mDaC7QKXL6aEPaN5gXS
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2004_google_annual_report.pdf - ID: 1Z3yL_GS1_xNOTg6InfQ-MyaX7D-yPfKf
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2006Q3_google_earnings_slides.pdf - ID: 1A8RQl1odhjUTo47fB19E-DCVeSxA-u75
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2004Q4_earnings_google.pdf - ID: 1Jjwa8_T7Hk3-u5-QyohKarJETEOesnhG
Uploaded: lab_drive_files/gen-app-builder_search_alphabet-investor-pdfs/2005_google_annual_report.pdf - ID: 1HHlZ18DbX365Gdw7NNSJernDVLRQAWRX

---






When the script is finished, leave the tab with Cloud Shell open, then open a new Incognito tab and load https://drive.google.com.

Click on My Drive on the left hand side.

Confirm that you have a lab_drive_files folder in Google Drive. You can explore the contents to see the type of data you'll be searching against. You'll find investment data, images, and resources for a Stanford University computer science class.

Leave your Drive tab open, and return to the AI Applications tab in your browser.













Configuring authentication and build and testing your Drive data store


In AI Applications, configure the Authentication settings according to this table:
Setting	Value
Location	global
Identity provider	Google Identity



In AI Applications, create a new data store with the following settings:
Setting	Value
Source	[select the right type] - Google Drive
Drives to sync	All
Multi-region	global
Data store name	drive-data-store
Confirm that your datastore was created.




Create an AI Applications Custom search application with the following settings:

Setting	Value
Enterprise edition features	Enabled
Generative Responses	Enabled
App name	drive-search-app
Company name	Cymbal Investments
Multi-region	global
Data Stores	[select the right data store] - drive-data-store











======================


Task 7. Verify your data stores and applications



In this task, you will verify that your various data stores and applications are functioning correctly by checking data imports, running test queries, and confirming access permissions. You will test unstructured, structured, website, healthcare, Google Drive, and custom embedding data stores using the AI Applications. Additionally, you will perform a second-user access test to ensure proper sharing and visibility of documents.



Check your unstructured data store
Confirm that your data has been imported successfully into rag-data-store. If you have any errors, resolve them before checking your progress.
Using the Preview pane for your rag-search application, enter a query of How do I book air travel?.
Note the results.


Check your structured data store
Confirm that your data has been imported successfully into structured-data-store. If you have any errors, resolve them before checking your progress.
Test your data store by doing a query in the Preview page of your structured-search application using the following query string: Create a list of orders that have a line item for product 6373. Each line should be formatted: order number, order date, customer name.




Check your Website data store
Confirm that your data has been imported successfully into web-data-store. If you have any errors, resolve the errors before checking your progress.
Test your data store by doing a query in the Preview page of your website-search-app application using the following query string: ImportDocumentsRequest. This should return results that document how to use this method when writing AI Applications Search custom clients.



Check your Healthcare API data store
Confirm that your data has been imported successfully into healthcare-datastore. If you have any errors, resolve them before checking your progress.

Test your data store by doing a query in the Preview page of your healthcare-search-app application using the following parameters:
Setting	Value
Patient ID	5af42e88-ebae-4e56-974d-c0246955b03f
Search text	hemoglobin








Check your Google Drive data store
Perform test queries as the primary lab user
Test your Google Drive data store by doing a couple of queries in your drive-search-app application.
Query
- Man and dog
- What was Google's revenue in the most recent earnings statement?
The answer to the second question will be based on the latest earnings statement that was uploaded to Drive.


Share a folder with the secondary lab user
Return to the tab with Google Drive open.
Open the lab_drive_files folder, and right-click the gen-app-build_search_stanford-cs-224 folder.
Select Share > Share from the context menu
Copy the Username 2 value from the left side of the instructions window and paste it into the Add people... field in the sharing modal dialog.
Deselect Notify people, and click Share. The second user should now have access to the computer science course files, but not to the investment files or images.

Log into Google Cloud with a second user account
Return to the console window (make sure not to do this in the Google Drive tab), and click on the user avatar in the upper right corner, then click Sign out.
Sign in to the Google Cloud Console using Usernameâ€¯2 account (student-00-10f468526ffa@qwiklabs.net) and the password shown in the lab connection details pane.

Test your application with the second account
In the tab that has your second user account logged into the console, go to AI Applications.
Open the drive-search-app application.
Go the Preview page and try these queries:
- What was Google's revenue in the most recent earnings statement?
- What are the main sources of difficulty in training recurrent models?

True or false: The second user only sees documents shared with them.
YES	True
False







Check your custom embedding data store
Confirm that your data has been imported successfully into embeddings-datastore. If you have any errors, resolve them before checking your progress.
Test your data store by doing a query in the Preview page of your embedding-search application using the following query
- do any products use Framework Atlas.






======================


Task 8. Add data to an existing data store



In this task, you will update your RAG data store by adding new employee benefits documents while retaining existing content. Using AI Applications, you will import a new set of PDFs from a Cloud Storage folder to ensure the latest information is available for retrieval.


Consider the following scenario:
Over time, your company adds new employee benefits and perks
Management creates PDF documents explaining these new offerings
You want to update your RAG data store to include these new documents while retaining the original content



In AI Applications, go to rag-data-store and import a new set of PDFs using the following:
Setting	Value
Source	Cloud Storage
Folder to import	qwiklabs-gcp-00-3878bf15c313/new_perks
Data import options	[select the right type] - Incremental
---
Data import options

Incremental
Adds new documents and replaces existing documents with updated documents with the same ID.

Full
Adds new and updated documents and removes documents that are not in the source data. Equivalent to deleting all documents in the datastore and then importing new ones.
---











======================


Task 9. Delete an application and a data store


Delete the structured data application and data store.






===================

Overall, it is disappointing that qwiklabs is not marking my completion for the 2 labs below.
This lab was also too lengthy. With qwiklab marking issues even when we have completed the tasks, it was also a frustrating lab to complete.

Task 6. Create a data store connected to Google Drive - qwiklabs is not marking my completion
Task 8. Add data to an existing data store - qwiklabs is not marking my completion



