Getting Started with Cloud Shell & gcloud
https://google.qwiklabs.com/games/1233/labs/5223



Default regions and zones are set by using the following values:
google-compute-default-zone google-compute-default-region

To see what your default region and zone settings are, run the following gcloud command, replacing <your_project_id> which you can see on the Home page in the Console or look in the Qwiklabs tab where you started this lab, with your Project ID:
Look for the default zone and region metadata values in the response. If the google-compute-default-region and google-compute-default-zone keys and values are missing from the response, that means no default zone or region is set.
gcloud compute project-info describe --project <your_project_ID>



Initializing Cloud SDK
#on your local machine
The gcloud CLI is a part of the Cloud SDK. You need to download and install the SDK on your own system and initialize it (by running gcloud init) before you can use the gcloud command-line tool.
#on google cloud shell
The gcloud CLI is automatically available in Cloud Shell. Since you're using Cloud Shell for this lab, you don't need to install gcloud manually.






Setting environment variables
Environment variables are variables that define your environment. Define your own variables and save yourself time when writing scripts that contain APIs or executables.

Make a couple of environment variables:
export PROJECT_ID=<your_project_ID>

Set your ZONE environment variable (use the value for zone from the earlier command):
export ZONE=<your_zone>

Verify that your variables were set properly:
echo $PROJECT_ID
echo $ZONE



#set variable value
export variableName=value
#retrieve variable value
echo $variableName






Create a virtual machine with gcloud
Create a new virtual machine instance using gcloud. In the following command you'll use:
'gcloud compute' which enables you to easily manage your Compute Engine resources in a friendlier format than using the Compute Engine API.
'instances create' creates a new instance.


Run the following to create your vm:
gcloud compute instances create gcelab2 --machine-type n1-standard-2 --zone $ZONE

The name of the vm is "gcelab2",
You're using the --machine-type flag to specify the machine type as "n1-standard-2"
You're using the --zone flag to specify that it gets created in the zone you defined with your environment variable.
If you omit the --zone flag, gcloud can infer your desired zone based on your default properties. Other required instance settings, like machine type and image, if not specified in the create command, are set to default values.



You can see the default values by displaying help for the create command:
gcloud compute instances create --help












Using gcloud commands
gcloud offers simple usage guidelines that are available by adding the -h flag (for help) onto the end of any gcloud invocation.
gcloud -h


More verbose help can be obtained by appending --help flag, or executing gcloud help command. Run the following in Cloud Shell:
Use the Enter key or the Spacebar to scroll through the help content.
Type q to exit the content.
gcloud config --help

You can see that the gcloud config --help and gcloud help config commands are equivalent. Both give long, detailed help.
gcloud help config



gcloud Global Flags govern the behavior of commands on a per-invocation level. Flags override any values set in SDK properties.
https://cloud.google.com/sdk/gcloud/reference/

View the list of configurations in your environment:
gcloud config list

To check how other properties are set, see all properties by calling:
gcloud config list --all

List your components:
gcloud components list














Auto-completion
Install the beta components:
sudo apt-get install google-cloud-sdk


gcloud interactive has auto prompting for commands and flags, and displays inline help snippets in the lower section as the command is typed.
Static information, like command and sub-command names, and flag names and enumerated flag values, are auto-completed using dropdown menus.
When using the interactive mode, click on the Tab key to complete file path and resource arguments. 
If a dropdown menu appears, use the Tab key to move through the list, and the Space bar to select your choice.
Enter the gcloud interactive mode:
gcloud beta interactive



Start typing the following command, using auto-complete to finish the command:
gcloud compute instances describe <your_vm>

Across the bottom of Cloud Shell you can see the shortcut to toggle this feature. Try out the F2 toggle:
F2:help:STATE Toggles the active help section, ON when enabled, OFF when disabled.











SSH into your vm instance
gcloud compute ssh command provides a wrapper around SSH, which takes care of authentication and the mapping of instance name to IP address.
Use gcloud compute ssh to SSH into your vm:
gcloud compute ssh gcelab2 --zone $ZONE
(Output)
WARNING: The public SSH key file for gcloud does not exist.
WARNING: The private SSH key file for gcloud does not exist.
WARNING: You do not have an SSH key for gcloud.
WARNING: [/usr/bin/ssh-keygen] will be executed to generate a key.
This tool needs to create the directory
[/home/gcpstaging306_student/.ssh] before being able to generate SSH Keys.

Type "Y" to continue:
Do you want to continue? (Y/n)


Press the Enter key through the passphrase section to leave the passphrase empty.
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase)


You don't need to do anything here, so disconnect from SSH by exiting from the remote shell by typing "exit":
exit












Use the Home directory
Now try out your Home directory. The contents of your Cloud Shell Home directory persists across projects between all Cloud Shell sessions, even after the virtual machine terminates and is restarted.
Change your current working directory:
cd $HOME


The editor opens and displays the contents of the file. Press the ESC key and then :wq to exit the editor.
Open your .bashrc configuration file using vi text editor:
vi ./.bashrc





