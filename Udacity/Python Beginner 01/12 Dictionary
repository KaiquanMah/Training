# Dictionary
# The dict class allows creating an associative array 
# of keys and values. Keys must be unique, immutable objects.
# values do not have to be unique

empty_dict = dict()		#or empty_dict = {}
print('empty_dict ->', empty_dict)


dict_syn = {'k1': 'v1', 'k2': 'v2'}	#(key1:value1, key2:value2)
#or dict_syn = dict(k1='v1', k2='v2')		#(key1=value1, key2=value2)
print('dict_syn ->', dict_syn)				#dict_syn -> {'k1': 'v1', 'k2': 'v2'}
print("dict_syn['k2']  ->", dict_syn['k2'])	#dict_syn['k2']  -> v2	#dict_syn[key] gives us the value corresponding to the key


dict_syn['k3'] = 'v3'
print('dict_syn ->', dict_syn)				#{'k1': 'v1', 'k2': 'v2', 'k3': 'v3'}
del(dict_syn['k3'])
print('dict_syn ->', dict_syn)				#{'k1': 'v1', 'k2': 'v2'}
dict_syn['k1']=1
print('dict_syn ->', dict_syn)				#{'k1': 1, 'k2': 'v2'}
dict_syn['k2']=1
print('dict_syn ->', dict_syn)				#{'k1': 1, 'k2': 1}; keys must be unique, values do not have to be unique


dict_ref = dict_syn
dict_copy = dict_syn.copy()					#.copy dictionary object
dict_syn.clear()							#clear original dictionary object
print('dict_syn ->', dict_syn)				#dict_syn -> ()
print('dict_ref ->', dict_ref)				#dict_ref -> ()
print('dict_copy ->', dict_copy)			#dict_copy -> {'k1': 1, 'k2': 1}




#https://www.w3schools.com/python/python_dictionaries_access.asp
key_list = dict_copy.keys()					#.keys copies only the keys
print('key_list ->', key_list)				#key_list -> dict_keys({'k1', 'k2'})

value_list = dict_copy.values()				#.values copies only values
print('value_list ->', value_list)			#value_list -> dict_values({1, 1})

mapping = zip(key_list, value_list)			#with a list of keys and values, use zip() function to create a mapping/zip object
print('mapping ->', mapping)				#mapping -> <zip object at 0x03455c38>

dict_new = dict(mapping)					#use dict(mapping) to create a dictionary from our mapping object
print('dict_new ->', dict_new)				#dict_new -> {'k1': 1, 'k2': 1}

print (" 'k3' in dict_new ->", 'k3' in dict_new)		#'k3' in dict_new -> False
print (" 'k3' in dict_new ->", 'k3' not in dict_new)	#'k3' in dict_new -> True










#---------------------------------------
#extra set of content in Dictionary module not went through in video
mapping = dict_new.items()
print('mapping ->', mapping)

dict_same_value = dict.fromkeys(key_list, 0)
print('dict_same_value ->', dict_same_value)

value1 = dict_new['k1']
print('value1 ->', value1)

value1 = dict_new.get('k1')
print('value1 ->', value1)

default_value = dict_new.get('non-existent', 0)
print('default_value ->', default_value)

value2 = dict_new.pop('k2')
print('value2 ->', value2)
print('dict_new ->', dict_new)

default_value = dict_new.pop('non-existent', 0)
random_item = dict_new.popitem()
print('random_item ->', random_item)
print('dict_new ->', dict_new)
print("'k3' in dict_new ->", 'k3' in dict_new)

value3 = dict_new.setdefault('k3', 3)
print('value3 ->', value3)
print("'k3' in dict_new ->", 'k3' in dict_new)
print('dict_new ->', dict_new)

value3 = dict_new.setdefault('k3', 0)
print('value3 ->', value3)
print('dict_new ->', dict_new)
#---------------------------------------



