#list
list = ['a', 'b', 3]
list[position no]

# include starting position
# up to but NOT INCLUDING ending position
list[start pos:end pos]

# list 1 elements 1st, then list 2 elements behind
list1 + list2 = [elements in list 1 and 2]
len(listname)		#only count outer elements; dont count elements inside the inner list
len('string')		#length of a string; no of characters
listname.append('element')			#we can append a list within another list







#for loop
#for <name> in <list>:
#	<execute block of code>







#print all elements in a list on separate lines
def print_all_elements(listname):
	for element in listname:		#'element' will be assigned the element at each position of our list
		print element



mylist = [1,2,[3,4]]
print_all_elements(mylist)
#1
#2
#[3,4]








#sum all elements in a list
def sum_list(p):	#input list p
	result = 0
	for e in p:		#for element in list p
		result = result + e
	return result




#count no of elements which start with 'U'
def measure_udacity(p):
    result = 0
    for e in p:
        if e[0] == 'U':
            result += 1
    return result



#return 1st occurrence of target element in a list
#own ans - wrong => counter should be within the while loop
# return -1 should be outside the while loop after looping through every element within List 'p'
def find_element(p, t):
    i = 0
    while i < len(p):
        if p[i] == t:
            return i
		return -1
    i += 1




# while loop along the whole length of List 'p'
#udacity ans
def find_element(p, t):
    i = 0
    while i < len(p):
        if p[i] == t:
            return i
		i += 1
	return -1
    

# for loop across each element in List 'p'
def find_element(p, t):
    i = 0
    for e in p:
        if e == t:
            return i
		i += 1
	return -1
    






#<listname>.index(<target element>) 	#returns 1st position of the target element in the list

#<target element> in <listname>			#return True/False whether target element is in the list
#<target element> not in <listname>


#find element using list.index(element) and 'target in list'
def find_element(p, t):
    if t in p:
        # give me the 1st index position # of element 't'
        return p.index(t)
    else:
		return -1


#find element using list.index(element) and 'target not in list'
def find_element(p, t):
    if t not in p:
        return -1
    return p.index(t)





#append unique elements from list t onto list s
def union(s, t):
    for e in t:
        if e not in s:
            s.append(e)
    return s




#<listname>.pop()		#removes and returns the last element
