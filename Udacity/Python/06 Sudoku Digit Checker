#sudoku digit checker
correct = [[1,2,3],
           [2,3,1],
           [3,1,2]]

incorrect = [[1,2,3,4],
             [2,3,1,3],
             [3,1,2,3],
             [4,4,4,4]]

incorrect2 = [[1,2,3,4],
             [2,3,1,4],
             [4,1,2,3],
             [3,4,1,2]]

incorrect3 = [[1,2,3,4,5],
              [2,3,1,5,6],
              [4,5,2,1,3],
              [3,4,5,2,1],
              [5,6,4,3,2]]

incorrect4 = [['a','b','c'],
              ['b','c','a'],
              ['c','a','b']]

incorrect5 = [ [1, 1.5],
               [1.5, 1]]
               


def check_sudoku(p):
	n = len(p)	#extract size of grid
	digit = 1	#start with 1
	
	while digit <= n:	#go through each digit
		i=0
		
		while i<n:		#go through every row and col
			row_count = 0	#initialise counters
			col_count = 0
			j = 0
			
			while j <= n:	# for each entry in ith row/jth col
				if p[i][j] == digit:	#row i
					row_count += 1
				if p[j][i] == digit:	#col j
					col_count += 1
				j += 1					#go through every col on row i + every row on col j
        
			if row_count != 1 or col_count != 1:
				return False
			i += 1						#next set of ith row/col
	
		digit += 1				#next digit; and go through the whole grid again
		
	return True					#nothing was wrong

#inner loop looks at 1 digit before going through the whole grid; return False at any time that the digit test in a row/col is False
#then middle loop will increment digit till the last digit; take the number and go through the inner loop
#once digit is greater than the last digit, stop loops and return True




#print check_sudoku(incorrect)
#>>> False

#print check_sudoku(correct)
#>>> True

#print check_sudoku(incorrect2)
#>>> False

#print check_sudoku(incorrect3)
#>>> False

#print check_sudoku(incorrect4)
#>>> False

#print check_sudoku(incorrect5)
#>>> False



