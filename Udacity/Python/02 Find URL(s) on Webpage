#if url is not found, return None, 0
def get_next_target(page):
    start_link = page.find('<a href=')

    # if the link tag sequence is not found, find returns a -1
    if start_link == -1:
        # return the error codes of None, 0 now and skip the rest!
        return None, 0

    start_quote = page.find('"', start_link)
    end_quote = page.find('"', start_quote + 1)
    url = page[start_quote + 1:end_quote]
    return url, end_quote
	






#print all url
def print_all_links(page):
	while True:
		#uses the function defined above
    url, endpos = get_next_target(page)
		if url:
			print url
      # then update the 'page' variable to cover the remaining
      # strings/content on the web page
			page = page[endpos:]
		else:
			break



#to test
#print_all_links('some link 1', ..., 'some link n')
#print_all_links(get_page('page url 1'))






