Parametric VaR
Value at Risk can also be computed parametrically using a method known as variance/co-variance VaR. This method allows you to simulate a range of possibilities based on historical return distribution properties rather than actual return values. You can calculate the parametric VaR(90) using:

# Import norm from scipy.stats
from scipy.stats import norm

# Calculate Parametric VaR
norm.ppf(confidence_level=0.10, mu, vol)
#where mu and vol are the mean and volatility, respectively.

Returns data is available (in decimals) in the variable StockReturns.










# Import norm from scipy.stats
from scipy.stats import norm



#Calculate the mean and volatility of StockReturns and assign them to mu and vol, respectively.
# Estimate the average daily return
mu = np.mean(StockReturns)

# Estimate the daily volatility
vol = np.std(StockReturns)



#Set the confidence_level for VaR(95).
# Set the VaR confidence level
confidence_level = 0.05



#Calculate VaR(95) using the norm.ppf() function, passing in the confidence level as the first parameter, with mu and vol as the second and third parameters.
# Calculate Parametric VaR
#VaR = norm.ppf(confidence_level, mu, std)
var_95 = norm.ppf(confidence_level, mu, vol)
print('Mean: ', str(mu), '\nVolatility: ', str(vol), '\nVaR(95): ', str(var_95))





<script.py> output:
    Mean:  -0.0002863895624021478 
    Volatility:  0.02188808712970886 
    VaR(95):  -0.03628908906473362





