A random walk simulation
Stochastic or random movements are used in physics to represent particle and fluid movements, in mathematics to describe fractal behavior, and in finance to describe stock market movements.

Use the np.random.normal() function to model random walk movements of the USO oil ETF with a constant daily average return (mu) and average daily volatility (vol) over the course of T trading days.







In [6]: mu
Out[6]: -0.0002863895624021478

In [7]: vol
Out[7]: 0.02188808712970886

In [10]: rand_rets.shape
Out[10]: (252,)

In [9]: rand_rets
Out[9]: 
array([0.97595123, 1.02154359, 1.00590747, 0.9667437 , 0.98704916,
       1.0358604 , 0.94659824, 0.99032553, 1.02742253, 0.98074232,
       0.98485409, 0.99764061, 1.03235728, 0.98572927, 0.98999569,
       0.99020649, 1.0479972 , 1.04757817, 1.02169043, 1.00816649,
       1.0158532 , 1.03234288, 0.97923   , 1.02545026, 0.97226856,
       0.98575445, 1.01956841, 0.96844252, 0.99664777, 0.98085144,
       0.99411859, 0.93845785, 0.96093814, 0.98439464, 1.02001399,
       0.99591306, 0.9997759 , 1.01477749, 0.98046224, 1.00592167,
       0.98208568, 0.96189823, 0.99115756, 1.01227312, 1.00712468,
       0.99945466, 1.05207791, 1.00875147, 1.02113627, 1.04870229,
       0.97138856, 0.97697652, 1.03788014, 0.98224554, 1.00036332,
       1.02311889, 1.01920947, 1.03812471, 1.0324504 , 1.02312057,
       0.98280049, 1.01711163, 1.00659242, 0.9706842 , 1.03073558,
       1.01738247, 1.0007093 , 0.99461167, 0.97348509, 1.00408081,
       1.00996685, 0.98152122, 1.02515203, 0.97569793, 0.953243  ,
       1.02247125, 0.9908847 , 0.99695506, 0.98138197, 0.96456216,
       1.02718836, 0.98463559, 1.03606868, 1.01738404, 0.99282416,
       0.97594528, 0.98368142, 0.9731738 , 1.04539653, 1.00331291,
       1.02488941, 0.9719737 , 1.00367612, 1.02549476, 0.99238087,
       1.02228273, 0.97597449, 0.96986983, 1.00801796, 0.99141416,
       1.01376696, 0.95642143, 1.01530372, 1.05658551, 0.99917459,
       1.00046092, 1.00364361, 0.95895852, 1.00904115, 0.96457426,
       0.99035252, 1.02691765, 0.98362112, 1.01068499, 1.02188053,
       1.00581471, 0.96970617, 0.99243636, 1.04260138, 0.95538923,
       0.99367718, 0.98762902, 1.00235654, 1.01609062, 1.03492478,
       0.99379874, 1.01749421, 1.01065197, 1.01009617, 0.98737039,
       0.97788415, 0.97563577, 0.98315665, 1.00675471, 1.01636934,
       1.00679372, 0.98769803, 1.03924284, 1.03295867, 0.99196523,
       0.98169027, 1.00256377, 1.02745235, 1.0069972 , 1.0118954 ,
       0.99507158, 1.00970051, 1.03352073, 0.99446772, 1.00285034,
       1.00526917, 1.00592382, 0.96881006, 0.95863255, 0.97739531,
       1.00338955, 1.01183646, 0.98809816, 1.02985914, 0.99657976,
       1.00015829, 0.99546811, 1.0026472 , 1.0151332 , 1.01428349,
       0.98004885, 1.0330637 , 0.97574558, 1.00144774, 0.99370759,
       0.97675319, 0.99806936, 0.98349861, 1.00130941, 1.00853639,
       1.03193133, 1.00644166, 0.98633506, 0.9911418 , 1.00277746,
       1.00175929, 1.03166123, 1.03025522, 0.99185719, 0.98770488,
       0.94374458, 0.98769879, 0.9783058 , 0.99194718, 1.00828464,
       1.00359201, 0.99905767, 1.00408208, 0.99695313, 1.00402598,
       0.928992  , 0.99381929, 0.9972873 , 0.99224404, 0.99494318,
       1.01510772, 0.98662223, 1.04788277, 1.01477911, 0.99957556,
       0.99519017, 0.9978198 , 0.97967929, 0.99762981, 1.00581346,
       1.01239867, 1.01240191, 0.99369707, 0.96871828, 0.98506823,
       1.03500143, 1.01932661, 1.00780388, 0.98305034, 0.9997934 ,
       0.97222942, 0.98763277, 0.99434658, 0.991798  , 1.0206518 ,
       0.96866041, 0.98077095, 0.96962432, 0.97263032, 1.00242896,
       0.96468303, 1.01621436, 0.99431129, 1.00121926, 1.0067742 ,
       0.99021054, 1.02231262, 0.99545982, 1.01271667, 0.99535542,
       1.00608029, 1.00583489, 1.00518497, 0.97838788, 1.0092541 ,
       0.99273225, 1.01351379, 0.95259965, 0.96764502, 1.00766874,
       1.04048953, 1.01799145])









In [12]: rand_rets.cumprod()
Out[12]: 
array([0.97595123, 0.99697673, 1.00286634, 0.96951472, 0.95695868,
       0.9912756 , 0.93833974, 0.92926181, 0.95474452, 0.93635836,
       0.92217636, 0.92000059, 0.9497693 , 0.9362154 , 0.92684921,
       0.91777211, 0.9618226 , 1.00758436, 1.0294393 , 1.03784621,
       1.05429939, 1.08839847, 1.06579243, 1.09291713, 1.06260896,
       1.04747151, 1.06796886, 1.03426646, 1.03079936, 1.01106105,
       1.00511458, 0.94325767, 0.90641227, 0.89226738, 0.91012521,
       0.90640558, 0.90620245, 0.91959385, 0.90162705, 0.90696619,
       0.8907185 , 0.85678055, 0.84920452, 0.85962691, 0.86575148,
       0.86527935, 0.91034129, 0.91830811, 0.93771772, 0.98338672,
       0.95525061, 0.93325742, 0.96860933, 0.9514122 , 0.95175787,
       0.97376145, 0.9924669 , 1.03030441, 1.0637382 , 1.08833243,
       1.06961366, 1.08791649, 1.0950885 , 1.0629851 , 1.09565656,
       1.11470178, 1.11549244, 1.1094818 , 1.08006399, 1.08447153,
       1.09528029, 1.07504084, 1.10208031, 1.07529748, 1.0250198 ,
       1.04805327, 1.03849995, 1.03533779, 1.01606184, 0.9800548 ,
       1.00670088, 0.99123351, 1.02698599, 1.04483916, 1.03734156,
       1.0123886 , 0.99586786, 0.96915251, 1.01314867, 1.01650514,
       1.04180535, 1.0126074 , 1.01632987, 1.04224095, 1.03429998,
       1.05734701, 1.03194371, 1.00085107, 1.00887586, 1.00021382,
       1.01398372, 0.96979575, 0.98463724, 1.04035344, 1.03949473,
       1.03997385, 1.0437631 , 1.00092552, 1.00997504, 0.97419593,
       0.96479739, 0.99076747, 0.97453981, 0.98495276, 1.00650404,
       1.01235658, 0.98168842, 0.97426329, 1.01576824, 0.97045404,
       0.96431804, 0.95238848, 0.95463282, 0.96999345, 1.00387026,
       0.997645  , 1.01509801, 1.0259108 , 1.03626856, 1.0231809 ,
       1.00055239, 0.9761747 , 0.95973264, 0.96621536, 0.98203167,
       0.98870332, 0.97654033, 1.01486254, 1.04831107, 1.03988812,
       1.02084805, 1.02346527, 1.0515618 , 1.05891979, 1.07151606,
       1.06623518, 1.0765782 , 1.1126659 , 1.10651032, 1.10966425,
       1.11551126, 1.12211934, 1.08712051, 1.0421491 , 1.01859164,
       1.02204421, 1.0341416 , 1.02183341, 1.05234448, 1.04874521,
       1.04891121, 1.04415766, 1.04692176, 1.06276504, 1.07794503,
       1.05643879, 1.09136856, 1.06489804, 1.06643974, 1.05972927,
       1.03509394, 1.03309555, 1.01604804, 1.01737847, 1.02606321,
       1.05882677, 1.06564737, 1.05108536, 1.04177464, 1.04466813,
       1.04650601, 1.07963967, 1.1123044 , 1.10324712, 1.08968257,
       1.02838201, 1.01573167, 0.99369618, 0.98569413, 0.99386025,
       0.99743021, 0.9964903 , 1.00055805, 0.99750949, 1.00152544,
       0.93040912, 0.92465853, 0.92215021, 0.91499805, 0.91037107,
       0.92412471, 0.91176198, 0.95541967, 0.96953992, 0.96912841,
       0.96446706, 0.96236434, 0.94280841, 0.94057377, 0.94604176,
       0.95777142, 0.96964961, 0.96353798, 0.93339685, 0.91945959,
       0.95164199, 0.97003401, 0.97760403, 0.96103397, 0.96083542,
       0.93415247, 0.92259958, 0.91738374, 0.90985936, 0.92864959,
       0.8995461 , 0.88224869, 0.85544978, 0.83203639, 0.83405737,
       0.80460099, 0.81764708, 0.81299572, 0.81398697, 0.81950108,
       0.8114786 , 0.82958481, 0.82581835, 0.83632001, 0.83243565,
       0.83749711, 0.84238381, 0.84675155, 0.82845145, 0.83611802,
       0.83004132, 0.84125833, 0.80138238, 0.77545367, 0.78140042,
       0.81303896, 0.82766671])






In [14]: forecasted_values
Out[14]: 
array([ 9.75951233,  9.96976731, 10.02866339,  9.69514716,  9.56958684,
        9.91275602,  9.38339744,  9.29261808,  9.54744521,  9.36358357,
        9.22176359,  9.20000588,  9.49769301,  9.36215398,  9.26849213,
        9.17772108,  9.61822599, 10.07584363, 10.29439301, 10.37846209,
       10.5429939 , 10.88398472, 10.65792433, 10.92917126, 10.62608962,
       10.47471513, 10.67968862, 10.34266459, 10.30799365, 10.11061045,
       10.05114582,  9.43257668,  9.06412269,  8.92267376,  9.10125205,
        9.06405576,  9.06202452,  9.19593849,  9.01627047,  9.06966185,
        8.90718501,  8.56780549,  8.4920452 ,  8.59626912,  8.65751476,
        8.6527935 ,  9.1034129 ,  9.18308113,  9.3771772 ,  9.83386718,
        9.55250606,  9.33257416,  9.68609333,  9.51412201,  9.51757868,
        9.73761455,  9.92466896, 10.30304411, 10.63738201, 10.88332434,
       10.69613655, 10.87916492, 10.95088498, 10.62985099, 10.95656558,
       11.14701779, 11.15492439, 11.09481799, 10.80063989, 10.84471526,
       10.95280287, 10.75040841, 11.02080305, 10.75297477, 10.25019799,
       10.48053272, 10.38499952, 10.35337786, 10.16061837,  9.80054798,
       10.06700876,  9.91233507, 10.26985995, 10.44839163, 10.37341561,
       10.12388604,  9.95867858,  9.69152506, 10.13148667, 10.16505142,
       10.41805354, 10.12607403, 10.16329873, 10.42240954, 10.3429998 ,
       10.57347011, 10.31943714, 10.0085107 , 10.08875858, 10.00213815,
       10.13983718,  9.69795755,  9.84637238, 10.40353442, 10.39494729,
       10.39973849, 10.43763103, 10.00925524, 10.09975037,  9.74195926,
        9.64797393,  9.90767469,  9.74539805,  9.84952755, 10.06504044,
       10.12356578,  9.81688421,  9.74263286, 10.15768243,  9.70454042,
        9.64318038,  9.52388479,  9.5463282 ,  9.69993453, 10.0387026 ,
        9.97645   , 10.15098009, 10.25910799, 10.36268564, 10.231809  ,
       10.00552386,  9.76174699,  9.59732644,  9.66215363,  9.82031668,
        9.88703321,  9.76540326, 10.14862543, 10.48311067, 10.39888123,
       10.20848055, 10.23465271, 10.51561801, 10.58919789, 10.7151606 ,
       10.66235181, 10.76578204, 11.12665895, 11.06510315, 11.09664249,
       11.15511256, 11.22119339, 10.87120508, 10.421491  , 10.18591644,
       10.22044208, 10.34141595, 10.21833407, 10.52344476, 10.48745208,
       10.48911212, 10.44157665, 10.46921759, 10.62765036, 10.77945031,
       10.56438789, 10.9136856 , 10.64898044, 10.66439737, 10.59729266,
       10.3509394 , 10.33095551, 10.16048043, 10.17378467, 10.26063207,
       10.58826769, 10.65647374, 10.51085363, 10.41774641, 10.44668132,
       10.46506005, 10.7963967 , 11.12304402, 11.03247118, 10.89682567,
       10.28382012, 10.15731672,  9.93696184,  9.85694129,  9.93860251,
        9.97430208,  9.96490298, 10.00558052,  9.97509486, 10.01525437,
        9.30409115,  9.24658528,  9.22150207,  9.1499805 ,  9.10371073,
        9.24124708,  9.11761979,  9.55419668,  9.69539924,  9.69128409,
        9.64467064,  9.62364336,  9.42808409,  9.40573773,  9.4604176 ,
        9.57771418,  9.69649614,  9.63537977,  9.33396851,  9.19459587,
        9.51641989,  9.70034006,  9.77604031,  9.61033971,  9.60835417,
        9.34152465,  9.22599585,  9.1738374 ,  9.09859363,  9.28649593,
        8.995461  ,  8.82248686,  8.55449782,  8.32036392,  8.34057372,
        8.04600992,  8.17647079,  8.12995718,  8.13986967,  8.19501076,
        8.114786  ,  8.2958481 ,  8.25818346,  8.36320007,  8.32435653,
        8.37497107,  8.42383811,  8.4675155 ,  8.2845145 ,  8.3611802 ,
        8.30041325,  8.41258327,  8.01382385,  7.75453673,  7.81400424,
        8.13038962,  8.27666711])









#Set the number of simulated days (T) equal to 252, and the initial stock price (S0) equal to 10.
# Set the simulation parameters
mu = np.mean(StockReturns)
vol = np.std(StockReturns)
T = 252
S0 = 10




#Calculate T random normal values using np.random.normal(), passing in mu and vol, and T as parameters, then adding 1 to the values and assign it to rand_rets.
# Add one to the random returns
#https://docs.scipy.org/doc/numpy-1.9.2/reference/generated/numpy.random.normal.html
#numpy.random.normal(loc=mean value, scale= SD value, size=optional output shape)
rand_rets = np.random.normal(mu, vol, T) + 1




#Calculate the random walk by multiplying rand_rets.cumprod() by the initial stock price and assign it to forecasted_values.
# Forecasted random walk
forecasted_values = S0 * rand_rets.cumprod()



# Plot the random walk
plt.plot(range(0, T), forecasted_values)
plt.show()


