Historical drawdown
The stock market tends to rise over time, but that doesn't mean that you won't have periods of drawdown.

Drawdown can be measured as the percentage loss from the highest cumulative historical point.

In Python, you can use the .accumulate() and .maximum() functions to calculate the running maximum, and the simple formula below to calculate drawdown:

Drawdown = rt/RM âˆ’ 1
rt: Cumulative return at time t
RM: Running maximum

The cumulative returns of USO, an ETF that tracks oil prices, is available in the variable cum_rets.

In [1]: cum_rets
Out[1]: 
                 USO
Date                
2007-01-03  0.957364
2007-01-04  0.918411
2007-01-05  0.926938
2007-01-08  0.920349
2007-01-09  0.916667
2007-01-10  0.879070
2007-01-11  0.859302
2007-01-12  0.864923
2007-01-16  0.839923
2007-01-17  0.856977
2007-01-18  0.837791
2007-01-19  0.861047
2007-01-22  0.849612
2007-01-23  0.884690
2007-01-24  0.893411
2007-01-25  0.877326
2007-01-26  0.896899
2007-01-29  0.871512
2007-01-30  0.917830
2007-01-31  0.934884
2007-02-01  0.927132
2007-02-02  0.956202
2007-02-05  0.951550
2007-02-06  0.953682
2007-02-07  0.935078
2007-02-08  0.964147
2007-02-09  0.968799
2007-02-12  0.937403
2007-02-13  0.956589
2007-02-14  0.938954
...              ...
2017-11-16  0.214535
2017-11-17  0.219961
2017-11-20  0.218605
2017-11-21  0.220930
2017-11-22  0.224806
2017-11-24  0.228488
2017-11-27  0.224612
2017-11-28  0.224419
2017-11-29  0.222287
2017-11-30  0.222287
2017-12-01  0.226163
2017-12-04  0.222674
2017-12-05  0.223643
2017-12-06  0.217054
2017-12-07  0.219574
2017-12-08  0.222674
2017-12-11  0.224806
2017-12-12  0.221705
2017-12-13  0.219574
2017-12-14  0.221512
2017-12-15  0.222093
2017-12-18  0.221705
2017-12-19  0.223062
2017-12-20  0.225000
2017-12-21  0.225581
2017-12-22  0.225969
2017-12-26  0.231589
2017-12-27  0.231008
2017-12-28  0.231977
2017-12-29  0.232752

[2769 rows x 1 columns]










In [2]: running_max
Out[2]: 
                 USO
Date                
2007-01-03  0.957364
2007-01-04  0.957364
2007-01-05  0.957364
2007-01-08  0.957364
2007-01-09  0.957364
2007-01-10  0.957364
2007-01-11  0.957364
2007-01-12  0.957364
2007-01-16  0.957364
2007-01-17  0.957364
2007-01-18  0.957364
2007-01-19  0.957364
2007-01-22  0.957364
2007-01-23  0.957364
2007-01-24  0.957364
2007-01-25  0.957364
2007-01-26  0.957364
2007-01-29  0.957364
2007-01-30  0.957364
2007-01-31  0.957364
2007-02-01  0.957364
2007-02-02  0.957364
2007-02-05  0.957364
2007-02-06  0.957364
2007-02-07  0.957364
2007-02-08  0.964147
2007-02-09  0.968799
2007-02-12  0.968799
2007-02-13  0.968799
2007-02-14  0.968799
...              ...
2017-11-16  2.276744
2017-11-17  2.276744
2017-11-20  2.276744
2017-11-21  2.276744
2017-11-22  2.276744
2017-11-24  2.276744
2017-11-27  2.276744
2017-11-28  2.276744
2017-11-29  2.276744
2017-11-30  2.276744
2017-12-01  2.276744
2017-12-04  2.276744
2017-12-05  2.276744
2017-12-06  2.276744
2017-12-07  2.276744
2017-12-08  2.276744
2017-12-11  2.276744
2017-12-12  2.276744
2017-12-13  2.276744
2017-12-14  2.276744
2017-12-15  2.276744
2017-12-18  2.276744
2017-12-19  2.276744
2017-12-20  2.276744
2017-12-21  2.276744
2017-12-22  2.276744
2017-12-26  2.276744
2017-12-27  2.276744
2017-12-28  2.276744
2017-12-29  2.276744

[2769 rows x 1 columns]








In [3]: running_max[running_max<1] = 1

In [4]: running_max
Out[4]: 
                 USO
Date                
2007-01-03  1.000000
2007-01-04  1.000000
2007-01-05  1.000000
2007-01-08  1.000000
2007-01-09  1.000000
2007-01-10  1.000000
2007-01-11  1.000000
2007-01-12  1.000000
2007-01-16  1.000000
2007-01-17  1.000000
2007-01-18  1.000000
2007-01-19  1.000000
2007-01-22  1.000000
2007-01-23  1.000000
2007-01-24  1.000000
2007-01-25  1.000000
2007-01-26  1.000000
2007-01-29  1.000000
2007-01-30  1.000000
2007-01-31  1.000000
2007-02-01  1.000000
2007-02-02  1.000000
2007-02-05  1.000000
2007-02-06  1.000000
2007-02-07  1.000000
2007-02-08  1.000000
2007-02-09  1.000000
2007-02-12  1.000000
2007-02-13  1.000000
2007-02-14  1.000000
...              ...
2017-11-16  2.276744
2017-11-17  2.276744
2017-11-20  2.276744
2017-11-21  2.276744
2017-11-22  2.276744
2017-11-24  2.276744
2017-11-27  2.276744
2017-11-28  2.276744
2017-11-29  2.276744
2017-11-30  2.276744
2017-12-01  2.276744
2017-12-04  2.276744
2017-12-05  2.276744
2017-12-06  2.276744
2017-12-07  2.276744
2017-12-08  2.276744
2017-12-11  2.276744
2017-12-12  2.276744
2017-12-13  2.276744
2017-12-14  2.276744
2017-12-15  2.276744
2017-12-18  2.276744
2017-12-19  2.276744
2017-12-20  2.276744
2017-12-21  2.276744
2017-12-22  2.276744
2017-12-26  2.276744
2017-12-27  2.276744
2017-12-28  2.276744
2017-12-29  2.276744

[2769 rows x 1 columns]













In [9]: drawdown = (cum_rets)/running_max - 1

In [10]: drawdown
Out[10]: 
                 USO
Date                
2007-01-03 -0.042636
2007-01-04 -0.081589
2007-01-05 -0.073062
2007-01-08 -0.079651
2007-01-09 -0.083333
2007-01-10 -0.120930
2007-01-11 -0.140698
2007-01-12 -0.135077
2007-01-16 -0.160077
2007-01-17 -0.143023
2007-01-18 -0.162209
2007-01-19 -0.138953
2007-01-22 -0.150388
2007-01-23 -0.115310
2007-01-24 -0.106589
2007-01-25 -0.122674
2007-01-26 -0.103101
2007-01-29 -0.128488
2007-01-30 -0.082170
2007-01-31 -0.065116
2007-02-01 -0.072868
2007-02-02 -0.043798
2007-02-05 -0.048450
2007-02-06 -0.046318
2007-02-07 -0.064922
2007-02-08 -0.035853
2007-02-09 -0.031201
2007-02-12 -0.062597
2007-02-13 -0.043411
2007-02-14 -0.061046
...              ...
2017-11-16 -0.905771
2017-11-17 -0.903388
2017-11-20 -0.903984
2017-11-21 -0.902962
2017-11-22 -0.901260
2017-11-24 -0.899642
2017-11-27 -0.901345
2017-11-28 -0.901430
2017-11-29 -0.902366
2017-11-30 -0.902366
2017-12-01 -0.900664
2017-12-04 -0.902196
2017-12-05 -0.901771
2017-12-06 -0.904665
2017-12-07 -0.903558
2017-12-08 -0.902196
2017-12-11 -0.901260
2017-12-12 -0.902622
2017-12-13 -0.903558
2017-12-14 -0.902707
2017-12-15 -0.902451
2017-12-18 -0.902622
2017-12-19 -0.902026
2017-12-20 -0.901175
2017-12-21 -0.900919
2017-12-22 -0.900749
2017-12-26 -0.898281
2017-12-27 -0.898536
2017-12-28 -0.898110
2017-12-29 -0.897770

[2769 rows x 1 columns]















#Calculate the running maximum of the cumulative returns of the USO oil ETF (cum_rets) using np.maximum.accumulate().
# Calculate the running maximum
#https://www.geeksforgeeks.org/numpy-maximum-in-python/
#https://medium.com/@jasonrigden/a-guide-to-python-itertools-82e5a306cdf8
#https://stackoverflow.com/questions/7251421/running-maximum-of-numpy-array-values
running_max = np.maximum.accumulate(cum_rets)




#Where the running maximum (running_max) drops below 1, set the running maximum equal to 1.
# Ensure the value never drops below 1
running_max[running_max<1] = 1



#Calculate drawdown using the simple formula above with the cum_rets and running_max.
# Calculate the percentage drawdown
drawdown = cum_rets/running_max - 1

# Plot the results
drawdown.plot()
plt.show()
Notice how the drawdown never goes above 0 (as opposed to the previous plot)? That's because a positive drawdown isn't a drawdown at all - its a gain!








