Monte Carlo VaR
Both the return values and the Monte-Carlo paths can be used for analysis of everything ranging from option pricing models and hedging to portfolio optimization and trading strategies.

Aggregate the returns data at each iteration, and use the resulting values to forecast parametric VaR(99).

The parameters mu, vol, T, and S0 are available from the previous exercise.




In [7]: rand_rets.shape
Out[7]: (252,)

In [8]: len(sim_returns)
Out[8]: 100


# sim_returns = list of arrays, 1 array per simulation
# [array 1, ..., array n]

#array of 252 elements
In [11]: sim_returns[0].shape
Out[11]: (252,)






# Aggregate the returns
sim_returns = []

# Loop through 100 simulations
for i in range(100):

    # Generate the Random Walk
    rand_rets = np.random.normal(mu, vol, T)
    
    
    #Use the .append() method to append the rand_rets to sim_returns list in each iteration.
    # Save the results
    sim_returns.append(rand_rets)



#Calculate the parametric VaR(99) using the np.percentile() function on sim_returns.
# Calculate the VaR(99)
var_99 = np.percentile(sim_returns, 1)
print("Parametric VaR(99): ", round(100*var_99, 2),"%")



<script.py> output:
    Parametric VaR(99):  -5.04 %


Incredible! Check the shell to see your simulated VaR(99). What else could you use Monte Carlo simulations for?


