First moment: Mu
You can calculate the average historical return of a stock by using numpy's mean() function.

When you are calculating the average daily return of a stock, you are essentially estimating the first moment ( μ ) of the historical returns distribution.

But what use are daily return estimates to a long-term investor? You can use the formula below to estimate the average annual return of a stock given the average daily return and the number of trading days in a year (typically there are roughly 252 trading days in a year):

Average Annualized Return=((1+μ)^252)−1
The StockPrices object from the previous exercise is stored as a variable.






# Import numpy as np
import numpy as np


#Calculate the mean of the 'Returns' column to estimate the first moment (μ) and set it equal to mean_return_daily. 
# Calculate the average daily return of the stock
mean_return_daily = np.mean(StockPrices['Returns'])
print(mean_return_daily)

<script.py> output:
    0.0003777754643575774




#Use the formula to derive the average annualized return assuming 252 trading days per year. Remember that exponents in Python are calculated using the ** operator.
# Calculate the implied annualized average return
mean_return_annualized = ((1+mean_return_daily)**252)-1
print(mean_return_annualized)

<script.py> output:
    0.09985839482858783
 The average daily return of the stock (mu) is 0.04% per day. This works out to an annualized return of 9.99% per year.

