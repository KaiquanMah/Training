ELIZA I: asking questions
Asking questions is a great way to create an engaging conversation. Here, you'll create the very first hint of ELIZA's famous personality, by responding to statements with a question and responding to questions with answers.
A dictionary of responses with "question" and "statement" as keys and lists of appropriate responses as values has already been defined for you. Explore this in the Shell with responses.keys() and responses["question"].


Define a respond() function which takes in message as an argument, and uses the string's .endswith() method to check if a message ends with a question mark.
If the message does end with a question mark, choose a random "question" from the responses dictionary. Else, choose a random "statement" from the responses.
Send the bot multiple messages with and without a question mark - these have been provided for you. If you want to experiment further in the Shell, be sure to first hit 'Run Code'.

In [1]: responses.keys()
Out[1]: dict_keys(['statement', 'question'])

In [3]: responses["question"]
Out[3]: ["I don't know :(", 'you tell me!']

In [4]: responses["statement"]
Out[4]: 
['tell me more!',
 'why do you think that?',
 'how long have you felt this way?',
 'I find that extremely interesting',
 'can you back that up?',
 'oh wow!',
 ':)']




In [7]: send_message("what's today's weather?")
USER : what's today's weather?
BOT : I don't know :(

In [8]: send_message("what's today's weather?")
USER : what's today's weather?
BOT : you tell me!



In [10]: send_message("I love building chatbots")
USER : I love building chatbots
BOT : can you back that up?

In [12]: send_message("I love building chatbots")
USER : I love building chatbots
BOT : how long have you felt this way?

In [13]: send_message("I love building chatbots")
USER : I love building chatbots
BOT : tell me more!




