Part 1
Chitchat
Now you're going to leave the simple EchoBot behind and create a bot which can answer simple questions such as "What's your name?" and "What's today's weather?"
You'll use a dictionary with these questions as keys and the correct responses as values.
This means the bot will only respond correctly if the message matches exactly, which is a big limitation. In later exercises you will create much more robust solutions.
The send_message() function has already been defined for you, as well as the bot_template and user_template variables.

Define a respond() function which takes in a message argument, checks if the message has a pre-defined response, and returns the response in the responses dictionary if there is a match, or the "default" message otherwise.


# Define variables
name = "Greg"
weather = "cloudy"

# Define a dictionary with the predefined responses
responses = {
  "what's your name?": "my name is {0}".format(name),
  "what's today's weather?": "the weather is {0}".format(weather),
  "default": "default message"
}

# Return the matching response if there is one, default otherwise
def respond(message):
    # Check if the message is in the responses
    if message in responses:
        # Return the matching message
        # from the "responses" dictionary, match the 'key' in the "responses" dictionary to the 'message' provided by the user
        bot_message = responses[message]
    else:
        # Return the "default" message
        bot_message = responses["default"]
    return bot_message





Well Done! Your bot is now able to answer some simple questions. Hit 'Run Code' and call send_message() (which utilizes the new respond() function) in the IPython Shell with the following questions:
"what's today's weather?"
"what's your name?"
"what's your favorite color?"

respond("what's today's weather?")
respond("what's your name?")
respond("what's your favorite color?")

In [3]: respond("what's today's weather?")
Out[3]: 'the weather is cloudy'

In [4]: respond("what's your name?")
Out[4]: 'my name is Greg'

In [5]: respond("what's your favorite color?")
Out[5]: 'default message'






Part 2
Adding variety
It can get a little boring hearing the same old answers over and over. In this exercise, you'll add some variation. If you ask your bot how it's feeling, the likelihood that it responds with "oh I'm great!" or "I'm very sad today" should be equal.
Here, you'll use the random module - specifically random.choice(ls) - which randomly selects an element from a list ls.
A dictionary called responses, which maps each message to a list of possible responses, has been defined for you.


Import the random module.
If the message is in responses, use random.choice() in the respond() function to choose a random matching response.
If the message is not in responses, choose a random default response.




# Import the random module
import random

name = "Greg"
weather = "cloudy"

# Define a dictionary containing a list of responses for each message
responses = {
  "what's your name?": [
      "my name is {0}".format(name),
      "they call me {0}".format(name),
      "I go by {0}".format(name)
   ],
  "what's today's weather?": [
      "the weather is {0}".format(weather),
      "it's {0} today".format(weather)
    ],
  "default": ["default message"]
}

# Use random.choice() to choose a matching response
def respond(message):
    # Check if the message is in the responses
    if message in responses:
        # Return a random matching response
        bot_message = random.choice(responses[message])
    else:
        # Return a random "default" response
        bot_message = random.choice(responses["default"])
    return bot_message
    
    
    
Great job! Adding some variety makes your bot much more fun to talk to. Now, hit 'Run Code' and use send_message() (which utilizes the new respond() function) to ask the bot "what's your name?" 3 times.

In [6]: respond("what's your name?")
Out[6]: 'they call me Greg'

In [7]: respond("what's your name?")
Out[7]: 'my name is Greg'

In [8]: respond("what's your name?")
Out[8]: 'my name is Greg'

In [9]: respond("what's your name?")
Out[9]: 'I go by Greg'
