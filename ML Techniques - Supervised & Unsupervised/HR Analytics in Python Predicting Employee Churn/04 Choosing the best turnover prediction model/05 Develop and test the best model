In Chapter 3, you found out that the following parameters allow you to get better model:

max_depth = 8,
min_samples_leaf = 150,
class_weight = "balanced"
In this chapter, you discovered that some of the features have a negligible impact. You realized that you could get accurate predictions using just a small number of selected, impactful features and you updated your training and testing set accordingly, creating the variables features_train_selected and features_test_selected.

With all this information at your disposal, you're now going to develop the best model for predicting employee turnover and evaluate it using the appropriate metrics.

The features_train_selected and features_test_selected variables are available in your workspace, and the recall_score and roc_auc_score functions have been imported for you.




# Initialize the best model using parameters provided in description
model_best = DecisionTreeClassifier(max_depth=8, min_samples_leaf = 150,
class_weight = "balanced", random_state=42)

# Fit the model using only selected features from training set: done
model_best.fit(features_train_selected, target_train)

# Make prediction based on selected list of features from test set
prediction_best = model_best.predict(features_test_selected)

# Print the general accuracy of the model_best
print(model_best.score(features_test_selected, target_test) * 100)
    95.14666666666668

# Print the recall score of the model predictions
print(recall_score(target_test, prediction_best) * 100)
    92.42761692650335

# Print the ROC/AUC score of the model predictions
print(roc_auc_score(target_test, prediction_best) * 100)
    94.21521098779586
