Modeling Profits
In the previous exercise, you built a model of corn production. For a small farm, you typically have no control over the price or demand for corn. Suppose that price is normally distributed with mean 40 and standard deviation 10. You are given a function corn_demanded(), which takes the price and determines the demand for corn. This is reasonable because demand is usually determined by the market and is not in your control.

In this exercise, you will work on a function to calculate the profit by pulling together all the other simulated variables. The only input to this function will be the cost. Upon completion, you will have a function that will give you one simulated profit outcome for a given cost. This function can then be used for planning your costs.


The seed for this exercise is set to 223

In [1]: help(corn_produced)
Help on function corn_produced in module __main__:

corn_produced(rain, cost)
    # Corn production model

In [2]: help(corn_demanded)
Help on function corn_demanded in module __main__:

corn_demanded(price)





In [3]: cost
Out[3]: 5000

In [11]: rain
Out[11]: 58.02161869519972

In [12]: price
Out[12]: 45.84880197773429

In [13]: supply
Out[13]: 560

In [14]: demand
Out[14]: 651










#Model the price as a normal random variable with mean 40 and standard deviation 10.
#Get the corn supply by calling the function corn_produced(rain, cost), which you designed in the previous exercise.
#You are given a corn_demanded() function which takes price as an input. Call this function to get demand.
#Calculate the profit depending on the relationship between supply and demand of corn.


# Function to calculate profits
def profits(cost):
    rain = np.random.normal(50, 15)
    price = np.random.normal(40, 10)
    supply = corn_produced(rain, cost)
    demand = corn_demanded(price)
    
    equil_short = supply <= demand
    if equil_short == True:
        tmp = supply*(price)-cost
        return tmp
    else: 
        tmp2 = demand*(price)-cost
        return tmp2


result = profits(cost)
print("Simulated profit = {}".format(result))



<script.py> output:
    Simulated profit = 20675.3291075312
    
    


