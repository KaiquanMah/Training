Portfolio Simulation - Part II
Now we will use the simulation function you built to evaluate 10-year returns.

Your stock-heavy portfolio has an initial investment of $10,000, an expected return of 7% and a volatility of 30%. You want to get a 95% confidence interval of what your investment will be worth in 10 years. We will simulate multiple samples of 10-year returns and calculate the confidence intervals on the distribution of returns.

By the end of this exercise, you will have run a complete portfolio simulation.

The function portfolio_return() from the previous exercise is already initialized in the environment.




The seed for this exercise is set to 123

In [2]: portfolio_return(yrs = 10, avg_return = 0.07, 
                                         volatility = 0.3, principal = 10000)
Out[2]: 10087.16176047787

In [3]: rets
Out[3]: 
[3859.345207073691,
 51458.80694389756,
 9630.590851899902,
...]







#Initialize sims to 1,000.
# Run 1,000 iterations and store the results
sims, rets = 1000, []


#Enter the appropriate values for the portfolio_return() function parameters.
for i in range(sims):
    rets.append(portfolio_return(yrs = 10, avg_return = 0.07, 
                                 volatility = 0.3, principal = 10000))



#Calculate the 95% confidence interval lower (lower_ci) and upper limits (upper_ci).
# Calculate the 95% CI
lower_ci = np.percentile(rets, 2.5)
upper_ci = np.percentile(rets, 97.5)
print("95% CI of Returns: Lower = {}, Upper = {}".format(lower_ci, upper_ci))



<script.py> output:
    95% CI of Returns: Lower = 1236.4468015417674, Upper = 79510.31743325583


Try plotting a histogram of the returns to see how they are distributed.
