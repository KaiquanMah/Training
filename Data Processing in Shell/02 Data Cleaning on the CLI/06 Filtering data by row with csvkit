Filtering data by row with csvkit
Now it's time get some hands-on practice for filtering data by exact row values using -m. Whether it's text or numeric, csvgrep can help us filter by these values.


Filter Spotify_MusicAttributes.csv and return the row or rows where track_id equals118GQ70Sp6pMqn6w1oKuki.
# Print a list of column headers in the data 
csvcut -n Spotify_MusicAttributes.csv
  1: track_id
  2: danceability
  3: duration_ms
  4: instrumentalness
  5: loudness
  6: tempo
  7: time_signature
  
  
  
  
# Filter for row(s) where track_id = 118GQ70Sp6pMqn6w1oKuki
csvgrep -c "track_id" -m 118GQ70Sp6pMqn6w1oKuki Spotify_MusicAttributes.csv
track_id,danceability,duration_ms,instrumentalness,loudness,tempo,time_signature
118GQ70Sp6pMqn6w1oKuki,0.787,124016.0,0.784,-10.457,119.988,4.0








Filter Spotify_MusicAttributes.csv and return the row or rows where danceability equals 0.812.
# Filter for row(s) where danceability = 0.812
csvgrep -c "danceability" -m 0.812 Spotify_MusicAttributes.csv
track_id,danceability,duration_ms,instrumentalness,loudness,tempo,time_signature
3HjTcZt29JUHg5m60QhlMw,0.812,134769.0,0.914,-11.5979999999999,121.994,4.0
0y0mwXrdEzjUK5Nq8GDPnY,0.812,124016.0,0.944,-11.0059999999999,120.014,4.0
5Egkx8edirN0pR2R58C2ME,0.812,125381.0,0.917,-9.331,123.014,4.0
21DU83QG4jB4mQKh76X32h,0.812,125381.0,0.897,-9.312,123.042,4.0


If we can, exact match (what we just did) is always more accurate than fuzzy matching. However, when there is doubt about what we are searching for, regex matching using -r can also be helpful.



