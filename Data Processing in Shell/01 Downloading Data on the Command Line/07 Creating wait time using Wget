Creating wait time using Wget
For download smaller files, enforcing a mandatory wait time between file downloads makes sure we don't overload the server with too many requests. Here, we will using the built in option flag with wget to create a mandatory wait time (in seconds) between downloading each file stored in the URL list file.


Create a mandatory 1 second pause between downloading all files in url_list.txt.
# View url_list.txt to verify content
cat url_list.txt

$ cat url_list.txthttps://assets.datacamp.com/production/repositories/4180/datasets/6704d531266f9fb54f89200205198cabd592d03c/Spotify201811.csv
https://assets.datacamp.com/production/repositories/4180/datasets/0441f2c68c64faf961fd8d73dc3363a6005679af/Spotify201810.csv
https://assets.datacamp.com/production/repositories/4180/datasets/218a0674cd823751f0d5135bfe3814d56944a1bd/Spotify201809.csv



# Create a mandatory 1 second pause between downloading all files in url_list.txt
wget --wait=1 -i url_list.txt


# Take a look at all files downloaded
ls

>  :; }
--2020-01-24 14:07:01--  https://assets.datacamp.com/production/repositories/4180/datasets/6704d531266f9fb54f89200205198cabd592d03c/Spotify201811.csv
Resolving assets.datacamp.com (assets.datacamp.com)... 13.249.44.9, 13.249.44.52, 13.249.44.50, ...
Connecting to assets.datacamp.com (assets.datacamp.com)|13.249.44.9|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 4592954 (4.4M) [text/csv]
Saving to: 'Spotify201811.csv'

Spotify201811.csv   100%[===================>]   4.38M  --.-KB/s    in 0.05s

2020-01-24 14:07:01 (87.1 MB/s) - 'Spotify201811.csv' saved [4592954/4592954]

--2020-01-24 14:07:02--  https://assets.datacamp.com/production/repositories/4180/datasets/0441f2c68c64faf961fd8d73dc3363a6005679af/Spotify201810.csv
Reusing existing connection to assets.datacamp.com:443.
HTTP request sent, awaiting response... 200 OK
Length: 5044292 (4.8M) [text/csv]
Saving to: 'Spotify201810.csv'

Spotify201810.csv   100%[===================>]   4.81M  --.-KB/s    in 0.05s

2020-01-24 14:07:02 (90.7 MB/s) - 'Spotify201810.csv' saved [5044292/5044292]

--2020-01-24 14:07:03--  https://assets.datacamp.com/production/repositories/4180/datasets/218a0674cd823751f0d5135bfe3814d56944a1bd/Spotify201809.csv
Reusing existing connection to assets.datacamp.com:443.
HTTP request sent, awaiting response... 200 OK
Length: 4293170 (4.1M) [text/csv]
Saving to: 'Spotify201809.csv'

Spotify201809.csv   100%[===================>]   4.09M  --.-KB/s    in 0.05s

2020-01-24 14:07:03 (75.0 MB/s) - 'Spotify201809.csv' saved [4293170/4293170]

FINISHED --2020-01-24 14:07:03--
Total wall clock time: 2.2s
Downloaded: 3 files, 13M in 0.2s (84.1 MB/s)
Spotify201809.csv  Spotify201811.csv  bin
Spotify201810.csv  backup             url_list.txt


We downloaded 3 related data files to our local directory. We now have experience downloading files using both curl and Wget and note the differences and tradeoffs between the two.

