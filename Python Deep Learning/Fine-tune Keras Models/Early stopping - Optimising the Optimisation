# Import EarlyStopping
from keras.callbacks import EarlyStopping

# Save the number of columns in predictors: n_cols
n_cols = predictors.shape[1]
input_shape = (n_cols,)

# Specify the model
model = Sequential()
model.add(Dense(100, activation='relu', input_shape = input_shape))
model.add(Dense(100, activation='relu'))
model.add(Dense(2, activation='softmax'))

# Compile the model
model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

# Define early_stopping_monitor
# Stop optimization when the validation loss hasn't improved for 2 epochs by specifying the patience parameter of EarlyStopping() to be 2
early_stopping_monitor = EarlyStopping(patience=2)

# Since the optimization stops automatically when it isn't helping, you can also set a high value for epochs in your call to .fit()
# Fit the model
model.fit(predictors, target, validation_split=0.3, epochs = 30, callbacks=[early_stopping_monitor])
