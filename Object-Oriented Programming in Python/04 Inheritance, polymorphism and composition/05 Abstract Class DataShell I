Abstract Class DataShell I
We will now switch back to working on our DataShell class. Specifically, we will create an abstract class, such that we can create other classes that then inherit from it!
For this reason, our abstract DataShell class will not do much, resembling some of the earlier exercises in this course.


Import numpy as np and pandas as np.
Create class DataShell with initialization method and input arguments self and inputFile. In the method body, define the instance variable file, and set it to the value of inputFile.
Instantiate DataShell as my_data_shell, passing us_life_expectancy as input to the constructor.
Print my_data_shell to explore its contents.

# Load numpy as np and pandas as pd
import numpy as np
import pandas as pd

# Create class: DataShell
class DataShell:
    def __init__(self, inputFile):
        self.file = inputFile


# Instantiate DataShell as my_data_shell
my_data_shell = DataShell(us_life_expectancy)

# Print my_data_shell
print(my_data_shell)


<script.py> output:
    <__main__.DataShell object at 0x7fe350f38c18>

Great job! This exercise should feel a bit easier from the previous few. Get ready as we will build upon this abstract class to add inheritance, and begin to explore a new concept!

