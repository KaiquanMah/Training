Animal Inheritance
In this exercise we will code a simple example of an abstract class, and two other classes that inherit from it.
To focus on the concept of inheritance, we will introduce another set of classes: Animal, Mammal, and Reptile.
More specifically, Animal will be our abstract class, and both Mammal and Reptile will inherit from it.


Create a class called Animal with its initialization method, taking self and name as arguments. Declare name as an instance variable and assign it the value of the input argument name.
Create two classes Mammal and Reptile, which inherit from Animal. For both Mammal and Reptile, include the initialization method, taking self, name, and animal_type as arguments; then, animal_type as an instance variable and assign it the value of the input argument animal_type.
Instantiate Mammal as daisy, passing 'Daisy' as the first argument 'dog' and as the second argument. Then instantiate Reptile as stella, passing 'Stella' as the first argument 'alligator' and as the second argument.
Print both daisy and stella to explore their contents.


# Create a class Animal
class Animal:
	def __init__(self, name):
		self.name = name

# Create a class Mammal, which inherits from Animal
class Mammal(Animal):
	def __init__(self, name, animal_type):
		self.animal_type = animal_type

# Create a class Reptile, which also inherits from Animal
class Reptile(Animal):
	def __init__(self, name, animal_type):
		self.animal_type = animal_type



# Instantiate a mammal with name 'Daisy' and animal_type 'dog': daisy
daisy = Mammal('Daisy', 'dog')

# Instantiate a reptile with name 'Stella' and animal_type 'alligator': stella
stella = Reptile('Stella', 'alligator')

# Print both objects
print(daisy)
print(stella)


<script.py> output:
    <__main__.Mammal object at 0x7fe36620feb8>
    <__main__.Reptile object at 0x7fe36620ffd0>
    

Wow. You have now written an abstract class, and successfully employed inheritance, a powerful feature of object-oriented programming that helps you simplify code through re-usability!

