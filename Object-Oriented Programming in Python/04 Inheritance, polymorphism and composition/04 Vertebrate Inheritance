Vertebrate Inheritance
In the previous exercise, it seemed almost unnecessary to have an abstract class, as it did not do anything particularly interesting (other than begin to learn inheritance).
In this exercise, we will refine our abstract class and include some class variables in our abstract class so that they can be passed down to our other classes.
Additionally from inheritance, in this exercise we are seeing another powerful object-oriented programming concept: polymorphism. As you explore your code while writing the Mammal and Reptile classes, notice their differences. Because they both inherit from the Vertebrate class, and because they are different, we say that they are polymorphic. How cool!


Create a class called Vertebrate with its initialization method, taking self and name as arguments. Declare spinal_cord as a class variable, and set it to True. Declare name as an instance variable and assign it the value of the input argument name.
Create two classes Mammal and Reptile, which inherit from Vertebrate. For both Mammal and Reptile, include the initialization method, taking self, name, and animal_type as arguments; then, animal_type as an instance variable and assign it the value of the input argument animal_type. Additionally, include the instance variable temperature_regulation, set it to True for class Mammal, and set it to False for class Reptile.
Instantiate Mammal as daisy, passing 'Daisy' as the first argument 'dog' and as the second argument. Then instantiate Reptile as stella, passing 'Stella' as the first argument 'alligator' and as the second argument.
Print both daisy and stella to explore their contents. Specifically, print their spinal_cord and temperature_regulation attributes.



# Create a class Vertebrate
class Vertebrate:
    spinal_cord = True
    def __init__(self, name):
        self.name = name

# Create a class Mammal, which inherits from Vertebrate
class Mammal(Vertebrate):
    def __init__(self, name, animal_type):
        self.animal_type = animal_type
        self.temperature_regulation = True

# Create a class Reptile, which also inherits from Vertebrate
class Reptile(Vertebrate):
    def __init__(self, name, animal_type):
        self.animal_type = animal_type
        self.temperature_regulation = False



# Instantiate a mammal with name 'Daisy' and animal_type 'dog': daisy
daisy = Mammal('Daisy', 'dog')

# Instantiate a reptile with name 'Stella' and animal_type 'alligator': stella
stella = Reptile('Stella', 'alligator')

# Print stella's attributes spinal_cord and temperature_regulation
print("Stella Spinal cord: " + str(stella.spinal_cord))
print("Stella temperature regulation: " + str(stella.temperature_regulation))

# Print daisy's attributes spinal_cord and temperature_regulation
print("Daisy Spinal cord: " + str(daisy.spinal_cord))
print("Daisy temperature regulation: " + str(daisy.temperature_regulation))


<script.py> output:
    Stella Spinal cord: True
    Stella temperature regulation: False

    Daisy Spinal cord: True
    Daisy temperature regulation: True


Awesome. Not only are you learning inheritance, but also polymorphism! Try extending the polymorphism of your (inheriting) classes by adding different class and instance variables.

