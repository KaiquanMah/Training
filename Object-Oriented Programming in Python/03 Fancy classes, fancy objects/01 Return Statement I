Return Statement I
Let's now drill into the return statement.

class DataShell:
    def __init__(self, x):
        return x
In the code chunk above, you may have expected to see the print() function instead of the return statement. The difference between the two is that print() outputs a string to the console, while the the return statement exits the current function (or method) and hands the returned value back to its caller. In this case, the caller could have another function, among other things. If this sounds confusing have not fear, we will further practice this!

In the console, enter this code in order to answer the question below:

x = my_data_shell.get_data()
print(x)








What value does the my_data_shell.get_data() method return?
In [3]: my_data_shell
Out[3]: <__main__.DataShell at 0x7fe350f1df28>

In [1]: x = my_data_shell.get_data()
... print(x)
... 
[1, 2, 3, 4, 5]

In [2]: x
Out[2]: [1, 2, 3, 4, 5]




[1, 2, 3]
[10, 20, 30, 40, 50]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]



#YES - [1, 2, 3, 4, 5]
Yes! Notice that in this case, entering into the console data_shell.get_data() outputs to the console just as print(my_data_shell.get_data()) does! In what situations might this not be the case?

