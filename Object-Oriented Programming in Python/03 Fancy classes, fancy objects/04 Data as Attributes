Data as Attributes
In the previous coding exercise you wrote a method within your DataShell class that returns a Pandas Dataframe.
In this one, we will cook the data into our class, as an instance variable. This is so that we can do fancy things later, such as renaming columns, as well as getting descriptive statistics.
The object us_life_expectancy is loaded and available in your workspace.


Import the numpy and pandas packages as np and pd.
Create a DataShell class with its initialization method, taking self and filepath as arguments.
Set filepath as an instance variable, and assign it the value of the filepath parameter. Also set data_as_csv as an instance variable, assign it the value of pd.read_csv(filepath).
Instantiate DataShell as us_data_shell, passing the us_life_expectancy as input argument for the filepath parameter. Then print your objects' data_as_csv output.


# Import numpy as np, pandas as pd
import numpy as np
import pandas as pd

# Create class: DataShell
class DataShell:
  
    # Define initialization method
    def __init__(self, filepath):
        # Set filepath as instance variable  
        self.filepath = filepath
        # Set data_as_csv as instance variable
        self.data_as_csv = pd.read_csv(filepath)


# Instantiate DataShell as us_data_shell
us_data_shell = DataShell(us_life_expectancy)

# Print your object's data_as_csv attribute
print(us_data_shell.data_as_csv)


<script.py> output:
               country code  year  life_expectancy
    0    United States  USA  1880        39.410000
    1    United States  USA  1890        45.209999
    2    United States  USA  1901        49.299999
    3    United States  USA  1902        50.500000
...
    [117 rows x 4 columns]



Now your classes have the ability of storing data as instance variables, which means you can execute methods on them!

