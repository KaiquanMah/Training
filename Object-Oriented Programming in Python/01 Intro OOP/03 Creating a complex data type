Creating a complex data type
In this exercise, we'll take a closer look at the flexibility of the list data type, by creating a list of lists.

In Python, lists usually look like our list example below, and can be made up of either simple strings, integers, or a combination of both.
list = [1,2]
In creating a list of lists, we're building up to the concept of a NumPy array.




Create a variable called matrix, and assign it the value of a list.
Within the matrix list, include two additional lists: [1,2,3,4] and [5,6,7,8].
Print the matrix list.


# Create a list that contains two lists: matrix
matrix = [[1,2,3,4], [5,6,7,8]]

# Print the matrix list
print(matrix)


<script.py> output:
    [[1, 2, 3, 4], [5, 6, 7, 8]]


Good job! What happens when you nest two lists in a list? How can you access those elements? Try creating a tripply-nested list and finding out.

