Methods III
In the last exercise our method simply printed out the value of instance variables.
In this one, we'll do something more interesting. We will add another method, avg(), which takes a list of integers, calculates the average value, and prints it out. To make things even more interesting, the list of integers for which avg() does this operations, is one of our object's instance variables.
This means that our object can not only store data, but also can store procedures it can execute on its own data. Awesome.
Note that the variable integer_list has already been loaded for you.


Create a class called DataShell with its initialization method, taking self and dataList as arguments. Declare data as an instance variable and assign it the value of the input argument dataList.
Define show() as a class method, taking self as an argument. Inside of the method's body, print the instance variable data.
Define avg() as a class method, taking self as an argument. Inside of the method's body, declare the variable avg and assign it the value of the average of the instance variable data. Then print it out.
Instantiate DataShell as my_data_shell passing integer_list as an argument to the constructor. Then call your object's show() and avg() methods and explore their output.


# Create class: DataShell
class DataShell:
  
	# Initialize class with self and dataList as arguments
    def __init__(self, dataList):
      	# Set data as instance variable, and assign it the value of dataList
        self.data = dataList
        
        
	# Define method that prints data: show
    def show(self):
        print(self.data)
        
        
    # Define method that prints average of data: avg 
    def avg(self):
        # Declare avg and assign it the average of data
        avg = sum(self.data)/float(len(self.data))
        # Print avg
        print(avg)
        

# Instantiate DataShell taking integer_list as argument: my_data_shell
my_data_shell = DataShell(integer_list)

# Call the show and avg methods of your newly created object
my_data_shell.show()
my_data_shell.avg()


<script.py> output:
    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    5.5

Marvelous! It even feels that instances of the DataShell class are self-aware. Can you think of a way of writing methods that use class variables instead of instance variables?

