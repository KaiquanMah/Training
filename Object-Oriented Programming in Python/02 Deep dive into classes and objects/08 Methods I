Methods I
Not only are we able to declare both instance variables and class variables in our objects, we can also cook functions right into our objects as well. These object-contained functions are called methods.

Create a class called DataShell with its initialization method.
Define a method called print_static that only takes the argument self. Inside of this method's body print the string "You just executed a class method!".
Create an instance of DataShell called my_data_shell passing no arguments to the constructor.
Call the print_static method and explore its output!

# Create class: DataShell
class DataShell:
  
	# Initialize class with self argument
    def __init__(self):
        pass
      
	# Define class method which takes self argument: print_static
    def print_static(self):
        # Print string
        print("You just executed a class method!")
        
# Instantiate DataShell taking no arguments: my_data_shell
my_data_shell = DataShell()

# Call the print_static method of your newly created object
my_data_shell.print_static()


<script.py> output:
    You just executed a class method!

Super! You are on your way to becoming a wizard at writing class methods! Can you think of more interesting functionality than simply printing a static string?

