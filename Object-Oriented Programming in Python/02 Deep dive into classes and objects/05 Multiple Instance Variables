Multiple Instance Variables
We are not limited to declaring only one instance variable; in fact, we can declare many!
In this exercise we will declare two instance variables: identifier and data. Their values will be specified by the values passed to the initialization method, as before.


Create a class called DataShell.
Initialize the class with the self, identifier, and data arguments. Set identifier and data to be instance variables.
Create an instance of DataShell called my_data_shell passing x and y to the constructor function.
Print the my_data_shell.identifier and my_data_shell.data and explore their contents.


# Create class: DataShell
class DataShell:
  
	# Initialize class with self, identifier and data arguments
    def __init__(self, identifier, data):
      
		# Set identifier and data as instance variables, assigning value of input arguments
        self.identifier = identifier
        self.data = data


# Declare variable x with value of 100, and y with list of integers from 1 to 5
x = 100
y = [1, 2, 3, 4, 5]

# Instantiate DataShell passing x and y as arguments: my_data_shell
my_data_shell = DataShell(x, y)

# Print my_data_shell.identifier
print(my_data_shell.identifier)

# Print my_data_shell.data
print(my_data_shell.data)


<script.py> output:
    100
    [1, 2, 3, 4, 5]
    

Excellent! As you saw in this exercise, you can declare more than one instance variable! What kind of instance variables can you think of that might be useful to have in our DataShell class?

