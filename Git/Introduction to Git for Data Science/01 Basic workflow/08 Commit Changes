How do I commit changes?
To save the changes in the staging area, you use the command git commit. It always saves everything that is in the staging area as one unit: as you will see later, when you want to undo changes to a project, you undo all of a commit or none of it.

When you commit changes, Git requires you to enter a log message. This serves the same purpose as a comment in a program: it tells the next person who examines the repository why you made a change.

By default, Git launches a text editor to let you write this message. 
To keep things simple, you can use 
-m "some message in quotes" on the command line to enter a single-line message like this:
git commit -m "Program appears to have become self-aware."

If you accidentally mistype a commit message, you can change it using the --amend flag.
git commit --amend - m "new message"






You have been put in the dental repository, and report.txt has been added to the staging area. Use a Git command to check the status of the repository.

$ cd dental$ git add report.txt
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   report.txt






Commit the changes in the staging area with the message "Adding a reference."

$ git commit -m "Adding a reference"
[master 5ab95e0] Adding a reference
 Date: Mon Oct 7 19:38:49 2019 +0000
 1 file changed, 4 insertions(+), 1 deletion(-)

$ git commit --amend -m "Adding a reference"
[master 5ab95e0] Adding a reference
 Date: Mon Oct 7 19:38:49 2019 +0000
 1 file changed, 4 insertions(+), 1 deletion(-)
 
 
 
