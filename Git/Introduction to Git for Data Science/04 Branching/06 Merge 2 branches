How can I merge two branches?
Branching lets you create parallel universes; merging is how you bring them back together. 
When you merge one branch (call it the source) into another (call it the destination), Git incorporates the changes made to the source branch into the destination branch. If those changes don't overlap, the result is a new commit in the destination branch that includes everything from the source branch (the next exercises describe what happens if there are conflicts).

To merge two branches, you run git merge source destination (without .. between the two branch names). 
Git automatically opens an editor so that you can write a log message for the merge; 
you can either keep its default message or 
fill in something more informative.


You are in the master branch of the dental repository. Merge the changes from the summary-statistics branch (the source) into the master branch (the destination) with the message "Merging summary statistics."



$ git branch
  alter-report-title
  * master
  summary-statistics

$ git status
On branch master
nothing to commit, working directory clean
$ ls
bin  data  report.txt  results


$ git merge summary-statistics master
Merge made by the 'recursive' strategy.
 bin/summary         | 4 ++++
 results/summary.txt | 2 ++
 2 files changed, 6 insertions(+)
 create mode 100755 bin/summary
 create mode 100644 results/summary.txt
