How can I switch from one branch to another?
You previously used git checkout with a commit hash to switch the repository state to that hash. You can also use git checkout with the name of a branch to switch to that branch.

Two notes:
1. When you run git branch, it puts a * beside the name of the branch you are currently in.
2. Git will only let you do this if all of your changes have been committed. You can get around this, but it is outside the scope of this course.

In this exercise, you'll also make use of git rm. This removes the file (just like the shell command rm) then stages the removal of that file with git add, all in one step.





1. You are in the master branch of the dental repository.
Switch to the summary-statistics branch.

$ cd dental
$ git branch
  alter-report-title
  * master
  summary-statistics


$ git checkout summary-statistics
Switched to branch 'summary-statistics'
$ git branch
  alter-report-title
  master
* summary-statistics








2. Use git rm to delete report.txt.

$ ls
bin  data  report.txt  results
$ git rm report.txt
rm 'report.txt'

$ git status
On branch summary-statistics
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    report.txt
        
        
        



3. Commit your change with `-m "Removing report" as a message.

$ git commit -m "Removing report"
[summary-statistics 8ed81f5] Removing report
 1 file changed, 7 deletions(-)
 delete mode 100644 report.txt
$ git status
On branch summary-statistics
nothing to commit, working directory clean



4. Use ls to check that it's gone.
$ ls
bin  data  results





5. Switch back to the master branch.
$ git checkout master
Switched to branch 'master'
$ git branch
  alter-report-title
* master
  summary-statistics
  
    
6. Use ls to ensure that report.txt is still there.
$ ls
bin  data  report.txt  results



#Quite a journey! In the next few exercises, you'll practice some more with navigating branches and staging and committing changes.

