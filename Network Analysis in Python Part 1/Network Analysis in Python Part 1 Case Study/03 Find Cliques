# part 1
# Finding cliques (I)
#You're now going to practice finding cliques in G. Recall that cliques are "groups of nodes that are fully connected to one another", while a maximal clique is a clique that cannot be extended by adding another node in the graph.

#A subsampled version of the GitHub collaboration network has been loaded as `G`.
#Count the number of maximal cliques present in the graph and print it.
#Use the nx.find_cliques() function of G to find the maximal cliques.
#The nx.find_cliques() function returns a generator object. To count the number of maximal cliques, you need to first convert it to a list with list() and then use the len() function. Place this inside a print() function to print it.

# Calculate the maximal cliques in G: cliques
cliques = nx.find_cliques(G)

# Count and print the number of maximal cliques in G
print(len(list(cliques)))

#Fantastic! This Github network has 19 maximal cliques.





# part 2
# Finding cliques (II)
#Great work! Let's continue by finding a particular maximal clique, and then plotting that clique.




# Import necessary modules
import networkx as nx
from nxviz import CircosPlot
import matplotlib.pyplot as plt



#Find the author(s) that are part of the largest maximal clique, and plot the subgraph of that/one of those clique(s) using a CircosPlot. To do this:
#Use the nx.find_cliques() function to calculate the maximal cliques in G. Place this within the provided sorted() function to calculate the largest maximal clique.

# Find the author(s) that are part of the largest maximal clique: largest_clique
largest_clique = sorted(nx.find_cliques(G), key=lambda x:len(x))[-1]



#Create the subgraph consisting of the largest maximal clique using the .subgraph() method and largest_clique.
# Create the subgraph of the largest_clique: G_lc
G_lc = G.subgraph(largest_clique)


#Create the CircosPlot object using the subgraph G_lc (without any other arguments) and plot it.
# Create the CircosPlot object: c
c = CircosPlot(G_lc)

# Draw the CircosPlot to the screen
c.draw()
plt.show()



#The subgraph consisting of the largest maximal clique has 14 users. It's time to move on towards building the recommendation system!
