#part 1
#Scale fish data; Scaling fish data for clustering
#You are given an array samples giving measurements of fish. Each row represents an individual fish. The measurements, such as weight in grams, length in centimeters, and the percentage ratio of height to length, have very different scales. In order to cluster this data effectively, you'll need to standardize these features first. In this exercise, you'll build a pipeline to standardize and cluster the data.
#These fish measurement data were sourced from the Journal of Statistics Education.
#http://jse.amstat.org/jse_data_archive.htm


# Perform the necessary imports
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

# Create scaler: scaler
scaler = StandardScaler()

#Create an instance of KMeans with 4 clusters called kmeans.
# Create KMeans instance: kmeans
kmeans = KMeans(n_clusters=4)

# Create pipeline: pipeline
pipeline = make_pipeline(scaler, kmeans)



#part 2
#Cluster fishes; Clustering the fish data
#You'll now use your standardization and clustering pipeline from the previous exercise to cluster the fish by their measurements, and then create a cross-tabulation to compare the cluster labels with the fish species.
#As before, samples is the 2D array of fish measurements. Your pipeline is available as pipeline, and the species of every fish sample is given by the list species.



# Import pandas
import pandas as pd

# Fit the pipeline to the fish measurement samples.
pipeline.fit(samples)

#Obtain the cluster labels for samples by using the .predict() method of pipeline.
# Calculate the cluster labels: labels
labels = pipeline.predict(samples)

#Using pd.DataFrame(), create a DataFrame df with two columns named 'labels' and 'species', using labels and species, respectively, for the column values.
# Create a DataFrame with labels and species as columns: df
df = pd.DataFrame({'labels': labels,'species':species})

#Using pd.crosstab(), create a cross-tabulation ct of df['labels'] and df['species'].
# Create crosstab: ct
ct = pd.crosstab(df['labels'], df['species'])

# Display ct
print(ct)

