#part 1 How many clusters of grain
# In the video, you learned how to choose a good number of clusters for a dataset using the k-means inertia graph. You are given an array samples containing the measurements (such as area, perimeter, length, and several others) of samples of grain. What's a good number of clusters in this case?
# KMeans and PyPlot (plt) have already been imported for you.
# This dataset was sourced from the UCI Machine Learning Repository.

ks = range(1, 6)
inertias = []

#For each of the given values of k, perform the following steps:
#Create a KMeans instance called model with k clusters.
#Fit the model to the grain data samples.
#Append the value of the inertia_ attribute of model to the list inertias.
#plot ks vs inertias

for k in ks:
    # Create a KMeans instance with k clusters: model
    model=KMeans(n_clusters=k)
    
    # Fit model to samples
    model.fit(samples)
    
    # Append the inertia to the list of inertias
    inertias.append(model.inertia_)
    
# Plot ks vs inertias
plt.plot(ks, inertias, '-o')
plt.xlabel('number of clusters, k')
plt.ylabel('inertia')
plt.xticks(ks)
plt.show()

#The inertia decreases very slowly from 3 clusters to 4, so it looks like 3 clusters would be a good choice for this data.

#part 2
