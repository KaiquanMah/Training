#In the video, you learned when NMF is applied to documents, the components correspond to topics of documents, and the NMF features reconstruct the documents from the topics. Verify this for yourself for the NMF model that you built earlier using the Wikipedia articles. Previously, you saw that the 3rd NMF feature value was high for the articles about actors Anne Hathaway and Denzel Washington. In this exercise, identify the topic of the corresponding NMF component.
#The NMF model you built earlier is available as model, while words is a list of the words that label the columns of the word-frequency array.
#After you are done, take a moment to recognise the topic that the articles about Anne Hathaway and Denzel Washington have in common!



# Import pandas
import pandas as pd

#Create a DataFrame components_df from model.components_, setting columns=words so that columns are labeled by the words.
# Create a DataFrame: components_df
components_df = pd.DataFrame(model.components_, columns=words)

#Print components_df.shape to check the dimensions of the DataFrame.
# Print the shape of the DataFrame
print(components_df.shape)
#(6, 13125)

#Use the .iloc[] accessor on the DataFrame components_df to select row 3. Assign the result to component.
# Select row 3: component
component = components_df.iloc[3,:]

aaron            0.004148
abandon          0.000000
abandoned        0.003056
abandoning       0.000000
abandonment      0.000614
abbas            0.000000
abbey            0.000000
abbreviated      0.002436
abbreviation     0.000081
abc              0.003985
abdomen          0.000000
abdominal        0.000000
abdul            0.000000
abel             0.000000
abilities        0.007669
ability          0.005802
able             0.000914
abnormal         0.000000
abnormalities    0.000000
abnormally       0.000000
aboard           0.000000
abolish          0.000000
abolished        0.000063
abolishing       0.000000
abolition        0.000613
aboriginal       0.000007
abortion         0.000000
abraham          0.000000
abroad           0.000000
abrupt           0.000000
                   ...   
yellow           0.000000
yemen            0.000000
yes              0.002367
yesterday        0.000000
yield            0.000001
yielded          0.000000
yielding         0.000000
yields           0.000000
yoga             0.002580
york             0.059824
yorker           0.000000
yorkshire        0.009392
young            0.066453
younger          0.020304
youngest         0.020115
youth            0.002782
youthful         0.000000
youths           0.000170
youtube          0.011163
yugoslavia       0.002440
zealand          0.012594
zenith           0.000000
zeppelin         0.000000
zero             0.000000
zeus             0.000000
zimbabwe         0.000000
zinc             0.000000
zone             0.001742
zones            0.006720
zoo              0.000000




#Call the .nlargest() method of component, and print the result. This gives the five words with the highest values for that component.
# Print result of nlargest
print(component.nlargest())

    film       0.627877
    award      0.253131
    starred    0.245284
    role       0.211451
    actress    0.186398
    Name: 3, dtype: float64
