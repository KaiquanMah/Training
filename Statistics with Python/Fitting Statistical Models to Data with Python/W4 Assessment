import numpy as np
import matplotlib.pyplot as plt
import matplotlib.mlab as mlab
import math

# Set a random seed for repeated computation
np.random.seed(123)

# Global constants - these are what we need to change
# This is my inital belief about the mean of the average IQ score on campus
prior_sigma = 10 # my uncertainty about the mean
prior_mean = 100 # my initial belief about the mean
sigma_observations = 3 # uncertainty in my observations

# New observations - We are going to be updating this list to see how observing
# different data changes our beliefs about the average IQ score
# qns 1, 2
# new_data = []
# qn 4
# new_data = [110, 110, 110]
# qn 6
new_data = [110, 110, 110, 125, 125]


# Compute some statistics on the new data
n = len(new_data) 

# Some hairy math to avoid doing integrals (Wikipedia has the math!)
if n != 0:
  posterior_mean = (( 1 / prior_sigma ** 2) + n / sigma_observations ** 2)**(-1) * ((prior_mean / prior_sigma ** 2) + sum(new_data) / sigma_observations ** 2)
  posterior_sd = (1 / prior_sigma ** 2 + n / sigma_observations ** 2)**(-1)
else:
  posterior_mean = prior_mean
  posterior_sd = prior_sigma
  
# Plot the distribution of the prior and the posterior
x = np.linspace(50, 150, 100)
plt.plot(x,mlab.normpdf(x, prior_mean, prior_sigma), color = "blue")
plt.plot(x,mlab.normpdf(x, posterior_mean, posterior_sd), color = "red", linestyle = '--')
plt.title("Red = Posterior, Blue = Prior")

# To view the graph, comment-out print(posterior_mean)
# To view the numerical output, comment-out plt.show()

plt.show()
# qn 4, 6
print("Posterior Mean :", posterior_mean)
# qn 4
# Posterior Mean : 109.70873786407766 (had to give this exact float)
# answer rejected 109.71 (2dp)
# qn 6
# Posterior Mean : 115.71709233791748
print("Posterior SD :", posterior_sd)
# Posterior SD : 1.768172888015717






