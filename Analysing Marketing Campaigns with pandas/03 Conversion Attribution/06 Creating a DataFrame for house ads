Creating a DataFrame for house ads
The house ads team is concerned because they've seen their conversion rate drop suddenly in the past few weeks. In the previous exercises, you confirmed that conversion is down because you noticed a pattern around language preferences.
As a data scientist, it is your job to provide your marketing stakeholders with as specific feedback as possible as to what went wrong to maximize their ability to correct the problem. It is vital that you not only say "looks like there's a language problem," but instead identify what the problem is specifically so that the team doesn't repeat their mistake.

Use np.where() to create a new column in house_ads called 'is_correct_lang' whose values are 'Yes' if 'language_displayed' is equal to 'language_preferred' and 'No' otherwise.
Group by date_served and is_correct_lang to get a daily count of the ads served.

# Add the new column is_correct_lang
house_ads['is_correct_lang'] = np.where(
    house_ads['language_preferred'] == house_ads['language_displayed'], 
    'Yes', 
    'No')

# Groupby date_served and is_correct_lang
language_check = house_ads.groupby(['date_served','is_correct_lang'])['is_correct_lang'].count()

# Unstack language_check and fill missing values with 0's
language_check_df = pd.DataFrame(language_check.unstack(level=1)).fillna(0)

# Print results
print(language_check_df)
<script.py> output:
    is_correct_lang    No    Yes
    date_served                 
    2018-01-01        2.0  189.0
    2018-01-02        3.0  247.0
    2018-01-03        0.0  220.0
    2018-01-04        0.0  168.0
    2018-01-05        0.0  160.0
    2018-01-06        1.0  151.0
    2018-01-07        2.0  130.0
    2018-01-08        0.0  154.0
    2018-01-09        0.0  157.0
    2018-01-10        0.0  170.0
    2018-01-11       20.0  135.0
    2018-01-12       18.0  130.0
    2018-01-13       26.0  122.0
    2018-01-14       20.0  131.0
    2018-01-15       16.0  192.0
    2018-01-16       28.0  127.0
    2018-01-17       21.0  127.0
    2018-01-18       31.0  121.0
    2018-01-19       22.0  127.0
    2018-01-20       28.0  124.0
    2018-01-21       14.0  100.0
    2018-01-22       13.0   72.0
    2018-01-23       16.0   69.0
    2018-01-24       13.0   83.0
    2018-01-25       19.0   74.0
    2018-01-26       24.0   92.0
    2018-01-27       18.0  149.0
    2018-01-28       28.0  136.0
    2018-01-29       24.0  142.0
    2018-01-30       23.0  145.0
    2018-01-31       23.0  135.0
    
    
As you can see, the English conversion rate drops around the 11th, and there do not appear to be ads served in other languages for a two week period. You will investigate further.

    
    
    
    
    




#without ['is_correct_lang'] behind groupby would lead to getting ALL cols below
language_check = house_ads.groupby(['date_served','is_correct_lang']).count()
<script.py> output:
                    user_id        marketing_channel        variant  ... is_retained  DoW        channel_code       
    is_correct_lang      No    Yes                No    Yes      No  ...         Yes   No    Yes           No    Yes
    date_served                                                      ...                                            
    2018-01-01          2.0  189.0               2.0  189.0     2.0  ...       189.0  0.0   38.0          0.0   38.0
    2018-01-02          3.0  247.0               3.0  247.0     3.0  ...       247.0  0.0  112.0          0.0  112.0
    2018-01-03          0.0  220.0               0.0  220.0     0.0  ...       220.0  0.0   92.0          0.0   92.0
    2018-01-04          0.0  168.0               0.0  168.0     0.0  ...       168.0  0.0   38.0          0.0   38.0
    2018-01-05          0.0  160.0               0.0  160.0     0.0  ...       160.0  0.0   36.0          0.0   36.0
    2018-01-06          1.0  151.0               1.0  151.0     1.0  ...       151.0  0.0   27.0          0.0   27.0
    2018-01-07          2.0  130.0               2.0  130.0     2.0  ...       130.0  0.0   26.0          0.0   26.0
    2018-01-08          0.0  154.0               0.0  154.0     0.0  ...       154.0  0.0   24.0          0.0   24.0
    2018-01-09          0.0  157.0               0.0  157.0     0.0  ...       157.0  0.0   24.0          0.0   24.0
    2018-01-10          0.0  170.0               0.0  170.0     0.0  ...       170.0  0.0   41.0          0.0   41.0
    2018-01-11         20.0  135.0              20.0  135.0    20.0  ...       135.0  0.0   18.0          0.0   18.0
    2018-01-12         18.0  130.0              18.0  130.0    18.0  ...       130.0  1.0   11.0          1.0   11.0
    2018-01-13         26.0  122.0              26.0  122.0    26.0  ...       122.0  2.0    7.0          2.0    7.0
    2018-01-14         20.0  131.0              20.0  131.0    20.0  ...       131.0  1.0    8.0          1.0    8.0
    2018-01-15         16.0  192.0              16.0  192.0    16.0  ...       192.0  1.0   74.0          1.0   74.0
    2018-01-16         28.0  127.0              28.0  127.0    28.0  ...       127.0  1.0   13.0          1.0   13.0
    2018-01-17         21.0  127.0              21.0  127.0    21.0  ...       127.0  4.0    4.0          4.0    4.0
    2018-01-18         31.0  121.0              31.0  121.0    31.0  ...       121.0  2.0    6.0          2.0    6.0
    2018-01-19         22.0  127.0              22.0  127.0    22.0  ...       127.0  1.0    7.0          1.0    7.0
    2018-01-20         28.0  124.0              28.0  124.0    28.0  ...       124.0  3.0    7.0          3.0    7.0
    2018-01-21         14.0  100.0              14.0  100.0    14.0  ...       100.0  1.0   10.0          1.0   10.0
    2018-01-22         13.0   72.0              13.0   72.0    13.0  ...        72.0  4.0    8.0          4.0    8.0
    2018-01-23         16.0   69.0              16.0   69.0    16.0  ...        69.0  1.0    9.0          1.0    9.0
    2018-01-24         13.0   83.0              13.0   83.0    13.0  ...        83.0  2.0   10.0          2.0   10.0
    2018-01-25         19.0   74.0              19.0   74.0    19.0  ...        74.0  3.0    6.0          3.0    6.0
    2018-01-26         24.0   92.0              24.0   92.0    24.0  ...        92.0  2.0   10.0          2.0   10.0
    2018-01-27         18.0  149.0              18.0  149.0    18.0  ...       149.0  2.0   11.0          2.0   11.0
    2018-01-28         28.0  136.0              28.0  136.0    28.0  ...       136.0  2.0   10.0          2.0   10.0
    2018-01-29         24.0  142.0              24.0  142.0    24.0  ...       142.0  3.0    8.0          3.0    8.0
    2018-01-30         23.0  145.0              23.0  145.0    23.0  ...       145.0  4.0   11.0          4.0   11.0
    2018-01-31         23.0  135.0              23.0  135.0    23.0  ...       135.0  2.0   12.0          2.0   12.0
    
    [31 rows x 26 columns]
