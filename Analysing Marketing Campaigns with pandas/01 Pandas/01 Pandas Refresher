Importing the dataset
Throughout this course, you will use pandas to manipulate data and calculate summary statistics!
In this exercise, you will begin by importing pandas and the marketing dataset into your environment.

Import pandas into your environment with the alias pd.
Import the 'marketing.csv' dataset.

# Import pandas into the environment
import pandas as pd

# Import marketing.csv 
marketing = pd.read_csv('marketing.csv')


Amazing! The next step is to examine the imported dataset for potential errors.















Examining the data
Now that you've imported the data, you will examine it to ensure it is valid. While it may be tempting to dive into analysis, by validating your dataset immediately, you ensure that the insights you derive are both true and actionable. Ensuring the validity of your dataset should always be the first step you take when beginning analysis on a new dataset.
The marketing DataFrame is available in your workspace.

Print the first five rows of the marketing DataFrame.
# Print the first five rows of the DataFrame
print(marketing.head())
<script.py> output:
          user_id date_served marketing_channel          variant converted  ...    age_group date_subscribed date_canceled subscribing_channel is_retained
    0  a100000029      1/1/18         House Ads  personalization      True  ...   0-18 years          1/1/18           NaN           House Ads        True
    1  a100000030      1/1/18         House Ads  personalization      True  ...  19-24 years          1/1/18           NaN           House Ads        True
    2  a100000031      1/1/18         House Ads  personalization      True  ...  24-30 years          1/1/18           NaN           House Ads        True
    3  a100000032      1/1/18         House Ads  personalization      True  ...  30-36 years          1/1/18           NaN           House Ads        True
    4  a100000033      1/1/18         House Ads  personalization      True  ...  36-45 years          1/1/18           NaN           House Ads        True
    
    [5 rows x 12 columns]





Print the summary statistics of all columns in the marketing DataFrame.
# Print the statistics of all columns
print(marketing.describe())
<script.py> output:
               user_id date_served marketing_channel  variant converted  ...    age_group date_subscribed date_canceled subscribing_channel is_retained
    count        10037       10021             10022    10037     10022  ...        10037            1856           577                1856        1856
    unique        7309          31                 5        2         2  ...            7              31           115                   5           2
    top     a100000882     1/15/18         House Ads  control     False  ...  19-24 years         1/16/18        4/2/18           Instagram        True
    freq            12         789              4733     5091      8946  ...         1682             163            15                 600        1279
    
    [4 rows x 12 columns]
#freq is the most common value's frequency    
#top is the most common value    



Print the number of non-missing values and the data type of all columns in marketing.
# Check column data types and non-missing values
print(marketing.info())
<script.py> output:
    <class 'pandas.core.frame.DataFrame'>
    RangeIndex: 10037 entries, 0 to 10036
    Data columns (total 12 columns):
    user_id                10037 non-null object
    date_served            10021 non-null object
    marketing_channel      10022 non-null object
    variant                10037 non-null object
    converted              10022 non-null object
    language_displayed     10037 non-null object
    language_preferred     10037 non-null object
    age_group              10037 non-null object
    date_subscribed        1856 non-null object
    date_canceled          577 non-null object
    subscribing_channel    1856 non-null object
    is_retained            1856 non-null object
    dtypes: object(12)
    memory usage: 941.0+ KB
    None

Perfect! Now that you've examined the marketing DataFrame, you have a more holistic understanding of what the dataset contains.









