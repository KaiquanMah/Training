# In SQL, aggregate functions can't be used in WHERE clauses. For example, the following query is invalid:
SELECT release_year
FROM films
GROUP BY release_year
WHERE COUNT(title) > 10;


# This means that if you want to filter based on the result of an aggregate function, you need another way! That's where the HAVING clause comes in. For example,
SELECT release_year
FROM films
GROUP BY release_year
HAVING COUNT(title) > 10;
# shows only those years in which more than 10 films were released.


# years with films >200
SELECT release_year
FROM films
GROUP BY release_year
HAVING COUNT(*)>200;

# show release years with count of titles > 200
SELECT release_year, COUNT(title)
FROM films
GROUP BY release_year
HAVING COUNT(title) > 200;

# years with budget>60m, order by avg earnings in descending order
SELECT release_year, AVG(budget) AS avg_budget, AVG(gross) AS avg_gross
FROM films
WHERE release_year>1990
GROUP BY release_year
HAVING AVG(budget)>60000000
ORDER BY AVG(gross) desc;


# ALL together now 2
-- select country, average budget, average gross
SELECT country, AVG(budget) AS avg_budget, AVG(gross) AS avg_gross
-- from the films table
FROM films
-- group by country 
GROUP BY country
-- where the country has more than 10 titles
HAVING COUNT(title)>10
-- order by country
ORDER BY country
-- limit to only show 5 results
LIMIT 5;
