Export an environment
Using conda list provides useful information about the packages that are installed. However, the format it describes packages in is not immediately usable to let a colleague or yourself to recreate exactly the same environment on a different machine. For that you want the conda env export command.
There are several optional switches to this command. If you specify -n or --name you can export an environment other than the active one. Without that switch it chooses the active environment. If you specify -f or --file you can output the environment specification to a file rather than just to the terminal output. If you are familiar with piping, you might prefer to pipe the output to a file rather than use the --file switch. By convention, the name environment.yml is used for environment, but any name can be used (but the extension .yml is strongly encouraged).
Without saving to a file, the output might look similar to the below. Notice that this gives exact versions of packages, not simply ranges or prefixes. This assures exact reproducibility of computation within the same environment on a different machine.

$ conda env export -n pd-2015
name: pd-2015
channels:
  - defaults
dependencies:
  - certifi=2018.1.18=py35_0
  - libffi=3.2.1=hd88cf55_4
  - libgcc-ng=7.2.0=h7cc24e2_2
  - libgfortran-ng=7.2.0=h9f7466a_2
  - mkl=2018.0.1=h19d6760_4
  - numpy=1.9.3=py35hff6eb55_3
  - openssl=1.0.2n=hb7f436b_0
  - pandas=0.17.1=np19py35_0
  - pip=9.0.1=py35h7e7da9d_4
  - python=3.5.4=h417fded_24
  - python-dateutil=2.6.1=py35h90d5b31_1
  - pytz=2017.3=py35hb13c558_0
  - readline=7.0=ha6073c6_4
  - setuptools=38.4.0=py35_0
  - six=1.11.0=py35h423b573_1
  - xz=5.2.3=h55aa19d_2
  - zlib=1.2.11=ha838bed_2
  - pip:
    - chardet==3.0.4
    - pexpect==4.2.1
    - urllib3==1.22
prefix: /home/repl/miniconda/envs/pd-2015





Export the environment called course-env to the file course-env.yml.
(base) $ conda env export --name course-env --file course-env.yml
