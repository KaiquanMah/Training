Create an environment from a shared specification
You may recreate an environment from one of the YAML (Yet Another Markup Language) format files produced by conda env export. However, it is also easy to hand write an environment specification with less detail. For example, you might describe an environment you need and want to share with colleagues as follows:

$ cat shared-project.yml
name: shared-project
channels:
  - defaults
dependencies:
  - python=3.6
  - pandas>=0.21
  - scikit-learn
  - statsmodels

Clearly this version is much less specific than what conda env export produces. But it indicates the general tools, with some version specification, that will be required to work on a shared project. Actually creating an environment from this sketched out specification will fill in all the dependencies of those large projects whose packages are named, and this will install dozens of packages not explicitly listed. Often you are happy to have other dependencies in the manner conda decides is best.
Of course, a fully fleshed out specification like we saw in the previous exercise are equally usable. Non-relevant details like the path to the environment on the local system are ignored when installing to a different machine or to a different platform altogether, which will work equally well.
To create an environment from file-name.yml, you can use the following command:
conda env create --file file-name.yml

As a special convention, if you use the plain command conda env create without specifying a YAML file, it will assume you mean the file environment.yml that lives in the local directory.

(base) $ cat environment.ymlname: shared-project
channels:  - defaults
dependencies:
  - python=3.6
  - beautifulsoup4
  - requests









A file environment.yml exists in the local directory within the current session. Use this file to create an environment called shared-project.
(base) $ conda env create
Collecting package metadata (repodata.json): done
Solving environment: done

Downloading and Extracting Packages
beautifulsoup4-4.8.2 | 162 KB    |beautifulsoup4-4.8.2 | 162 KB    | ##################################### | 100%
pyopenssl-19.1.0     | 87 KB     |pyopenssl-19.1.0     | 87 KB     | ##################################### | 100%
pysocks-1.7.1        | 30 KB     |pysocks-1.7.1        | 30 KB     | ##################################### | 100%
cffi-1.13.2          | 224 KB    |cffi-1.13.2          | 224 KB    | ##################################### | 100%
requests-2.22.0      | 92 KB     |requests-2.22.0      | 92 KB     | ##################################### | 100%
cryptography-2.8     | 552 KB    |cryptography-2.8     | 552 KB    | ##################################### | 100%
six-1.13.0           | 26 KB     |six-1.13.0           | 26 KB     | ##################################### | 100%
soupsieve-1.9.5      | 61 KB     |soupsieve-1.9.5      | 61 KB     | ##################################### | 100%
urllib3-1.25.7       | 169 KB    |urllib3-1.25.7       | 169 KB    | ##################################### | 100%
chardet-3.0.4        | 180 KB    |chardet-3.0.4        | 180 KB    | ##################################### | 100%
asn1crypto-1.3.0     | 164 KB    |asn1crypto-1.3.0     | 164 KB    | ##################################### | 100%
Preparing transaction: done
Verifying transaction: done
Executing transaction: done
#
# To activate this environment, use
#
#     $ conda activate shared-project
#
# To deactivate an active environment, use
#
#     $ conda deactivate







The current session directory also has a file named shared-config.yml. Create an environment based on this specification. The name of this environment will be functional-data.
(base) $ cat shared-config.yml
name: functional-data
channels:
  - defaults
dependencies:
  - python=3
  - cytoolz
  - attrs



(base) $ conda env create --file shared-config.yml
Collecting package metadata (repodata.json): done
Solving environment: done

Downloading and Extracting Packages
cytoolz-0.10.1       | 392 KB    |cytoolz-0.10.1       | 392 KB    | ##################################### | 100%
python-3.8.1         | 49.5 MB   |python-3.8.1         | 49.5 MB   | ########7python-3.8.1         | 49.5 MB   | ##################7python-3.8.1         | 49.5 MB   | #############################1python-3.8.1         | 49.5 MB   | ##################################### | 100%
pip-19.3.1           | 1.7 MB    |pip-19.3.1           | 1.7 MB    | ##################################### | 100%
setuptools-44.0.0    | 522 KB    |setuptools-44.0.0    | 522 KB    | ##################################### | 100%
certifi-2019.11.28   | 153 KB    |certifi-2019.11.28   | 153 KB    | ##################################### | 100%
attrs-19.3.0         | 39 KB     |attrs-19.3.0         | 39 KB     | ##################################### | 100%
wheel-0.33.6         | 37 KB     |wheel-0.33.6         | 37 KB     | ##################################### | 100%
Preparing transaction: done
Verifying transaction: done
Executing transaction: done
#
# To activate this environment, use
#
#     $ conda activate functional-data
#
# To deactivate an active environment, use
#
#     $ conda deactivate





(base) $ conda env list
# conda environments:
#
_tmp                     /.conda/envs/_tmp
conda-essentials         /.conda/envs/conda-essentials
course-env               /.conda/envs/course-env
functional-data          /.conda/envs/functional-data
pd-2015                  /.conda/envs/pd-2015
py1.0                    /.conda/envs/py1.0
shared-project           /.conda/envs/shared-project
test-env                 /.conda/envs/test-env
base                  *  /home/repl/miniconda
