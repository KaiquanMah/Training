Compatibility with different versions
A common case for using environments is in developing scripts or Jupyter notebooks that rely on particular software versions for their functionality. Over time, the underlying tools might change, making updating the scripts worthwhile. Being able to switch between environments with different versions of the underlying packages installed makes this development process much easier.
In this chapter, you will walk through steps of doing this with a very simple script as an example.




The file weekly_humidity.py is stored in the current session. First just take a look at it using the Unix tool cat. You will see that the purpose of this script is rather trivial: it shows the last few days of the rolling mean of humidity taken from a data file. It would be easy to generalize this with switches to show different periods, different rolling intervals, different data sources, etc.
(base) $ cat weekly_humidity.py
# weekly_humidity.py
# rolling mean of humidity
import pandas as pd
df = pd.read_csv('pittsburgh2015_celsius.csv')
humidity = df['Mean Humidity']
print(pd.rolling_mean(humidity, 7).tail(5))


Run the script (in the current base environment).
(base) $ python weekly_humidity.py
weekly_humidity.py:6: FutureWarning: pd.rolling_mean is deprecatedfor Series and will be removed in a future version, replace with
        Series.rolling(window=7,center=False).mean()  print(pd.rolling_mean(humidity, 7).tail(5))
360    77.000000
361    80.428571
362    78.857143363    78.285714
364    78.714286
Name: Mean Humidity, dtype: float64


The script ran and produced a little report of the rolling mean of humidity. However, it also produced some rather noisy complaints about deprecated syntax in the Pandas library (called a FutureWarning). You now remember that you created this script a few years ago when you were using the pd-2015 environment. Switch to that environment.
(base) $ conda activate pd-2015







Run the script in the current pd-2015 environment. You will notice that the report itself is the same, but the FutureWarning is not present. For a first step, this is how to utilize this script.
(base) $ conda env list
# conda environments:
#
_tmp                     /.conda/envs/_tmp
conda-essentials         /.conda/envs/conda-essentials
course-env               /.conda/envs/course-env
functional-data          /.conda/envs/functional-data
pd-2015                  /.conda/envs/pd-2015
py1.0                    /.conda/envs/py1.0
shared-project           /.conda/envs/shared-project
test-env                 /.conda/envs/test-env
base                  *  /home/repl/miniconda

(pd-2015) $ python weekly_humidity.py
weekly_humidity.py:6: FutureWarning: pd.rolling_mean is deprecatedfor Series and will be removed in a future version, replace with
        Series.rolling(window=7,center=False).mean()
  print(pd.rolling_mean(humidity, 7).tail(5))
360    77.000000
361    80.428571
362    78.857143
363    78.285714
364    78.714286
Name: Mean Humidity, dtype: float64


