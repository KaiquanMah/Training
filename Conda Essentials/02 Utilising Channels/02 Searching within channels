Searching within channels
If a particular colleague or other recognized user may have published a package useful to you, you can search for it using the anaconda search command. For example, David Mertz, the principal author of this course, has a channel and Anaconda Cloud account called davidmertz. You can search his channel using the command below; the option --channel (or -c for short) specifies the channel to search. Particular users may have published more niche software you would like to use; for example, colleagues of yours may publish packages of special use in your field or topic area.

$ conda search --channel davidmertz --override-channels --platform linux-64
Loading channels: done
Name                       Version                   Build  Channel
accelerate                 2.2.0               np110py27_2  davidmertz
accelerate                 2.2.0               np110py35_2  davidmertz
accelerate-dldist          0.1                 np110py27_1  davidmertz
accelerate-dldist          0.1                 np110py35_1  davidmertz
accelerate-gensim          0.12.3             np110py27_96  davidmertz
accelerate-gensim          0.12.3             np110py35_96  davidmertz
accelerate-skimage         0.1.0                    py27_1  davidmertz
accelerate-skimage         0.1.0                    py35_1  davidmertz
constants                  0.0.2                    py35_0  davidmertz
humidity                   0.1              py36ha038022_0  davidmertz
textadapter                2.0.0                    py27_0  davidmertz
textadapter                2.0.0                    py35_0  davidmertz
textadapter                2.0.0                    py36_0  davidmertz





In this case, the switch --override-channels is used to prevent searching on default channels. The switch --platform is used to select a platform that may differ from the one on which the search is run (absent the switch, the current computer's platform is used).
The first search is unusual in that it does not specify a package name, which is more typical actual use. For example, you might want to know which versions of the package of textadapter for the win-64 platform are available for any version of Python (assuming you know in which channels to look):

$ conda search -c conda-forge -c sseefeld -c gbrener --platform win-64 textadapter
Loading channels: done
Name                       Version                   Build  Channel
textadapter                2.0.0                    py27_0  conda-forge
textadapter                2.0.0                    py27_0  sseefeld
textadapter                2.0.0                    py34_0  sseefeld
textadapter                2.0.0                    py35_0  conda-forge
textadapter                2.0.0                    py35_0  sseefeld
textadapter                2.0.0                    py36_0  sseefeld

Based on the examples shown, in which of the channels used in the examples above could you find an osx-64 version of textadapter for Python 3.6?


sseefeld, conda-forge
gbrener, ssefeld
conda-forge
gbrener, davidmertz
sseefeld
davidmertz, conda-forge, gbrener
#yes davidmertz


(base) $ conda search -c conda-forge -c sseefeld -c gbrener --override-channels --platform osx-64 textadapter
Loading channels: done
# Name                       Version           Build  Channel
textadapter                    2.0.0          py27_0  conda-forge
textadapter                    2.0.0          py27_0  gbrener
textadapter                    2.0.0  py27h355e19c_0  conda-forge
textadapter                    2.0.0 py27h418f4c1_1000  conda-forge
textadapter                    2.0.0          py35_0  conda-forge
textadapter                    2.0.0          py35_0  gbrener



(base) $ conda search -c davidmertz --override-channels --platform osx-64 textadapter
Loading channels: done
# Name                       Version           Build  Channel
textadapter                    2.0.0          py27_0  davidmertz
textadapter                    2.0.0          py35_0  davidmertz
textadapter                    2.0.0          py36_0  davidmertz



