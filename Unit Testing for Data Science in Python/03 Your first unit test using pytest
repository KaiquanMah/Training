Your first unit test using pytest
The data file containing housing area and prices uses commas as thousands separators, e.g. "2,081" or "314,942", as you can see in the IPython Shell.
The convert_to_int() function takes a comma separated integer string as argument, and returns the integer. Therefore, the expected return value of convert_to_int("2,081") is the integer 2081.
This function is defined in the module preprocessing_helpers.py. But it is not known if the function is working properly.

area (sq. ft.)  price (dollars)
2,081    		314,942

Import the pytest package.
# Import the pytest package
import pytest



Import the function convert_to_int().
# Import convert_to_int() from the module preprocessing_helpers.py
from preprocessing_helpers import convert_to_int





Complete the name of the unit test by adding the prefix which pytest uses to distinguish unit tests from ordinary functions.
# Complete the unit test name by adding a prefix
def test_on_string_with_one_comma():
  pass




Complete the assert statement to check if convert_to_int() returns the expected value for the argument "2,081".
# Complete the unit test name by adding a prefix
def test_on_string_with_one_comma():
  # Complete the assert statement
  assert convert_to_int("2,081") == 2081


You just wrote your first unit test using pytest. Congratulations! A unit test takes 5 minutes to write, but saves you many hours in the future.

