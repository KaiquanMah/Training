#bash scripting
#https://devhints.io/bash
Scheduling cronjobs with crontab
As the resident data scientist, you have been asked to automate part of a data processing pipeline. You will use one of the cronjob schedules created in a previous exercise.
You will use the built in crontab functionality of this workspace to schedule a data pipeline script, extract_data.sh to run at 30 minutes past 2am every day. Running early in the morning saves a great amount of cost by utilizing cheaper server power.
You will end up in the nano text editor where you save a file with ctrl + o (press enter) and exit with ctrl + x. Useful Nano documentation is here.
At any stage you can refresh your browser window and you will get a fresh workspace to try again if you accidentally make a mistake in the workspace.



Verify there are no existing cronjobs by listing them.
repl:~$ crontab -l
# This is your crontab file.# Schedule your crontabs below.






Use the edit command for crontab (select nano) then schedule extract_data.sh to run with Bash at 2:30am every day.
repl:~$ crontab -e

Select an editor.  To change later, run 'select-editor'.
  1. /bin/nano        <---- easiest
  2. /usr/bin/vim.basic

Choose 1-2 [1]: 1




repl:~$ crontab -e
crontab: installing new crontab






Verify the cronjob has been scheduled in the crontab by listing all current scheduled cronjobs.
repl:~$ crontab -l
# This is your crontab file.
# Schedule your crontabs below.
30 2 * * * bash extract_data.sh



Nice work! You'll save lots of time and money with your newfound crontab skills.

