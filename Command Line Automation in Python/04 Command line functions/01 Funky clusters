You need to write an integration test that verifies that your cloud environment can run KMeans clustering algorithms. One issue you have had in the past is that it gets tedious to keep rewriting code that needs minor changes. You have learned that you can accomplish these small changes by creating a command line tool instead. To prepare your code to become a command line tool, first you must refactor it into functions. Write two functions that make your code ready to be run by a command line tool library.
The make_blobs and KMeans modules have been imported for you. These modules are from sklearn a widely used machine learning library.


sklearn is a machine learning library that has many algorithms. You will use it to perform machine learning.
Create a function that makes blobs using the sklearn.datasets.samples_generator.make_blobs library. These blobs are sample data that will be used to create clusters. It accepts n_samples, centers, random_state.
Create a function that performs KMeans clustering. KMeans is a type of machine learning algorithm that clusters data into logical groups.



script.py
from sklearn.datasets.samples_generator import make_blobs
from sklearn.cluster import KMeans

# Create sample blobs from sklearn datasets
def blobs():
    X, y = make_blobs(n_samples=10, centers=3, n_features=2,random_state=0)
    return X,y
  
# Perform KMeans cluster
def cluster(X, random_state=170, num=2):
    return KMeans(n_clusters=num, random_state=random_state).fit_predict(X) # Returns cluster assignment

# Run everything:  Call both functions. X creates the data and cluster clusters the data.
def main():
    X,_ = blobs()
    return cluster(X)

# Print the KMeans cluster assignments
print(main()) 





shell
repl:~/workspace$ python3 script.py
[1 1 0 1 1 0 1 0 0 1]



