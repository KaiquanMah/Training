There is a command-line executable written in python called findit.py. Use it to find files from the IPython terminal.

You can run the findit.py script like this in the IPython prompt (note, you typically would run this in the bash shell):
!python3.6 findit.py

It takes two arguments using sys.argv to process them. The first argument is the path to search (i.e. /some/path) and the second is an optional argument that finds a file extension (i.e. .pdf). Use this script to search for files with the extension .txt in the test_dir.
Which is the name of one of the files it finds?
Possible Answers
test_dir/file_99.txt

#yes
test_dir/file_9.txt
#Correct! You can use the command !/usr/bin/python3.6 findit.py test_dir .txt to find the text files. Note the full path to the Python executable is a safe way to reference a script that will be run by different users.



test_dir/file_09.txt
test_dir/file_9.csv.txt








ipython shell
In [2]:
!python3 findit.py
Arguments to sys.arg: ['findit.py']
Pass in path and/or extension:  findit.py /some/path .csv


In [7]:
!python3 findit.py /some/path
Arguments to sys.arg: ['findit.py', '/some/path']
Found matches: []

In [8]:
!python3 findit.py "/some/path"
Arguments to sys.arg: ['findit.py', '/some/path']
Found matches: []

In [11]:
!python findit.py /some/path
  File "findit.py", line 19
    print(f"Arguments to sys.arg: {args}")
                                        ^
SyntaxError: invalid syntax


In [12]:
!python3.6 findit.py /some/path
Arguments to sys.arg: ['findit.py', '/some/path']
Found matches: []


In [14]:
!/usr/bin/python3.6 findit.py test_dir .txt
Arguments to sys.arg: ['findit.py', 'test_dir', '.txt']
Found matches: ['test_dir/file_3.txt', 'test_dir/file_7.txt', 'test_dir/file_5.txt', 'test_dir/file_9.txt', 'test_dir/file_1.txt']

