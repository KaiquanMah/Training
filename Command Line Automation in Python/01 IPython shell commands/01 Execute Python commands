df = display free disk usage command
! = execute; only works in iPython shell & Jupyter, NOT in python (have to use subprocess module)
-h = 'h' flag
!df -h => generates output in a columnar structure 
ipython can parse the columnar structure into a SList data type


purpose
-extract fields
-search the output content





Noah Gift - The Three Immutable Laws of Automation
-Any task that is talked about being automated, will eventually be automated. 
-If it isn't automated it is broken. 
-If a human is doing it, a machine eventually will do it better.











Execute Python commands
Your boss has the habit of tapping you on the shoulder and asking you to do random tasks. They always ask which day you can get it done by. You have noticed that you keep saying "Friday", but this is catching up to you. Create a random day generator to give your boss an answer. This way your work will be evenly distributed throughout the week. This solution is almost complete: "from random import choices;days = ['Mo', 'Tu', 'We', 'Th', 'Fr'];print(choices(days))"
An IPython script, script.ipy, has been provided for you to work in. You can run the script by running ipython script.ipy in the console.
Note that in this chapter you'll be learning many nifty IPython commands to perform basic operating system tasks. You can run these command inside IPython scripts or in Jupyter Notebook cells!

Write a "one liner" using python3 that will print a random day of the week.

#script.ipy
!python3 -c "from random import choices;days = ['Mo', 'Tu', 'We', 'Th', 'Fr'];print(choices(days))"


#shell
repl:~/workspace$ ls
script.ipy

repl:~/workspace$ pwd
/home/repl/workspace

repl:~/workspace$ ipython script.ipy
['Fr']



The choices method will select a random items from a Python list. When this is combined with print, it will give you a random day. Note that you can also run Python 'one liners' via the regular Python interpreter. Just take off '!'. These can come in very handy in your bash or zsh profile.

