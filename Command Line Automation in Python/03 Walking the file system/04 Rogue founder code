Working as employee number 10 at a small startup with millions in funding seemed like a dream job. Now it seems like a nightmare. There are constant outages in production and during the middle of those outages one of the founders builds Java .jar files on their laptop and via ssh loads the .jar files into production servers thinking this will fix the problem. You have mentioned that all software should go through a continuous deployment system.
After a several day continuous outage that caused permanent customer data loss caused by the founder's rogue coding practices, the founder finally listens to you. They ask you to help them identify all of the .jar files located on servers in the prod directory. Make sure you use the powerful recursive glob technique.


Use pathlib.Path to make a Path object for the /home/repl/workspace/prod directory.
Use .glob on the Path object to filter the .jar pattern.
Print out all matches to the .glob pattern.



script.py
import pathlib
import os

path = pathlib.Path("/home/repl/workspace/prod")
matches = sorted(path.glob("*.jar"))
for match in matches:
  print(f"Found rogue .jar file in production: {match}")







shell
repl:~/workspace$ python3 script.py
Found rogue .jar file in production: /home/repl/workspace/prod/hope_this_works.jar
Found rogue .jar file in production: /home/repl/workspace/prod/no_no_no.jar
Found rogue .jar file in production: /home/repl/workspace/prod/please_please_work.jar
Found rogue .jar file in production: /home/repl/workspace/prod/why_me.jar


