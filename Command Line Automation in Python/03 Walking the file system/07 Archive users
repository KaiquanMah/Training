At your university they have hired you to be an assistance for the machine learning course. It has been a very rewarding job, but some parts of the job are frustrating. You get frequent requests to retrieve items from a user's project after the course is over. This has consumed much of your time. You believe you can write an automation script that will archive all user folders and email them the archived copy. If you can do this, it will eliminate about 80% of the work you perform each semester. You are hoping to spend the recovered time helping the lead instructor deliver machine learning content. Use the shutil.archive function to archive a user directory. You will create two archive types: gztar and zip. make_archive and rmtree have been imported for you.

apath is the path where the tree is archived and string arguments "zip" and "gztar" can create the two archives.
Archive the user folder copied to the location /home/repl/workspace/user1.
Create a tar and gzipped archive and a zip archive.
Print both archive files out using os.listdir().




script.py
from shutil import make_archive
import os

# Archive root
username = "user1"
root_dir = "/home/repl/workspace"
apath = "/home/repl/workspace/archive"

# Archive base
final_archive_base = f"{apath}/{username}"

# Create tar and gzipped archive
#("tgt/base(dir+file)Name", "format", "source/rootDir"[, "tgt/baseDir if not appended to tgt dir+file baseName"])
make_archive(final_archive_base, "gztar", apath)

# Create zip archive
make_archive(final_archive_base, "zip", apath)

# Print out archives
print(os.listdir(apath))




shell
repl:~/workspace$ python3 script.py
['user1.tar.gz', 'user1.zip']







Archival success! You used the built-in make_archive function to automate your job and create two different types of archives: zip and tar.gz.

