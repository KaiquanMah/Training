In data science, a training set is a data set that is used to discover possible relationships. A test set is a data set that is used to verify the strength of these potential relationships. When you separate a data set into these parts, you generally allocate more of the data for training, and less for testing.

One function that can be used to create training and test sets is subset.ts(), which returns a subset of a time series where the optional start and end arguments are specified using index values.

> # x is a numerical vector or time series
> # To subset observations from 101 to 500
> train <- subset(x, start = 101, end = 500, ...)

> # To subset the first 500 observations
> train <- subset(x, end = 500, ...)


As you saw in the video, another function, accuracy(), computes various forecast accuracy statistics given the forecasts and the corresponding actual observations. It is smart enough to find the relevant observations if you give it more than the ones you are forecasting.
> # f is an object of class "forecast"
> # x is a numerical vector or time series
> accuracy(f, x, ...)

The accuracy measures provided include root mean squared error (RMSE) which is the square root of the mean squared error (MSE). Minimizing RMSE, which corresponds with increasing accuracy, is the same as minimizing MSE.

The pre-loaded time series gold comprises daily gold prices for 1108 days. Here, you'll use the first 1000 days as a training set, and compute forecasts for the remaining 108 days. These will be compared to the actual values for these days using the simple forcasting functions naive(), which you used earlier in this chapter, and meanf(), which gives forecasts equal to the mean of all observations. You'll have to specify the keyword h (which specifies the number of values you want to forecast) for both.



Use subset() to create a training set for gold comprising the first 1000 observations. This will be called train.
Compute forecasts of the test set, containing the remaining data, using naive() and assign this to naive_fc. Set h accordingly.
Now, compute forecasts of the same test set using meanf() and assign this to mean_fc. Set h accordingly.
Compare the forecast accuracy statistics of the two methods using the accuracy() function.
Based on the above results, store the forecasts with the higher accuracy as bestforecasts.


# Create the training data as train
train <- subset(gold, end = 1000)


# Compute naive forecasts and save to naive_fc
naive_fc <- naive(train, h = 108)


# Compute mean forecasts and save to mean_fc
mean_fc <- meanf(train, h = 108)





# Use accuracy() to compute RMSE statistics
>accuracy(subset.ts(gold, start = 101), naive_fc)
Error: could not find function "subset.ts"

accuracy(naive_fc, gold)
                     ME      RMSE      MAE        MPE      MAPE     MASE
Training set  0.1079897  6.358087  3.20366  0.0201449 0.8050646 1.014334
Test set     -6.5383495 15.842361 13.63835 -1.7462269 3.4287888 4.318139
                   ACF1 Theil's U
Training set -0.3086638        NA
Test set      0.9793153  5.335899


accuracy(mean_fc, gold)
                        ME     RMSE      MAE       MPE      MAPE      MASE
Training set -4.239671e-15 59.17809 53.63397 -2.390227 14.230224 16.981449
Test set      1.319363e+01 19.55255 15.66875  3.138577  3.783133  4.960998
                  ACF1 Theil's U
Training set 0.9907254        NA
Test set     0.9793153  6.123788


# Assign one of the two forecasts as bestforecasts
bestforecasts <- naive_fc





 
 You have compared two types of forecasts based on their RMSE.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 >
naive_fc
     Point Forecast    Lo 80    Hi 80    Lo 95    Hi 95
1001            411 402.8518 419.1482 398.5384 423.4616
1002            411 399.4767 422.5233 393.3766 428.6234
1003            411 396.8869 425.1131 389.4158 432.5842
1004            411 394.7036 427.2964 386.0768 435.9232
1005            411 392.7800 429.2200 383.1350 438.8650
1006            411 391.0410 430.9590 380.4754 441.5246
1007            411 389.4418 432.5582 378.0296 443.9704
1008            411 387.9534 434.0466 375.7532 446.2468
1009            411 386.5554 435.4446 373.6151 448.3849
1010            411 385.2331 436.7669 371.5929 450.4071
1011            411 383.9754 438.0246 369.6695 452.3305
1012            411 382.7738 439.2262 367.8317 454.1683
1013            411 381.6212 440.3788 366.0690 455.9310
1014            411 380.5122 441.4878 364.3729 457.6271
1015            411 379.4421 442.5579 362.7363 459.2637
1016            411 378.4071 443.5929 361.1535 460.8465
1017            411 377.4040 444.5960 359.6194 462.3806
1018            411 376.4300 445.5700 358.1298 463.8702
1019            411 375.4827 446.5173 356.6811 465.3189
1020            411 374.5601 447.4399 355.2699 466.7301
1021            411 373.6602 448.3398 353.8937 468.1063
1022            411 372.7815 449.2185 352.5498 469.4502
1023            411 371.9225 450.0775 351.2362 470.7638
1024            411 371.0821 450.9179 349.9508 472.0492
1025            411 370.2589 451.7411 348.6919 473.3081
1026            411 369.4521 452.5479 347.4579 474.5421
1027            411 368.6606 453.3394 346.2475 475.7525
1028            411 367.8837 454.1163 345.0593 476.9407
1029            411 367.1205 454.8795 343.8921 478.1079
1030            411 366.3704 455.6296 342.7449 479.2551
1031            411 365.6327 456.3673 341.6166 480.3834
1032            411 364.9067 457.0933 340.5064 481.4936
1033            411 364.1921 457.8079 339.4134 482.5866
1034            411 363.4881 458.5119 338.3369 483.6631
1035            411 362.7945 459.2055 337.2761 484.7239
1036            411 362.1107 459.8893 336.2303 485.7697
1037            411 361.4363 460.5637 335.1989 486.8011
1038            411 360.7710 461.2290 334.1814 487.8186
1039            411 360.1144 461.8856 333.1772 488.8228
1040            411 359.4662 462.5338 332.1858 489.8142
1041            411 358.8260 463.1740 331.2067 490.7933
1042            411 358.1935 463.8065 330.2395 491.7605
1043            411 357.5686 464.4314 329.2837 492.7163
1044            411 356.9508 465.0492 328.3390 493.6610
1045            411 356.3401 465.6599 327.4049 494.5951
1046            411 355.7361 466.2639 326.4812 495.5188
1047            411 355.1386 466.8614 325.5674 496.4326
1048            411 354.5475 467.4525 324.6634 497.3366
1049            411 353.9625 468.0375 323.7686 498.2314
1050            411 353.3834 468.6166 322.8830 499.1170
1051            411 352.8101 469.1899 322.0062 499.9938
1052            411 352.2424 469.7576 321.1380 500.8620
1053            411 351.6801 470.3199 320.2780 501.7220
1054            411 351.1231 470.8769 319.4262 502.5738
1055            411 350.5712 471.4288 318.5821 503.4179
1056            411 350.0243 471.9757 317.7458 504.2542
1057            411 349.4823 472.5177 316.9168 505.0832
1058            411 348.9450 473.0550 316.0951 505.9049
1059            411 348.4124 473.5876 315.2805 506.7195
1060            411 347.8842 474.1158 314.4727 507.5273
1061            411 347.3604 474.6396 313.6716 508.3284
1062            411 346.8409 475.1591 312.8771 509.1229
1063            411 346.3255 475.6745 312.0889 509.9111
1064            411 345.8143 476.1857 311.3070 510.6930
1065            411 345.3070 476.6930 310.5312 511.4688
1066            411 344.8036 477.1964 309.7613 512.2387
1067            411 344.3040 477.6960 308.9972 513.0028
1068            411 343.8081 478.1919 308.2388 513.7612
1069            411 343.3158 478.6842 307.4860 514.5140
1070            411 342.8271 479.1729 306.7386 515.2614
1071            411 342.3419 479.6581 305.9965 516.0035
1072            411 341.8601 480.1399 305.2596 516.7404
1073            411 341.3816 480.6184 304.5279 517.4721
1074            411 340.9064 481.0936 303.8011 518.1989
1075            411 340.4344 481.5656 303.0792 518.9208
1076            411 339.9655 482.0345 302.3621 519.6379
1077            411 339.4997 482.5003 301.6497 520.3503
1078            411 339.0369 482.9631 300.9419 521.0581
1079            411 338.5771 483.4229 300.2387 521.7613
1080            411 338.1201 483.8799 299.5399 522.4601
1081            411 337.6661 484.3339 298.8454 523.1546
1082            411 337.2148 484.7852 298.1552 523.8448
1083            411 336.7662 485.2338 297.4692 524.5308
1084            411 336.3204 485.6796 296.7874 525.2126
1085            411 335.8772 486.1228 296.1095 525.8905
1086            411 335.4365 486.5635 295.4357 526.5643
1087            411 334.9985 487.0015 294.7657 527.2343
1088            411 334.5630 487.4370 294.0996 527.9004
1089            411 334.1299 487.8701 293.4373 528.5627
1090            411 333.6992 488.3008 292.7787 529.2213
1091            411 333.2710 488.7290 292.1237 529.8763
1092            411 332.8451 489.1549 291.4723 530.5277
1093            411 332.4214 489.5786 290.8245 531.1755
1094            411 332.0001 489.9999 290.1801 531.8199
1095            411 331.5810 490.4190 289.5391 532.4609
1096            411 331.1641 490.8359 288.9015 533.0985
1097            411 330.7494 491.2506 288.2673 533.7327
1098            411 330.3368 491.6632 287.6362 534.3638
1099            411 329.9263 492.0737 287.0084 534.9916
1100            411 329.5178 492.4822 286.3838 535.6162
1101            411 329.1114 492.8886 285.7623 536.2377
1102            411 328.7070 493.2930 285.1438 536.8562
1103            411 328.3046 493.6954 284.5284 537.4716
1104            411 327.9042 494.0958 283.9159 538.0841
1105            411 327.5056 494.4944 283.3064 538.6936
1106            411 327.1090 494.8910 282.6998 539.3002
1107            411 326.7142 495.2858 282.0960 539.9040
1108            411 326.3213 495.6787 281.4950 540.5050















>mean_fc
     Point Forecast   Lo 80   Hi 80    Lo 95    Hi 95
1001        391.268 315.301 467.235 275.0225 507.5136
1002        391.268 315.301 467.235 275.0225 507.5136
1003        391.268 315.301 467.235 275.0225 507.5136
1004        391.268 315.301 467.235 275.0225 507.5136
1005        391.268 315.301 467.235 275.0225 507.5136
1006        391.268 315.301 467.235 275.0225 507.5136
1007        391.268 315.301 467.235 275.0225 507.5136
1008        391.268 315.301 467.235 275.0225 507.5136
1009        391.268 315.301 467.235 275.0225 507.5136
1010        391.268 315.301 467.235 275.0225 507.5136
1011        391.268 315.301 467.235 275.0225 507.5136
1012        391.268 315.301 467.235 275.0225 507.5136
1013        391.268 315.301 467.235 275.0225 507.5136
1014        391.268 315.301 467.235 275.0225 507.5136
1015        391.268 315.301 467.235 275.0225 507.5136
1016        391.268 315.301 467.235 275.0225 507.5136
1017        391.268 315.301 467.235 275.0225 507.5136
1018        391.268 315.301 467.235 275.0225 507.5136
1019        391.268 315.301 467.235 275.0225 507.5136
1020        391.268 315.301 467.235 275.0225 507.5136
1021        391.268 315.301 467.235 275.0225 507.5136
1022        391.268 315.301 467.235 275.0225 507.5136
1023        391.268 315.301 467.235 275.0225 507.5136
1024        391.268 315.301 467.235 275.0225 507.5136
1025        391.268 315.301 467.235 275.0225 507.5136
1026        391.268 315.301 467.235 275.0225 507.5136
1027        391.268 315.301 467.235 275.0225 507.5136
1028        391.268 315.301 467.235 275.0225 507.5136
1029        391.268 315.301 467.235 275.0225 507.5136
1030        391.268 315.301 467.235 275.0225 507.5136
1031        391.268 315.301 467.235 275.0225 507.5136
1032        391.268 315.301 467.235 275.0225 507.5136
1033        391.268 315.301 467.235 275.0225 507.5136
1034        391.268 315.301 467.235 275.0225 507.5136
1035        391.268 315.301 467.235 275.0225 507.5136
1036        391.268 315.301 467.235 275.0225 507.5136
1037        391.268 315.301 467.235 275.0225 507.5136
1038        391.268 315.301 467.235 275.0225 507.5136
1039        391.268 315.301 467.235 275.0225 507.5136
1040        391.268 315.301 467.235 275.0225 507.5136
1041        391.268 315.301 467.235 275.0225 507.5136
1042        391.268 315.301 467.235 275.0225 507.5136
1043        391.268 315.301 467.235 275.0225 507.5136
1044        391.268 315.301 467.235 275.0225 507.5136
1045        391.268 315.301 467.235 275.0225 507.5136
1046        391.268 315.301 467.235 275.0225 507.5136
1047        391.268 315.301 467.235 275.0225 507.5136
1048        391.268 315.301 467.235 275.0225 507.5136
1049        391.268 315.301 467.235 275.0225 507.5136
1050        391.268 315.301 467.235 275.0225 507.5136
1051        391.268 315.301 467.235 275.0225 507.5136
1052        391.268 315.301 467.235 275.0225 507.5136
1053        391.268 315.301 467.235 275.0225 507.5136
1054        391.268 315.301 467.235 275.0225 507.5136
1055        391.268 315.301 467.235 275.0225 507.5136
1056        391.268 315.301 467.235 275.0225 507.5136
1057        391.268 315.301 467.235 275.0225 507.5136
1058        391.268 315.301 467.235 275.0225 507.5136
1059        391.268 315.301 467.235 275.0225 507.5136
1060        391.268 315.301 467.235 275.0225 507.5136
1061        391.268 315.301 467.235 275.0225 507.5136
1062        391.268 315.301 467.235 275.0225 507.5136
1063        391.268 315.301 467.235 275.0225 507.5136
1064        391.268 315.301 467.235 275.0225 507.5136
1065        391.268 315.301 467.235 275.0225 507.5136
1066        391.268 315.301 467.235 275.0225 507.5136
1067        391.268 315.301 467.235 275.0225 507.5136
1068        391.268 315.301 467.235 275.0225 507.5136
1069        391.268 315.301 467.235 275.0225 507.5136
1070        391.268 315.301 467.235 275.0225 507.5136
1071        391.268 315.301 467.235 275.0225 507.5136
1072        391.268 315.301 467.235 275.0225 507.5136
1073        391.268 315.301 467.235 275.0225 507.5136
1074        391.268 315.301 467.235 275.0225 507.5136
1075        391.268 315.301 467.235 275.0225 507.5136
1076        391.268 315.301 467.235 275.0225 507.5136
1077        391.268 315.301 467.235 275.0225 507.5136
1078        391.268 315.301 467.235 275.0225 507.5136
1079        391.268 315.301 467.235 275.0225 507.5136
1080        391.268 315.301 467.235 275.0225 507.5136
1081        391.268 315.301 467.235 275.0225 507.5136
1082        391.268 315.301 467.235 275.0225 507.5136
1083        391.268 315.301 467.235 275.0225 507.5136
1084        391.268 315.301 467.235 275.0225 507.5136
1085        391.268 315.301 467.235 275.0225 507.5136
1086        391.268 315.301 467.235 275.0225 507.5136
1087        391.268 315.301 467.235 275.0225 507.5136
1088        391.268 315.301 467.235 275.0225 507.5136
1089        391.268 315.301 467.235 275.0225 507.5136
1090        391.268 315.301 467.235 275.0225 507.5136
1091        391.268 315.301 467.235 275.0225 507.5136
1092        391.268 315.301 467.235 275.0225 507.5136
1093        391.268 315.301 467.235 275.0225 507.5136
1094        391.268 315.301 467.235 275.0225 507.5136
1095        391.268 315.301 467.235 275.0225 507.5136
1096        391.268 315.301 467.235 275.0225 507.5136
1097        391.268 315.301 467.235 275.0225 507.5136
1098        391.268 315.301 467.235 275.0225 507.5136
1099        391.268 315.301 467.235 275.0225 507.5136
1100        391.268 315.301 467.235 275.0225 507.5136
1101        391.268 315.301 467.235 275.0225 507.5136
1102        391.268 315.301 467.235 275.0225 507.5136
1103        391.268 315.301 467.235 275.0225 507.5136
1104        391.268 315.301 467.235 275.0225 507.5136
1105        391.268 315.301 467.235 275.0225 507.5136
1106        391.268 315.301 467.235 275.0225 507.5136
1107        391.268 315.301 467.235 275.0225 507.5136
1108        391.268 315.301 467.235 275.0225 507.5136





