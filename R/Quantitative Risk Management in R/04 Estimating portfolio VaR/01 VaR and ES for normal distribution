Computing VaR and ES for normal distribution
The standard function qnorm() calculates quantiles of a normal distribution from the probability p, the mean, and standard deviation, and thus can be used to calculate value-at-risk (VaR). The function ESnorm() from the QRM package calculates the expected shortfall (ES) for a normal distribution from the probability p, location parameter mu, and scale parameter sd:
qnorm(p, mean = 0, sd = 1)
ESnorm(p, mu = 0, sd = 1)

Common numeric values for p include 0.95 and 0.99 for confidence levels of 95% and 99%, respectively.

In this exercise, you will compute and display VaR and ES for a normal distribution N(μ,σ2) with mean μ and standard deviation σ. In the process, you will use the new functions for sequence generation and adding straight lines to a plot. You can read about their arguments by typing in ?seq and ?abline to your console.

The variables mu and sigma contain the estimated mean and standard deviation of the Dow Jones index returns for 2008-2009 contained in djx. All three objects are available in your workspace.




Fill in seq() to make a sequence of 100 x-values going from −4σ to 4σ and assign to xvals.
Fill in dnorm() to compute the density of a N(μ,σ2) distribution at xvals and assign to ndens.
Plot ndens against xvals using type = "l".
Use qnorm() and ESnorm() to compute the 99% VaR and 99% ES of the distribution and assign to VaR99 and ES99, respectively.
Fill in abline() to create vertical lines for VaR99 and ES99 in red and green, respectively.



> mu
[1] -0.000444099
> sigma
[1] 0.02001809


> xvals
  [1] -0.0800723726 -0.0784547489 -0.0768371252 -0.0752195015 -0.0736018778
  [6] -0.0719842541 -0.0703666304 -0.0687490068 -0.0671313831 -0.0655137594
 [11] -0.0638961357 -0.0622785120 -0.0606608883 -0.0590432646 -0.0574256409
 [16] -0.0558080173 -0.0541903936 -0.0525727699 -0.0509551462 -0.0493375225
 [21] -0.0477198988 -0.0461022751 -0.0444846514 -0.0428670277 -0.0412494041
 [26] -0.0396317804 -0.0380141567 -0.0363965330 -0.0347789093 -0.0331612856
 [31] -0.0315436619 -0.0299260382 -0.0283084145 -0.0266907909 -0.0250731672
 [36] -0.0234555435 -0.0218379198 -0.0202202961 -0.0186026724 -0.0169850487
 [41] -0.0153674250 -0.0137498014 -0.0121321777 -0.0105145540 -0.0088969303
 [46] -0.0072793066 -0.0056616829 -0.0040440592 -0.0024264355 -0.0008088118
 [51]  0.0008088118  0.0024264355  0.0040440592  0.0056616829  0.0072793066
 [56]  0.0088969303  0.0105145540  0.0121321777  0.0137498014  0.0153674250
 [61]  0.0169850487  0.0186026724  0.0202202961  0.0218379198  0.0234555435
 [66]  0.0250731672  0.0266907909  0.0283084145  0.0299260382  0.0315436619
 [71]  0.0331612856  0.0347789093  0.0363965330  0.0380141567  0.0396317804
 [76]  0.0412494041  0.0428670277  0.0444846514  0.0461022751  0.0477198988
 [81]  0.0493375225  0.0509551462  0.0525727699  0.0541903936  0.0558080173
 [86]  0.0574256409  0.0590432646  0.0606608883  0.0622785120  0.0638961357
 [91]  0.0655137594  0.0671313831  0.0687490068  0.0703666304  0.0719842541
 [96]  0.0736018778  0.0752195015  0.0768371252  0.0784547489  0.0800723726
 
 
> ndens
  [1]  0.007304050  0.010040266  0.013711683  0.018603747  0.025076918
  [6]  0.033582418  0.044680071  0.059058148  0.077555012  0.101182173
 [11]  0.131148164  0.168882445  0.216058263  0.274613152  0.346765488
 [16]  0.435025266  0.542197083  0.671373124  0.825913962  1.009414978
 [21]  1.225656469  1.478535850  1.771980904  2.109843760  2.495776177
 [26]  2.933087740  3.424589767  3.972428923  4.577915757  5.241354547
 [31]  5.961881785  6.737321361  7.564064898  8.436985644  9.349393834
 [36] 10.293040443 11.258174724 12.233658986 13.207141678 14.165287178
 [41] 15.094057878 15.979041286 16.805812245 17.560317998 18.229272024
 [46] 18.800541392 19.263511928 19.609415878 19.831607969 19.925777696
 [51] 19.890088400 19.725236838 19.434430557 19.023284113 18.499638790
 [56] 17.873313950 17.155800986 16.359913226 15.499406641 14.588587003
 [61] 13.641919030 12.673652231 11.697476586 10.726219100  9.771589714
 [66]  8.843982286  7.952333499  7.104039806  6.304929985  5.559288733
 [71]  4.869925007  4.238277581  3.664549572  3.147863453  2.686428279
 [76]  2.277711403  1.918607872  1.605601734  1.334914700  1.102638832
 [81]  0.904851126  0.737708963  0.597526360  0.480831774  0.384408807
 [86]  0.305321635  0.240927243  0.188876672  0.147107500  0.113829647
 [91]  0.087506445  0.066832664  0.050710932  0.038227728  0.028629875
 [96]  0.021302203  0.015746849  0.011564500  0.008437702  0.006116254
 
 
 
 
 
# Make a sequence of 100 x-values going from -4*sigma to 4*sigma
xvals <- seq(from = -4*sigma, to = 4*sigma, length.out = 100)

# Compute the density of a N(mu, sigma^2) distribution at xvals
ndens <- dnorm(xvals, mean = mu, sd = sigma)

# Plot ndens against xvals
plot(xvals, ndens, type = "l")

# Compute the 99% VaR and 99% ES of a N(mu, sigma^2) distribution
VaR99 <- qnorm(0.99, mean = mu, sd = sigma)
ES99 <- ESnorm(0.99, mu = mu, sd = sigma)

# Draw vertical lines at VaR99 and ES99 in red and green
abline(v = VaR99, col = "red")
abline(v = ES99, col = "green")





> VaR99
[1] 0.04612495
> ES99
[1] 0.05290841

#https://www.rdocumentation.org/packages/base/versions/3.6.1/topics/seq
#https://www.rdocumentation.org/packages/stats/versions/3.6.1/topics/Normal




In this case, ES99 is only 14.7% bigger than VaR99. For heavy-tailed distributions, the difference can be much greater.



