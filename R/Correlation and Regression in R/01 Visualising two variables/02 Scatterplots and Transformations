Creating scatterplots
Creating scatterplots is simple and they are so useful that it is worthwhile to expose yourself to many examples. Over time, you will gain familiarity with the types of patterns that you see. You will begin to recognize how scatterplots can reveal the nature of the relationship between two variables.

In this exercise, and throughout this chapter, we will be using several datasets listed below. These data are available through the openintro package. Briefly:
The mammals dataset contains information about 39 different species of mammals, including their body weight, brain weight, gestation time, and a few other variables.
The mlbBat10 dataset contains batting statistics for 1,199 Major League Baseball players during the 2010 season.
The bdims dataset contains body girth and skeletal diameter measurements for 507 physically active individuals.
The smoking dataset contains information on the smoking habits of 1,691 citizens of the United Kingdom.
To see more thorough documentation, use the ? or help() functions.

Using the mammals dataset, create a scatterplot illustrating how the brain weight of a mammal varies as a function of its body weight.
> str(mammals)
'data.frame':	62 obs. of  11 variables:
 $ Species    : Factor w/ 62 levels "Africanelephant",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ BodyWt     : num  6654 1 3.38 0.92 2547 ...
 $ BrainWt    : num  5712 6.6 44.5 5.7 4603 ...
 $ NonDreaming: num  NA 6.3 NA NA 2.1 9.1 15.8 5.2 10.9 8.3 ...
 $ Dreaming   : num  NA 2 NA NA 1.8 0.7 3.9 1 3.6 1.4 ...
 $ TotalSleep : num  3.3 8.3 12.5 16.5 3.9 9.8 19.7 6.2 14.5 9.7 ...
 $ LifeSpan   : num  38.6 4.5 14 NA 69 27 19 30.4 28 50 ...
 $ Gestation  : num  645 42 60 25 624 180 35 392 63 230 ...
 $ Predation  : int  3 3 1 5 3 4 1 4 1 1 ...
 $ Exposure   : int  5 1 1 2 5 4 1 5 2 1 ...
 $ Danger     : int  3 3 1 3 4 4 1 4 1 1 ...

# Mammals scatterplot
ggplot(mammals, aes(x=BodyWt, y=BrainWt)) +
  geom_point()






Using the mlbBat10 dataset, create a scatterplot illustrating how the slugging percentage (SLG) of a player varies as a function of his on-base percentage (OBP).
> str(mlbBat10)
'data.frame':	1199 obs. of  19 variables:
 $ name    : Factor w/ 1120 levels "A Jackson","B Butler",..: 13 9 21 14 25 19 22 10 24 3 ...
 $ team    : Factor w/ 30 levels "ATL","BAL","BOS",..: 15 13 18 5 11 3 2 12 13 4 ...
 $ position: Factor w/ 9 levels "1B","2B","3B",..: 4 5 3 4 2 5 4 4 2 2 ...
 $ G       : num  162 157 157 160 160 150 160 153 160 155 ...
 $ AB      : num  680 663 656 651 651 632 629 629 626 626 ...
 $ R       : num  74 111 99 96 112 92 79 85 103 100 ...
 $ H       : num  214 179 186 179 175 174 187 166 200 172 ...
 $ 2B      : num  30 30 36 18 32 38 45 24 41 33 ...
 $ 3B      : num  3 3 3 3 4 0 3 10 3 5 ...
 $ HR      : num  6 10 21 1 29 11 12 3 29 18 ...
 $ RBI     : num  43 67 91 47 83 56 60 58 109 59 ...
 $ TB      : num  268 245 291 206 302 245 274 219 334 269 ...
 $ BB      : num  45 63 50 45 76 53 73 60 57 46 ...
 $ SO      : num  86 106 115 47 184 71 93 74 77 83 ...
 $ SB      : num  42 18 4 68 11 5 7 26 3 16 ...
 $ CS      : num  9 5 2 18 4 4 2 4 2 12 ...
 $ OBP     : num  0.359 0.34 0.33 0.341 0.366 0.333 0.37 0.331 0.381 0.332 ...
 $ SLG     : num  0.394 0.37 0.444 0.316 0.464 0.388 0.436 0.348 0.534 0.43 ...
 $ AVG     : num  0.315 0.27 0.284 0.275 0.269 0.275 0.297 0.264 0.319 0.275

# Baseball player scatterplot
ggplot(mlbBat10, aes(x=OBP, y=SLG)) +
  geom_point()










Using the bdims dataset, create a scatterplot illustrating how a person's weight varies as a function of their height. Use color to separate by sex, which you'll need to coerce to a factor with factor().
> str(bdims)
'data.frame':	507 obs. of  25 variables:
 $ bia.di: num  42.9 43.7 40.1 44.3 42.5 43.3 43.5 44.4 43.5 42 ...
 $ bii.di: num  26 28.5 28.2 29.9 29.9 27 30 29.8 26.5 28 ...
 $ bit.di: num  31.5 33.5 33.3 34 34 31.5 34 33.2 32.1 34 ...
 $ che.de: num  17.7 16.9 20.9 18.4 21.5 19.6 21.9 21.8 15.5 22.5 ...
 $ che.di: num  28 30.8 31.7 28.2 29.4 31.3 31.7 28.8 27.5 28 ...
 $ elb.di: num  13.1 14 13.9 13.9 15.2 14 16.1 15.1 14.1 15.6 ...
 $ wri.di: num  10.4 11.8 10.9 11.2 11.6 11.5 12.5 11.9 11.2 12 ...
 $ kne.di: num  18.8 20.6 19.7 20.9 20.7 18.8 20.8 21 18.9 21.1 ...
 $ ank.di: num  14.1 15.1 14.1 15 14.9 13.9 15.6 14.6 13.2 15 ...
 $ sho.gi: num  106 110 115 104 108 ...
 $ che.gi: num  89.5 97 97.5 97 97.5 ...
 $ wai.gi: num  71.5 79 83.2 77.8 80 82.5 82 76.8 68.5 77.5 ...
 $ nav.gi: num  74.5 86.5 82.9 78.8 82.5 80.1 84 80.5 69 81.5 ...
 $ hip.gi: num  93.5 94.8 95 94 98.5 95.3 101 98 89.5 99.8 ...
 $ thi.gi: num  51.5 51.5 57.3 53 55.4 57.5 60.9 56 50 59.8 ...
 $ bic.gi: num  32.5 34.4 33.4 31 32 33 42.4 34.1 33 36.5 ...
 $ for.gi: num  26 28 28.8 26.2 28.4 28 32.3 28 26 29.2 ...
 $ kne.gi: num  34.5 36.5 37 37 37.7 36.6 40.1 39.2 35.5 38.3 ...
 $ cal.gi: num  36.5 37.5 37.3 34.8 38.6 36.1 40.3 36.7 35 38.6 ...
 $ ank.gi: num  23.5 24.5 21.9 23 24.4 23.5 23.6 22.5 22 22.2 ...
 $ wri.gi: num  16.5 17 16.9 16.6 18 16.9 18.8 18 16.5 16.9 ...
 $ age   : int  21 23 28 23 22 21 26 27 23 21 ...
 $ wgt   : num  65.6 71.8 80.7 72.6 78.8 74.8 86.4 78.4 62 81.6 ...
 $ hgt   : num  174 175 194 186 187 ...
 $ sex   : int  1 1 1 1 1 1 1 1 1 1 ...

# Body dimensions scatterplot
ggplot(bdims, aes(x=hgt, y=wgt, color=as.factor(sex))) +
  geom_point()








Using the smoking dataset, create a scatterplot illustrating how the amount that a person smokes on weekdays varies as a function of their age.
> str(smoking)
'data.frame':	1691 obs. of  12 variables:
 $ gender              : Factor w/ 2 levels "Female","Male": 2 1 2 1 1 1 2 2 2 1 ...
 $ age                 : int  38 42 40 40 39 37 53 44 40 41 ...
 $ maritalStatus       : Factor w/ 5 levels "Divorced","Married",..: 1 4 2 2 2 2 2 4 4 2 ...
 $ highestQualification: Factor w/ 8 levels "A Levels","Degree",..: 6 6 2 2 4 4 2 2 3 6 ...
 $ nationality         : Factor w/ 8 levels "British","English",..: 1 1 2 2 1 1 1 2 2 2 ...
 $ ethnicity           : Factor w/ 7 levels "Asian","Black",..: 7 7 7 7 7 7 7 7 7 7 ...
 $ grossIncome         : Factor w/ 10 levels "10,400 to 15,600",..: 3 9 5 1 3 2 7 1 3 6 ...
 $ region              : Factor w/ 7 levels "London","Midlands & East Anglia",..: 6 6 6 6 6 6 6 6 6 6 ...
 $ smoke               : Factor w/ 2 levels "No","Yes": 1 2 1 1 1 1 2 1 2 2 ...
 $ amtWeekends         : int  NA 12 NA NA NA NA 6 NA 8 15 ...
 $ amtWeekdays         : int  NA 12 NA NA NA NA 6 NA 8 12 ...
 $ type                : Factor w/ 5 levels "","Both/Mainly Hand-Rolled",..: 1 5 1 1 1 1 5 1 4 5 ...

# Smoking scatterplot
ggplot(smoking, aes(x=age, y=amtWeekdays)) +
  geom_point()











Characterizing scatterplots
This scatterplot shows the relationship between the poverty rates and high school graduation rates of counties in the United States.
Describe the form, direction, and strength of this relationship.

#not Linear, positive, strong
#not Linear, negative, weak
#not Non-linear, negative, strong

#yes Linear, negative, moderately strong











Transformations
The relationship between two variables may not be linear. In these cases we can sometimes see strange and even inscrutable patterns in a scatterplot of the data. Sometimes there really is no meaningful relationship between the two variables. Other times, a careful transformation of one or both of the variables can reveal a clear relationship.
Recall the bizarre pattern that you saw in the scatterplot between brain weight and body weight among mammals in a previous exercise. Can we use transformations to clarify this relationship?
ggplot2 provides several different mechanisms for viewing transformed relationships. The coord_trans() function transforms the coordinates of the plot. Alternatively, the scale_x_log10() and scale_y_log10() functions perform a base-10 log transformation of each axis. Note the differences in the appearance of the axes.
The mammals dataset is available in your workspace.

Use coord_trans() to create a scatterplot showing how a mammal's brain weight varies as a function of its body weight, where both the x and y axes are on a "log10" scale.
# Scatterplot with coord_trans()
ggplot(data = mammals, aes(x=BodyWt, y=BrainWt)) +
  geom_point() + 
  coord_trans(x = "log10", y = "log10")



Use scale_x_log10() and scale_y_log10() to achieve the same effect but with different axis labels and grid lines.
# Scatterplot with scale_x_log10() and scale_y_log10()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
  geom_point() +
  scale_x_log10() + 
  scale_y_log10()


