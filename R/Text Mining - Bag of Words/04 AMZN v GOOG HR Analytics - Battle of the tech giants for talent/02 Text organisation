Text organization
#4 corpora - AMZN pros, AMZN cons, GOOG pros, GOOG cons

Apply qdap_clean() to amzn_pros, assigning to qdap_cleaned_amzn_pros.
Create a vector source (VectorSource()) from qdap_cleaned_amzn_pros, then turn it into a volatile corpus (VCorpus()), assigning to amzn_p_corp.
Create amzn_pros_corp by applying tm_clean() to amzn_p_corp.

# qdap_clean the text
qdap_cleaned_amzn_pros <- qdap_clean(amzn_pros)

# Source and create the corpus
amzn_p_corp <- VCorpus(VectorSource(qdap_cleaned_amzn_pros))

# tm_clean the corpus
amzn_pros_corp <- tm_clean(amzn_p_corp)

> amzn_p_corp
<<VCorpus>>
Metadata:  corpus specific: 0, document level (indexed): 0
Content:  documents: 500
> amzn_pros_corp
<<VCorpus>>
Metadata:  corpus specific: 0, document level (indexed): 0
Content:  documents: 500





Apply qdap_clean() to amzn_cons, assigning to qdap_cleaned_amzn_cons.
Create a vector source from qdap_cleaned_amzn_cons, then turn it into a volatile corpus, assigning to amzn_c_corp.
Create amzn_cons_corp by applying tm_clean() to amzn_c_corp.

# qdap_clean the text
qdap_cleaned_amzn_cons <- qdap_clean(amzn_cons)

# Source and create the corpus
amzn_c_corp <- VCorpus(VectorSource(qdap_cleaned_amzn_cons))

# tm_clean the corpus
amzn_cons_corp <- tm_clean(amzn_c_corp)


Ace Amazon ablution! Now let's clean up the Google reviews.
















Working with Google reviews
Now that the Amazon reviews have been cleaned, the same must be done for the Google reviews. qdap_clean() and tm_clean() are available in your workspace to help you clean goog_pros and goog_cons.

Apply qdap_clean() to goog_pros, assigning to qdap_cleaned_goog_pros.
Create a vector source (VectorSource()) from qdap_cleaned_goog_pros, then turn it into a volatile corpus (VCorpus()), assigning to goog_p_corp.
Create goog_pros_corp by applying tm_clean() to goog_p_corp.

# qdap_clean the text
qdap_cleaned_goog_pros <- qdap_clean(goog_pros)

# Source and create the corpus
goog_p_corp <- VCorpus(VectorSource(qdap_cleaned_goog_pros))

# tm_clean the corpus
goog_pros_corp <- tm_clean(goog_p_corp)




Apply qdap_clean() to goog_cons, assigning to qdap_cleaned_goog_cons.
Create a vector source from qdap_cleaned_goog_cons, then turn it into a volatile corpus, assigning to goog_c_corp.
Create goog_cons_corp by applying tm_clean() to goog_c_corp.


# qdap_clean the text
qdap_cleaned_goog_cons <- qdap_clean(goog_cons)

# Source and create the corpus
goog_c_corp <- VCorpus(VectorSource(qdap_cleaned_goog_cons))

# tm_clean the corpus
goog_cons_corp <- tm_clean(goog_c_corp)


On to the next steps in the text mining workflow.

