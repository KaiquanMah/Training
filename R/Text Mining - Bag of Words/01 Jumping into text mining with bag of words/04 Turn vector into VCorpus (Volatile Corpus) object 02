Make the vector a VCorpus object (2)
Now that we've converted our vector to a Source object, we pass it to another tm function, VCorpus(), to create our volatile corpus. Pretty straightforward, right?
The VCorpus object is a nested list, or list of lists. At each index of the VCorpus object, there is a PlainTextDocument object, which is a list containing actual text data (content), and some corresponding metadata (meta). It can help to visualize a VCorpus object to conceptualize the whole thing.
#http://s3.amazonaws.com/assets.datacamp.com/production/course_935/datasets/vcorpus_visual.png

To review a single document object (the 10th) you subset with double square brackets.
coffee_corpus[[10]]

To review the actual text you index the list twice. To access the document's metadata, like timestamp, change [1] to [2]. Another way to review the plain text is with the content() function which doesn't need the second set of brackets.
coffee_corpus[[10]][1]
content(coffee_corpus[[10]])


Call the VCorpus() function on the coffee_source object to create coffee_corpus.
Verify coffee_corpus is a VCorpus object by printing it to the console.
Print the 15th element of coffee_corpus to the console to verify that it's a PlainTextDocument that contains the content and metadata of the 15th tweet. Use double bracket subsetting.
Print the content of the 15th tweet in coffee_corpus. Use double brackets to select the proper tweet, followed by single brackets to extract the content of that tweet.
Print the content() of the 10th tweet within coffee_corpus












> head(coffee_source)
[1] "@ayyytylerb that is so true drink lots of coffee"                                                                                            
[2] "RT @bryzy_brib: Senior March tmw morning at 7:25 A.M. in the SENIOR lot. Get up early, make yo coffee/breakfast, cus this will only happen ?"
[3] "If you believe in #gunsense tomorrow would be a very good day to have your coffee any place BUT @Starbucks Guns+Coffee=#nosense @MomsDemand" 
[4] "My cute coffee mug. http://t.co/2udvMU6XIG"                                                                                                  
[5] "RT @slaredo21: I wish we had Starbucks here... Cause coffee dates in the morning sound perff!"                                               
[6] "Does anyone ever get a cup of coffee before a cocktail??"

> head(coffee_corpus)
<<VCorpus>>
Metadata:  corpus specific: 0, document level (indexed): 0
Content:  documents: 6
> coffee_corpus
<<VCorpus>>
Metadata:  corpus specific: 0, document level (indexed): 0
Content:  documents: 1000




## coffee_source is already in your workspace

# Make a volatile corpus from coffee_corpus
coffee_corpus <- VCorpus(coffee_source)

# Print out coffee_corpus
coffee_corpus

# Print the 15th tweet in coffee_corpus
coffee_corpus[[15]]

# Print the contents of the 15th tweet in coffee_corpus
coffee_corpus[[15]][1]

# Now use content to review plain text of the 10th tweet
content(coffee_corpus[[10]])








#corpus[[index]] gives you # of chars in subindex[1] + # of metadata elements in subindex[2]
> coffee_corpus[[15]]
<<PlainTextDocument>>
Metadata:  7
Content:  chars: 111

> coffee_corpus[[15]][1]
$content
[1] "@HeatherWhaley I was about 2 joke it takes 2 hands to hold hot coffee...then I read headline! #Don'tDrinkNShoot"
 
> coffee_corpus[[15]][2]
$meta
  author       : character(0)
  datetimestamp: 2019-12-19 12:02:34
  description  : character(0)
  heading      : character(0)
  id           : 15
  language     : en
  origin       : character(0)
  

> content(coffee_corpus[[10]])
[1] "RT @Dorkv76: I can't care before coffee."


