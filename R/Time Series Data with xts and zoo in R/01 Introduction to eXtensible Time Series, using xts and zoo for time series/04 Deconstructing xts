Now that you can create xts objects, your next task is to examine an xts object from the inside.

At the core of both xts and zoo is a simple R matrix with a few additional attributes. The most important of these attributes is the index. The index holds all the information we need for xts to treat our data as a time series.

When working with time series, it will sometimes be necessary to separate your time series into its core data and index attributes for additional analysis and manipulation. The core data is the matrix portion of xts. You can separate this from the xts object using coredata(). The index portion of the xts object is available using the index() function. Note that both of these functions are methods from the zoo class, which xts extends.

In this exercise you will use these built-in functions to extract both the internal matrix data and internal index from your sample xts object. You will use the hayek time series you created in the last exercise to practice these new functions.
https://www.rdocumentation.org/packages/xts/topics/coredata.xts
https://www.rdocumentation.org/packages/zoo/topics/index



Extract the core data of hayek using coredata() and call this hayek_core.
View the class of hayek_core using the class() function.
Extract the date index of hayek using index() and call this hayek_index.
View the class of hayek_index.

>coredata(hayek)
           [,1]
[1,] -1.2070657
[2,]  0.2774292
[3,]  1.0844412
[4,] -2.3456977
[5,]  0.4291247


# Extract the core data of hayek
hayek_core <- coredata(hayek)


# View the class of hayek_core
class(hayek_core)
[1] "matrix"


# Extract the index of hayek
hayek_index <- index(hayek)


# View the class of hayek_index
class(hayek_index)
[1] "Date"




>coredata(hayek)
           [,1]
[1,] -1.2070657
[2,]  0.2774292
[3,]  1.0844412
[4,] -2.3456977
[5,]  0.4291247

>index(hayek)
[1] "2016-01-01" "2016-01-02" "2016-01-03" "2016-01-04" "2016-01-05"

