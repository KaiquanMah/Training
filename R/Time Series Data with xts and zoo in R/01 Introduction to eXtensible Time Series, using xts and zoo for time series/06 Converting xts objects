It is often necessary to convert between classes when working with time series data in R. Conversion can be required for many reasons, but typically you'll be looking to use a function that may not be time series aware or you may want to use a particular aspect of xts with something that doesn't necessarily need to be a full time series.

Luckily, it is quite easy to convert back and forth using the standard as.* style functionality provided in R (for example, as.POSIXct() or as.matrix()).

xts provides methods to convert all of the major objects you are likely to come across. Suitable native R types like matrix, data.frame, and ts are supported, as well as contributed ones such as timeSeries, fts and of course zoo. as.xts() is the workhorse function to do the conversions to xts, and similar functions will provide the reverse behavior.
https://www.rdocumentation.org/packages/xts/topics/as.xts
To get a feel for moving data between classes, let's try a few examples using the Australian population ts object from R named austres.



>austres
        Qtr1    Qtr2    Qtr3    Qtr4
1971         13067.3 13130.5 13198.4
1972 13254.2 13303.7 13353.9 13409.3
1973 13459.2 13504.5 13552.6 13614.3
1974 13669.5 13722.6 13772.1 13832.0
1975 13862.6 13893.0 13926.8 13968.9
1976 14004.7 14033.1 14066.0 14110.1
1977 14155.6 14192.2 14231.7 14281.5
1978 14330.3 14359.3 14396.6 14430.8
1979 14478.4 14515.7 14554.9 14602.5
1980 14646.4 14695.4 14746.6 14807.4
1981 14874.4 14923.3 14988.7 15054.1
1982 15121.7 15184.2 15239.3 15288.9
1983 15346.2 15393.5 15439.0 15483.5
1984 15531.5 15579.4 15628.5 15677.3
1985 15736.7 15788.3 15839.7 15900.6
1986 15961.5 16018.3 16076.9 16139.0
1987 16203.0 16263.3 16327.9 16398.9
1988 16478.3 16538.2 16621.6 16697.0
1989 16777.2 16833.1 16891.6 16956.8
1990 17026.3 17085.4 17106.9 17169.4
1991 17239.4 17292.0 17354.2 17414.2
1992 17447.3 17482.6 17526.0 17568.7
1993 17627.1 17661.5   

>str(austres)
 Time-Series [1:89] from 1971 to 1993: 13067 13130 13198 13254 13304 ...
 
>class(austres)
[1] "ts"


# Convert austres to an xts object called au
au <- as.xts(austres)

>head(au)
           [,1]
1971 Q2 13067.3
1971 Q3 13130.5
1971 Q4 13198.4
1972 Q1 13254.2
1972 Q2 13303.7
1972 Q3 13353.9







# Then convert your xts object (au) into a matrix am
am <- as.matrix(au)

# Inspect the head of am
head(am)
             au
1971 Q2 13067.3
1971 Q3 13130.5
1971 Q4 13198.4
1972 Q1 13254.2
1972 Q2 13303.7
1972 Q3 13353.9






# Convert the original austres into a matrix am2
am2 <- as.matrix(austres)

# Inspect the head of am2
head(am2)
        [,1]
[1,] 13067.3
[2,] 13130.5
[3,] 13198.4
[4,] 13254.2
[5,] 13303.7
[6,] 13353.9

Converting objects to and from the xts class is critical for manipulating time series data and couldn't be easier than with the as.xts() command.









>str(au)
An 'xts' object on 1971 Q2/1993 Q2 containing:
  Data: num [1:89, 1] 13067 13130 13198 13254 13304 ...
  Indexed by objects of class: [yearqtr] TZ: UTC
  xts Attributes:  
 NULL
 
>class(au)
[1] "xts" "zoo"






>str(am)
 num [1:89, 1] 13067 13130 13198 13254 13304 ...
 - attr(*, "dimnames")=List of 2
  ..$ : chr [1:89] "1971 Q2" "1971 Q3" "1971 Q4" "1972 Q1" ...
  ..$ : chr "au"
  
>class(am)
[1] "matrix"






>str(am2)
 num [1:89, 1] 13067 13130 13198 13254 13304 ...
 
>class(am2)
[1] "matrix"




