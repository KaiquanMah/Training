One of the most powerful aspects of working with time series in xts is the ability to quickly and efficiently specify dates and time ranges for subsetting.

Date ranges can be extracted from xts objects by simply specifying the period(s) you want using special character strings in your subset.

A["20090825"]       ## Aug 25, 2009
A["201203/201212"]  ## Mar to Dec 2012
A["/201601"]        ## Up to and including January 2016
For this exercise you will create a simple but very common query. Extract a range of dates using the ISO-8601 feature of xts. After successfully extracting a full year, you will then create a subset of your new object with specific start and end dates using this same notation.

Let's find some time!



Using xts-style time subsetting, select only the year 2016 from the x time series, and call this x_2016.
Using an explicit start and end date string, get all data from January 1, 2016 through March 22, 2016. Call this jan_march.
To ensure that you subset all 82 rows, use the length function.


# Select all of 2016 from x
x_2016 <- x["2016"]
head(x_2016)
                    a
2016-01-01  0.4425186
2016-01-02  0.5076617
2016-01-03 -1.3145032
2016-01-04 -1.5302120
2016-01-05  0.5912992
2016-01-06 -1.7004892


# Select January 1, 2016 to March 22, 2016
jan_march <- x["2016/2016-03-22"]
head(jan_march)
                    a
2016-01-01  0.4425186
2016-01-02  0.5076617
2016-01-03 -1.3145032
2016-01-04 -1.5302120
2016-01-05  0.5912992
2016-01-06 -1.7004892


# Verify that jan_march contains 82 rows
82 == length(jan_march)
[1] TRUE









>class(x)
[1] "xts" "zoo"


>str(x)
An 'xts' object on 2015-06-01/2016-04-01 containing:
  Data: num [1:306, 1] 0.26 -1.18 1.07 -1.39 0.36 ...
 - attr(*, "dimnames")=List of 2
  ..$ : NULL
  ..$ : chr "a"
  Indexed by objects of class: [Date] TZ: UTC
  xts Attributes:  
 NULL
