Now that you have merged data by column, you will be happy to know it's just as easy to add new rows to your data.

xts provides its own S3 method to the base rbind() generic function. The xts rbind function is much simpler than merge(). The only argument that matters is ..., which takes an arbitrary number of objects to bind. What is different is that rbind requires a time series, since we need to have timestamps for R to know where to insert new data.

For this exercise you will update your temps data with three new observations. One will be before the series started and two will be after. Pay attention to your function call, does order matter?

In your workspace, the objects temps, temps_june30, temps_july17 and temps_july18 are already loaded.



Bind the row from June 30th (temps_june30) to temps, and call this temps2.
Bind the rows from July 17th and 18th to temps2. Call this temps3.


>temps
           Temp.Max Temp.Mean Temp.Min
2016-07-01       74        69       60
2016-07-02       78        66       56
2016-07-03       79        68       59
2016-07-04       80        76       69
2016-07-05       90        79       68
2016-07-06       89        79       70
2016-07-07       87        78       72
2016-07-08       89        80       72
2016-07-09       81        73       67
2016-07-10       83        72       64
2016-07-11       93        81       69
2016-07-12       89        82       77
2016-07-13       86        78       68
2016-07-14       89        80       68
2016-07-15       75        72       60
2016-07-16       79        69       60

>temps_june30
           temp_max temp_mean temp_min
2016-06-30       75        73       63


>temps_july17
           temp_max temp_mean temp_min
2016-07-17       79        70       68


>temps_july18
           temp_max temp_mean temp_min
2016-07-18       75        70       65


# Row bind temps_june30 to temps, assign this to temps2
temps2 <- rbind(temps, temps_june30)
# Row bind temps_july17 and temps_july18 to temps2, call this temps3
temps3 <- rbind(temps2, temps_july17, temps_july18)



Because xts objects are ordered by their time index, the order of arguments in xts's rbind() command is unimportant.





>temps3
           Temp.Max Temp.Mean Temp.Min
2016-06-30       75        73       63
2016-07-01       74        69       60
2016-07-02       78        66       56
2016-07-03       79        68       59
2016-07-04       80        76       69
2016-07-05       90        79       68
2016-07-06       89        79       70
2016-07-07       87        78       72
2016-07-08       89        80       72
2016-07-09       81        73       67
2016-07-10       83        72       64
2016-07-11       93        81       69
2016-07-12       89        82       77
2016-07-13       86        78       68
2016-07-14       89        80       68
2016-07-15       75        72       60
2016-07-16       79        69       60
2016-07-17       79        70       68
2016-07-18       75        70       65

