Is a BIBD even possible?
We saw in the video that it's possible a BIBD doesn't exist at all. It's useful to calculate the lambda beforehand, and if the result isn't an integer, there isn't a possible BIBD.
Don't bust out the pen and paper yet: the lambda() function has been defined for you. It takes as input t = number of treatments, k = number of treatments per block, and r = number of repetitions. It then calculates lambda according to this formula: r(k - 1) / (t - 1).
Try the different combinations of t, k, and r using lambda() in your console, and choose the answer which does NOT have a BIBD.

t = 2, k = 2, r = 2
t = 2, k = 3, r = 4
t = 3, k = 4, r = 11
t = 12, k = 2, r = 22

> lambda(t=2,k=2,r=2)
[1] 2
> lambda(t=2,k=3,r=4)
[1] 8
> lambda(t=3,k=4,r=11)
[1] 16.5
> lambda(t=12,k=2,r=22)
[1] 2

Good job! When designing experiments, you could build your own version of the custom function lambda, or use agricolae to figure it out visually, as we'll see in the next exercise.










# learn about the BIBD calculation
https://newonlinecourses.science.psu.edu/stat503/node/25/
# site which clarified about the 'r' component of the BIBD calculation
http://mathonline.wikidot.com/the-replication-number-of-a-balanced-incomplete-block-design
Definition: If (X,A) is a (v,k,λ)-BIBD then the Replication Number of this BIBD is r=λ(v−1)/k−1 and denotes the number of blocks containing any arbitrary point x ∈ X.





Drawing BIBDs with agricolae
We can also use agricolae to draw BIBDs. design.bib() takes, at minimum, the treatments (treats), an integer k corresponding to the number of levels of the blocks, and a seed as inputs.
The main thing you should notice about a BIBD is that not every treatment will be used in each block (column) of the output.
From the video and the last exercise, however, you know that sometimes a BIBD isn't valid and that you have to do a little math to be sure your BIBD design is possible. design.bib() will return an error message letting you know if a design is not valid.
Let's draw a few BIBDs with agricolae so we can see the different warning messages and errors the package provides.

Create my_design_bibd_1 using A, B, and C for the treatments, 4 blocks, and a seed of 42.
# Create my_design_bibd_1
my_design_bibd_1 <- design.bib(LETTERS[1:3], k = 4, seed = 42)
Error: The number of trials must be at least as large as the minimum blocksize.




Create my_design_bibd_2 using LETTERS[1:8] for treatments, 3 blocks, and a seed of 42.
# Create my_design_bibd_2
my_design_bibd_2 <- design.bib(LETTERS[1:8], k = 3, seed = 42)
Error: invalid 'times' argument



Create my_design_bibd_3 using A, B, C, and D as treatments, 4 blocks, and the same seed. Examine the sketch of the object.
# Create my_design_bibd_3
my_design_bibd_3 <- design.bib(LETTERS[1:4], k = 4, seed = 42)
Parameters BIB
==============
Lambda     : 2
treatmeans : 4
Block size : 4
Blocks     : 2
Replication: 2 

Efficiency factor 1 

<<< Book >>>




> my_design_bibd_3
$parameters
$parameters$design
[1] "bib"

$parameters$trt
[1] "A" "B" "C" "D"

$parameters$k
[1] 4

$parameters$serie
[1] 2

$parameters$seed
[1] 42

$parameters$kinds
[1] "Super-Duper"


$statistics
       lambda treatmeans blockSize blocks r Efficiency
values      2          4         4      2 2          1

$sketch
     [,1] [,2] [,3] [,4]
[1,] "C"  "B"  "D"  "A" 
[2,] "D"  "C"  "B"  "A" 

$book
  plots block LETTERS[1:4]
1   101     1            C
2   102     1            B
3   103     1            D
4   104     1            A
5   201     2            D
6   202     2            C
7   203     2            B
8   204     2            A











my_design_bibd_3$sketch
     [,1] [,2] [,3] [,4]
[1,] "C"  "B"  "D"  "A" 
[2,] "D"  "C"  "B"  "A"

You saw two different function errors which help lead you in the right direction with your design, plus one that works. When the design does work, the sketch parameter shows the design. The blocks are now the columns, however, unlike with RCBDs.

