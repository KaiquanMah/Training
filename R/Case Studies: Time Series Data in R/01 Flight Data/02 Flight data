Now that you're back in the time series mindset, it's time to get to work! Your task is to understand the travel patterns of tourists visiting Boston. As a first step, you've been assigned to explore patterns in flights arriving at Boston's Logan International Airport (BOS). In this exercise, you'll view the structure and qualities of some data in preparation for time series manipulation.

Lucky for you, the U.S. Bureau of Transportation Statistics provides open source data on flight arrival times. The flights data file has been preloaded in your workspace.

This course touches on a lot of concepts you may have forgotten, so if you ever need a quick refresher, download the xts in R Cheat Sheet and keep it handy!
http://www.transtats.bts.gov/ot_delay/ot_delaycause1.asp




Explore the structure of flights using str() to understand the information contained in the data file.
View the first 5 rows of flights using head() to get a feel for what the data look like.
The first step in preparing an object for conversion to xts is to ensure that the time/date column is in a proper time-based format. Check the class of the relevant column in flights using class().


#View the structure of the flights data
class(flights)
[1] "data.frame"

str(flights)
'data.frame':	72 obs. of  5 variables:
 $ total_flights : num  8912 8418 9637 9363 9360 ...
 $ delay_flights : num  1989 1918 2720 1312 1569 ...
 $ cancel_flights: num  279 785 242 58 102 157 222 138 144 131 ...
 $ divert_flights: num  9 23 32 7 8 5 10 20 6 9 ...
 $ date          : chr  "2010-01-01" "2010-02-01" "2010-03-01" "2010-04-01" ...





#Examine the first five rows of the flights data
head(flights, n = 5)
  total_flights delay_flights cancel_flights divert_flights       date
1          8912          1989            279              9 2010-01-01    <= monthly flight count
2          8418          1918            785             23 2010-02-01
3          9637          2720            242             32 2010-03-01
4          9363          1312             58              7 2010-04-01
5          9360          1569            102              8 2010-05-01



#Identify class of the column containing date information
class(flights$date)
[1] "character"


It's always helpful to use these commands to get a feel for your data before you begin analysis. As you can see, the flights object contains four columns of flight data and one column of dates. The date column is currently a character string. You'll need to convert this into a time-based object before moving forward with time series analysis.

