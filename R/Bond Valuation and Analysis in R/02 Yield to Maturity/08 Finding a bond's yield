Suppose someone is offering $95.79 to purchase a bond you own with a $100 par value, 5% coupon rate, and 5 years to maturity. In this situation, you would like to know what the yield is of that bond, so you can compare the yield to the yield of other comparable securities to know whether the price being offered is too high or too low.

One way to find the yield is by trial-and-error. You first start with an initial guess, say 5% and find the price given a 5% yield. If the resulting price is too high, you know due to the inverse relationship between price and yield that your next guess has to be a higher yield.

Suppose your next guess is a yield of 7%. That will result in a price that is too low, which means that the yield is higher than 5% but lower than 7%. So, you now pick a yield of 6%, which will give you the correct answer.

In this exercise, you will calculate the price using a 5%, 6%, and 7% yield using your bondprc() function, which is preloaded in the workspace. Remember that the goal is to reverse engineer bond characteristics valued at $95.79.


Use bondprc() to calculate the value of the bond using a 5% yield. Remember that the bond has a $100 par value, a 5% coupon rate, and 5 years to maturity.
Use another call to bondprc() to calculate the value of the bond using a 7% yield.
Use a final call to bondprc() to calculate the value of the bond using a 6% yield.


# Value bond using 5% yield
bondprc(p = 100, 
        r = 0.05, 
        ttm = 5, 
        y = 0.05)
[1] 100


# Value bond using 7% yield
bondprc(p = 100, 
        r = 0.05, 
        ttm = 5, 
        y = 0.07)
[1] 91.79961


# Value bond using 6% yield
bondprc(p = 100, 
        r = 0.05, 
        ttm = 5, 
        y = 0.06)
[1] 95.78764


By guessing upper and lower bounds, you were able to triangulate the correct yield of 6%. In the next exercise, you'll make this process a bit easier by coding a new function to calculate yield for you!


