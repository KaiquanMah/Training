The first function in the apply family that you will learn is lapply(), which is short for "list apply." When you have a list, and you want to apply the same function to each element of the list, lapply() is a potential solution that always returns another list. How might this work?

Let's look at a simple example. Suppose you want to find the length of each vector in the following list.

my_list
$a
[1] 2 4 5

$b
[1] 10 14  5  3  4  5  6



# Using lapply
# Note that you don't need parenthesis when calling length
lapply(my_list, FUN = length)
$a
[1] 3

$b
[1] 7
As noted in the video, if at first you thought about looping over each element in the list, and using length() at each iteration, you aren't wrong. lapply() is the vectorized version of this kind of loop, and is often preferred (and simpler) in the R world.





In your workspace is a list of daily stock returns as percentages called stock_return and the percent_to_decimal() function.

Print stock_return.
Fill in the lapply() function to apply percent_to_decimal() to each element in stock_return.



# Print stock_return
stock_return
$apple
 [1]  0.37446342 -0.71883530  0.76986527  0.98226467  0.98171665  1.63217981
 [7] -0.57042563  1.66813769  0.00000000  0.54692248  0.12951131  0.57773562
[13]  0.26577503  0.09405729 -0.65778233  0.19778141  0.63508411 -0.42640287
[19] -0.02569373 -0.77957680

$ibm
 [1]  0.1251408 -0.1124859  0.3190691  2.7689429  0.3458948  0.7014998
 [7] -0.6125390  1.6858006  0.1307267 -0.2907839 -0.7677657 -0.0299886
[13]  0.5519558 -0.1610979 -0.1613578 -0.2095056  0.2579329 -0.5683858
[19]  0.2467056 -0.3661465

$micr
 [1]  0.08445946  1.63713080 -0.44835603  2.36864053 -0.58660583  1.57351254
 [7]  0.32273681  1.30287920 -0.47634170 -0.15954052 -0.44742729  2.11878010
[13] -0.12574662  0.00000000  0.01573812 -0.48780488  0.06325111 -0.45828066
[19] -0.14287982 -1.20826709








# lapply to change percents to decimal
lapply(stock_return, FUN = percent_to_decimal)
$apple
 [1]  0.00 -0.01  0.01  0.01  0.01  0.02 -0.01  0.02  0.00  0.01  0.00  0.01
[13]  0.00  0.00 -0.01  0.00  0.01  0.00  0.00 -0.01

$ibm
 [1]  0.00  0.00  0.00  0.03  0.00  0.01 -0.01  0.02  0.00  0.00 -0.01  0.00
[13]  0.01  0.00  0.00  0.00  0.00 -0.01  0.00  0.00

$micr
 [1]  0.00  0.02  0.00  0.02 -0.01  0.02  0.00  0.01  0.00  0.00  0.00  0.02
[13]  0.00  0.00  0.00  0.00  0.00  0.00  0.00 -0.01




