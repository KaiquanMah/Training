As a last exercise, you'll learn about a concept called anonymous functions. So far, when calling an apply function like vapply(), you have been passing in named functions to FUN. Doesn't it seem like a waste to have to create a function just for that specific vapply() call? Instead, you can use anonymous functions!

Named function:

percent_to_decimal <- function(percent) {
    percent / 100
}
Anonymous function:

function(percent) { percent / 100 }
As you can see, anonymous functions are basically functions that aren't assigned a name. To use them in vapply() you might do:

vapply(stock_return, FUN = function(percent) { percent / 100 }, 
       FUN.VALUE = numeric(2))
            apple          ibm
[1,]  0.003744634  0.001251408
[2,] -0.007188353 -0.001124859







stock_return is in your workspace.
Use vapply() to apply an anonymous function that returns a vector of the max() and min() (in that order) of each column of stock_return.







# my version
# Max and min
vapply(stock_return, 
       FUN = function(x) {c(max = max(x), min = min(x))}, 
       FUN.VALUE = numeric(2))
       
       
           apple          ibm        micr
max  0.016681377  0.027689429  0.02368641
min -0.007795768 -0.007677657 -0.01208267



#answer accepted
# Max and min
vapply(stock_return, 
       FUN = function(x) {c(max(x), min(x))}, 
       FUN.VALUE = numeric(2))
       
       
       
            apple          ibm        micr
[1,]  0.016681377  0.027689429  0.02368641
[2,] -0.007795768 -0.007677657 -0.01208267
