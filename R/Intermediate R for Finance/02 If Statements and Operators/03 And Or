You might want to check multiple relational conditions at once. What if you wanted to know if Apple stock was above 120, but below 121? Simple relational operators are not enough! For multiple conditions, you need the And operator &, and the Or operator |.

& (And): An intersection. a & b is true only if both a and b are true.
| (Or): A union. a | b is true if either a or b is true.
apple <- c(120.00, 120.08, 119.97, 121.88)

# Both conditions must hold
(apple > 120) & (apple < 121)
[1] FALSE  TRUE FALSE FALSE

# Only one condition has to hold
(apple <= 120) | (apple > 121)
[1]  TRUE FALSE  TRUE  TRUE




stocks is in your workspace.

When is ibm between 171 and 176? Add the logical vector to stocks as ibm_buy_range.
Check if panera drops below 213.20 or rises above 216.50, then add it to stocks as the column panera_spike.
Suppose you are interested in dates after 2017-01-21 but before 2017-01-25, exclusive. Use as.Date() and & for this. Add the result to stocks as good_dates.
Print stocks.



# IBM buy range	
stocks$ibm_buy_range <- stocks$ibm >= 171 & stocks$ibm <= 176

# Panera spikes	
stocks$panera_spike <- stocks$panera > 216.50 | stocks$panera < 213.20

# Date range	
stocks$good_dates <- stocks$date > as.Date("2017-01-21") & stocks$date < as.Date("2017-01-25")

# Print stocks	
stocks
        date    ibm panera ibm_buy_range panera_spike good_dates
1 2017-01-20 170.55 216.65         FALSE         TRUE      FALSE
2 2017-01-23 171.03 216.06          TRUE        FALSE       TRUE
3 2017-01-24 175.90 213.55          TRUE        FALSE       TRUE
4 2017-01-25 178.29 212.22         FALSE         TRUE      FALSE


