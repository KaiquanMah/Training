One last operator to introduce is ! or, Not. You have already seen a similar operator, !=, so you might be able to guess what it does. Add ! in front of a logical expression, and it will flip that expression from TRUE to FALSE (and vice versa).

!TRUE
[1] FALSE

apple <- c(120.00, 120.08, 119.97, 121.88)

!(apple < 121)
[1] FALSE FALSE FALSE  TRUE





stocks is in your workspace.

Use ! and a relational operator to know when ibm is not above 176.
A new vector, missing, has been created, which contains missing data.
The function is.na() checks for missing data. Use is.na() on missing.
Suppose you are more interested in where you are not missing data. ! can show you this. Use ! in front of is.na() to show positions where you do have data.




>stocks
        date    ibm panera
1 2017-01-20 170.55 216.65
2 2017-01-23 171.03 216.06
3 2017-01-24 175.90 213.55
4 2017-01-25 178.29 212.22

# IBM range
!(stocks$ibm >= 176)
[1]  TRUE  TRUE  TRUE FALSE




# Missing data
missing <- c(24.5, 25.7, NA, 28, 28.6, NA)

# Is missing?
is.na(missing)
[1] FALSE FALSE  TRUE FALSE FALSE  TRUE

# Not missing?
!is.na(missing)
[1]  TRUE  TRUE FALSE  TRUE  TRUE FALSE


