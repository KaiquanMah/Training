Nesting a data frame
Right now, the by_year_country data frame has one row per country-vote pair. So that you can model each country individually, you're going to "nest" all columns besides country, which will result in a data frame with one row per country. The data for each individual country will then be stored in a list column called data.



Load the tidyr package.
Use the nest() function to nest all the columns in by_year_country except country.

# Load the tidyr package
library(tidyr)

# Nest all columns besides country
by_year_country %>%
  nest(-country)
  
# A tibble: 200 x 2
   country                                   data
   <chr>                           <list<df[,3]>>
 1 Afghanistan                           [34 x 3]
 2 Argentina                             [34 x 3]
 3 Australia                             [34 x 3]
 4 Belarus                               [34 x 3]
 5 Belgium                               [34 x 3]
 6 Bolivia, Plurinational State of       [34 x 3]
 7 Brazil                                [34 x 3]
 8 Canada                                [34 x 3]
 9 Chile                                 [34 x 3]
10 Colombia                              [34 x 3]
# ... with 190 more rows



> by_year_country %>%
    filter(country == "United States") %>%
    print(data)
# A tibble: 34 x 4
    year country       total percent_yes
   <dbl> <chr>         <int>       <dbl>
 1  1947 United States    38       0.711
 2  1949 United States    64       0.281
 3  1951 United States    25       0.4  
 4  1953 United States    26       0.5  
 5  1955 United States    37       0.622
 6  1957 United States    34       0.647
 7  1959 United States    54       0.426
 8  1961 United States    75       0.507
 9  1963 United States    32       0.5  
10  1965 United States    41       0.366
# ... with 24 more rows































List columns
This "nested" data has an interesting structure. The second column, data, is a list, a type of R object that hasn't yet come up in this course that allows complicated objects to be stored within each row. This is because each item of the data column is itself a data frame.

# A tibble: 200 × 2
                           country              data
                             <chr>            <list>
1                      Afghanistan <tibble [34 × 3]>
2                        Argentina <tibble [34 × 3]>
3                        Australia <tibble [34 × 3]>
4                          Belarus <tibble [34 × 3]>
5                          Belgium <tibble [34 × 3]>
6  Bolivia, Plurinational State of <tibble [34 × 3]>
7                           Brazil <tibble [34 × 3]>
8                           Canada <tibble [34 × 3]>
9                            Chile <tibble [34 × 3]>
10                        Colombia <tibble [34 × 3]>

You can use nested$data to access this list column and double brackets to access a particular element. For example, nested$data[[1]] would give you the data frame with Afghanistan's voting history (the percent_yes per year), since Afghanistan is the first row of the table.
Print the data frame from the data column that contains the data for Brazil.

> nested$data
<list_of<
  tbl_df<
    year       : double
    total      : integer
    percent_yes: double
  >
>[200]>
[[1]]
# A tibble: 34 x 3
    year total percent_yes
   <dbl> <int>       <dbl>
 1  1947    34       0.382
 2  1949    51       0.608
 3  1951    25       0.76 
 4  1953    26       0.769
 5  1955    37       0.730
 6  1957    34       0.529
 7  1959    54       0.611
 8  1961    76       0.605
 9  1963    32       0.781
10  1965    40       0.85 
# ... with 24 more rows

[[2]]
# A tibble: 34 x 3
    year total percent_yes
   <dbl> <int>       <dbl>
 1  1947    38       0.579
 2  1949    62       0.371
 3  1951    24       0.458
 4  1953    26       0.615
 5  1955    37       0.676
 6  1957    34       0.559
 7  1959    54       0.611
 8  1961    76       0.474
 9  1963    32       0.812
10  1965    41       0.634
# ... with 24 more rows

[[3]]
# A tibble: 34 x 3
...





# All countries are nested besides country
nested <- by_year_country %>%
  nest(-country)

# Print the nested data for Brazil
nested$data[[7]]
# A tibble: 34 x 3
    year total percent_yes
   <dbl> <int>       <dbl>
 1  1947    38       0.658
 2  1949    64       0.469
 3  1951    25       0.64 
 4  1953    26       0.731
 5  1955    37       0.730
 6  1957    34       0.735
 7  1959    54       0.537
 8  1961    76       0.553
 9  1963    32       0.781
10  1965    41       0.610
# ... with 24 more rows

