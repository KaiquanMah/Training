Implementing an indicator - I
At this point, it's time to start getting into the mechanics of implementing an indicator within the scope of the quantstrat library. In this exercise you will learn how to add an indicator to your strategy. For this exercise you will use the strategy you created in earlier exercises, strategy.st. For your first indicator, you will add a 200-day simple moving average.

To add an indicator to your strategy, you will use the add.indicator(). Set strategy equal to the name of your strategy, name to the name of a function in quotes, and arguments to the arguments of the named function in the form of a list. For instance, if your function name was SMA, the arguments argument will contain the arguments to the SMA function:
add.indicator(strategy = strategy.st, 
              name = "SMA", 
              arguments = list(x = quote(Cl(mktdata)), n = 500), 
              label = "SMA500")

When referencing dynamic market data in your add.indicator() call, include mktdata inside the quote() function because it is created inside quantstrat and will change depending on whichever instrument the package is using at the time. quote() ensures that the data can dynamically change over the course of running your strategy.
In this exercise, you will add a 200-day SMA to your existing strategy strategy.st. The quantstrat and quantmod packages are also loaded for you.

Use add.indicator() on your existing strategy strategy.st. Follow the example code closely.
Provide the SMA function as the name argument.
Specify the desired arguments of SMA, using the closing price of mktdata and a lookback period n of 200 days.
Label your indicator "SMA200".

# Add a 200-day SMA indicator to strategy.st
add.indicator(strategy = strategy.st, 
              
              # Add the SMA function
              name = "SMA", 
              
              # Create a lookback period
              arguments = list(x = quote(Cl(mktdata)), n = 200), 
              
              # Label your indicator SMA200
              label = "SMA200")












Implementing an indicator - II
Great job implementing your first indicator! Now, you'll make your strategy even more robust by adding a 50-day SMA. A fast moving average with a slower moving average is a simple and standard way to predict when prices in an asset are expected to rise in the future. While a single indicator can provide a lot of information, a truly robust trading system requires multiple indicators to operate effectively.
In this exercise, you'll also add this 50-day SMA to strategy.st. The quantstrat and quantmod packages are also loaded for you.

Use add.indicator() on your existing strategy strategy.st. Follow the example code in the previous exercise.
Provide the SMA function as the name argument.
Specify the desired arguments of SMA, using the closing price of mktdata and a lookback period n of 50 days. Don't forget to use the quote function!
Label your new indicator "SMA50".

# Add a 50-day SMA indicator to strategy.st
add.indicator(strategy = strategy.st, 
              
              # Add the SMA function
              name = "SMA", 
              
              # Create a lookback period
              arguments = list(x= quote(Cl(mktdata)), n=50), 
              
              # Label your indicator SMA50
              label = "SMA50")










Implementing an indicator - III
In financial markets, the goal is to buy low and sell high. The RSI can predict when a price has sufficiently pulled back, especially with a short period such as 2 or 3.
Here, you'll create a 3-period RSI, or RSI 3, to give you more practice in implementing pre-coded indicators. The quantstrat and quantmod packages are loaded for you.

Use add.indicator() on your existing strategy strategy.st. Follow the example code from previous exercises.
Provide the RSI function as the name argument.
Specify the desired arguments of RSI, using the closing price of mktdata and a lookback period n of 3 days. Don't forget to use the quote() function!
Label your new indicator "RSI_3".

# Add an RSI 3 indicator to strategy.st
add.indicator(strategy = strategy.st, 
              
              # Add the RSI 3 function
              name = "RSI", 
              
              # Create a lookback period
              arguments = list(x=quote(Cl(mktdata)), n=3), 
              
              # Label your indicator RSI_3
              label = "RSI_3")
              
              
