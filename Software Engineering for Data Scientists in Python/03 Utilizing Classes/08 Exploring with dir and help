Exploring with dir and help
A new method has been added to the Document class. The method is a convenience wrapper around the plot_counter() function you wrote in an earlier exercise. In this exercise, you'll use dir() and help() to identify how to utilize the new method.



import the text_analyzer package.
Define my_doc as an instance of Document with the text stored in datacamp_tweets. datacamp_tweets has been pre-loaded in your environment.

# Import needed package
import text_analyzer

# Create instance of document
my_doc = text_analyzer.Document(datacamp_tweets)












Use dir to show all of my_doc's methods and attributes. What is the name of the new plot method from the resulting list.
plot_word_counts
plot_words
plot_text

#YES - plot_counts



In [3]: dir(my_doc)
Out[3]: 
['__class__',
 '__delattr__',
 '__dict__',
 '__dir__',
 '__doc__',
 '__eq__',
 '__format__',
 '__ge__',
 '__getattribute__',
 '__gt__',
 '__hash__',
 '__init__',
 '__le__',
 '__lt__',
 '__module__',
 '__ne__',
 '__new__',
 '__reduce__',
 '__reduce_ex__',
 '__repr__',
 '__setattr__',
 '__sizeof__',
 '__str__',
 '__subclasshook__',
 '__weakref__',
 '_count_words',
 '_tokenize',
 'plot_counts',
 'text',
 'tokens',
 'word_counts']
 
 
 
 
 
 
 
 
 
 
 
 
 
Run help() on the plot method you discovered with dir() to see how to properly use the functionality.
Plot my_doc's word counts using the new plot method.

# Import needed package
import text_analyzer

# Create instance of document
my_doc = text_analyzer.Document(datacamp_tweets)

# Run help on my_doc's plot method
help(my_doc.plot_counts)

# Plot the word_counts of my_doc
my_doc.plot_counts()




<script.py> output:
    Help on method plot_counts in module text_analyzer.document:
    
    plot_counts(attribute='word_counts', n_most_common=5) method of text_analyzer.document.Document instance
        Plot most common elements of a ``collections.Counter`` instance attribute
        
        :param attribute: name of ``Counter`` attribute to use as object to plot
        :param n_most_common: number of elements to plot (using ``Counter.most_common()``)
        :return: None; a plot is shown using matplotlib
        
        >>> doc = Document("duck duck goose is fun when you're the goose")
        >>> doc.plot_counts('word_counts', n_most_common=5)  # same as default call



Nice work! Thanks to dir & help, and your problem solving skills, you were able to take advantage of a method you didn't even know existed!

