Using pytest
doctest is a great tool, but it's not nearly as powerful as pytest. In this exercise, you'll write tests for your SocialMedia class using the pytest framework.

Before you start writing tests, you need to be working in an appropriately named file for pytest to find your test. Which of the following would be the best, valid name for file containing tests for the SocialMedia class?
pytest_social_media.py
social_media_tests.py
test_sm.py

#YES - test_social_media.py






import the SocialMedia class.
Complete the name of the test function so it is run by pytest.
Use the appropriate keyword to test that the hashtag_counts are as expected.

from collections import Counter
from text_analyzer import SocialMedia

# Create an instance of SocialMedia for testing
test_post = 'learning #python & #rstats is awesome! thanks @datacamp!'
sm_post = SocialMedia(test_post)

# Test hashtag counts are created properly
def test_social_media_hashtags():
    expected_hashtag_counts = Counter({'#python': 1, '#rstats': 1})
    assert sm_post.hashtag_counts == expected_hashtag_counts


Fantastic! You can now run the pytest command from the command line and ensure your SocialMedia class is counting hashtags correctly. You'll even soon learn about tools that can run the tests for you and email you if something breaks!



