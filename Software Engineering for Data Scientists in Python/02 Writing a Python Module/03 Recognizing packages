Recognizing packages
The structure of your directory tree is printed below. You'll be working in the file my_script.py that you can see in the tree.

recognizing_packages
├── MY_PACKAGE
│   └── _init_.py
├── package
│   └── __init__.py
├── package_py
│   └── __init__
│       └── __init__.py
├── py_package
│   └── __init__.py
├── pyackage
│   └── init.py
└── my_script.py


Use the information from the context to identify the packages in the directory that follow the minimal structure.
import the two packages that follow the minimal package requirements.
Use help() to print information about each imported package.


# Import local packages
import package
import py_package

# View the help for each package
help(package)
help(py_package)



In [4]: help(package)
Help on package package:

NAME
    package

PACKAGE CONTENTS


FILE
    /tmp/tmpsf5g5yuu/package/__init__.py






In [5]: help(py_package)
Help on package py_package:

NAME
    py_package

PACKAGE CONTENTS


FILE
    /tmp/tmpsf5g5yuu/py_package/__init__.py
    

Great work! A minimal package skeleton requires a directory with an init.py inside of it (even though all of these would import without error when using Python version 3.3 or above).

    
