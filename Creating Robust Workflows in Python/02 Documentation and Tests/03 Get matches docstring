Get matches docstring
We'll add a docstring with doctest examples to the get_matches() function.
This time, we've built the docstring from multiple single-quoted strings.
The three strings that will be combined thanks to the wrapping parentheses.
The superpowers of docstrings stem from their location, not from triple quotes!
The doctest examples will show how to use get_matches() to find a matching character in a list of strings.
Call help() on get_matches() if you want to view the final docstring without the newline ('\n') and tab ('\t') characters and interspersed code comments.
If you get stuck, run the example code in the IPython console!


Fill in the get_matches() function call in the docstring example.
Fill in the output of the get_matches() function call in the docstring example.

def get_matches(word_list: List[str], query:str) -> List[str]:
    ("Find lines containing the query string.\nExamples:\n\t"
     # Complete the docstring example below
     ">>> get_matches(['a', 'list', 'of', 'words'], 's')\n\t"
     # Fill in the expected result of the function call
     "['list', 'words']")
    return [line for line in word_list if query in line]

help(get_matches)


<script.py> output:
    Help on function get_matches in module __main__:
    
    get_matches(word_list:List[str], query:str) -> List[str]
        Find lines containing the query string.
        Examples:
                >>> get_matches(['a', 'list', 'of', 'words'], 's')
                ['list', 'words']
                
Magnificient match finding! A simple doctest example is a great way convey information on how an object can be used. In the next exercise, we'll look at another function definition that includes an example in its docstring.

                
