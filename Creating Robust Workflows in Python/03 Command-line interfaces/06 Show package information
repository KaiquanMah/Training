Show package information
In this exercise, we will use the pip install command to install a local package called aadvark.
The requirements.txt file in the current working directory is already set up to install any local packages that can be found.
To confirm that the installation worked, and the pip show command to access information on the aadvark package.
The code in this exercise can be used as part of a script to set up a virtual environment and install local packages in any directory.





Run pip install to install the aadvark local package.
Use pip show obtain information on the aadvark package.


print(run(
    # Install project dependencies
    [".venv/bin/python", "-m", "pip", "install", "-r", "requirements.txt"],
    stdout=-1
).stdout.decode())

print(run(
    # Show information on the aardvark package
    [".venv/bin/python", "-m", "pip", "show", "aardvark"], stdout=-1
).stdout.decode())




<script.py> output:
    Processing /tmp/tmpp4ka9va0
    Installing collected packages: aardvark
      Running setup.py install for aardvark: started
        Running setup.py install for aardvark: finished with status 'done'
    Successfully installed aardvark-0.0.1
    
    Requirement already satisfied: aardvark in ./.venv/lib/python3.6/site-packages (0.0.1)




Awesome API use! Virtual environments are useful tools. We will see more examples of their use in running programs reproducibly later in the course. Instead of installing libraries one by one, we can install all dependencies from a requirements.txt file by running Make or a Python script! Next, we will look at how we can save Python objects to files and package our Python code.

