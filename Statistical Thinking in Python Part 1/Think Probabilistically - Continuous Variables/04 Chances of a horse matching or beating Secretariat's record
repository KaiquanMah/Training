# What are the chances of a horse matching or beating Secretariat's record?
# Assume that the Belmont winners' times are Normally distributed (with the 1970 and 1973 years removed), what is the probability that the winner of a given Belmont Stakes will run it as fast or faster than Secretariat?




# Take a million samples out of the Normal distribution: samples
#Take 1,000,000 samples from the normal distribution using the np.random.normal() function. The mean mu and standard deviation sigma are already loaded into the namespace of your IPython instance.
#(mu, sigma) = (149.22101123595507, 1.627816471774816)
samples = np.random.normal(mu, sigma, size=1000000)

# Compute the fraction that are faster than 144 seconds: prob
#Compute the fraction of samples that have a time less than or equal to Secretariat's time of 144 seconds.
prob = np.sum(samples<144)/len(samples)

# Print the result
print('Probability of besting Secretariat:', prob)
