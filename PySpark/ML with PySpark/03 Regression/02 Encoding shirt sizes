Encoding shirt sizes
You have data for a consignment of t-shirts. The data includes the size of the shirt, which is given as either S, M, L or XL.

Here are the counts for the different sizes:

+----+-----+
|size|count|
+----+-----+
|   S|    8|
|   M|   15|
|   L|   20|
|  XL|    7|
+----+-----+
The sizes are first converted to an index using StringIndexer and then one-hot encoded using OneHotEncoderEstimator.




Which of the following is not true:
S shirts get index 2.0 and are one-hot encoded as (3,[2],[1.0])
M shirts get index 1.0 and are one-hot encoded as (3,[1],[1.0])
L shirts get index 0.0 and are one-hot encoded as (3,[0],[1.0])

#YES - XL shirts get index 3.0 and are one-hot encoded as (3,[3],[1.0])
Correct! This statement is false: XL is the least frequent size, so it receives an index of 3. However, it is one-hot encoded to (3,[],[]) because it does not get it's own dummy variable. If none of the other dummy variables are true, then this one must be true. So to make a separate dummy variable would be redundant!


