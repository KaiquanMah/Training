Conda Packages
In the last chapter you created a Python package and successfully installed it. However, you needed to have 1) downloaded the source code, and 2) created a Conda Environment with the dependent packages.
Further, when using setuptools to install packages there are no uninstall or update commands. That means you would have to manually remove the installed files if you want to install a newer version of the package. As you saw in the Conda Essentials course, Conda packages solve each of these issues, but you might use pip and virtualenv as well.
In this chapter you'll create a Conda Recipe for the mortgage_forecasts package to define the dependent Conda packages. The Conda recipe is specified in a file called meta.yaml.
You'll then build the package archive and upload it to Anaconda Cloud. Further, Conda packages are not limited to Python packages. A package written in any programming language, or a collection of files, can become a Conda package.

Which statement below is INCORRECT?
#correct Conda packages can be built for JavaScript and R source packages.
#correct Dependent conda packages are specified in the meta.yaml file.
#correct python setup.py update works just like conda update <package>

#incorrect Having a setup.py file is enough to build a Conda package.
Correct! You need the conda recipe meta.yaml file.

