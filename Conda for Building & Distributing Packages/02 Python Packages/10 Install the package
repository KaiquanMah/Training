Install the package
Now you're ready to install the package for use. It's important to note that setup.py does not contain information about dependent packages, like pandas and statsmodels. While the setup.py file can define these packages we're going to use Conda Build in the next chapter to define and install dependent packages. For now in order to use the package we must have pandas, statsmodels, and scipy installed.
The forecast conda environment has been created and activated for you. In this exercise you'll install the mortgage_forecasts package and verify that you can import and run it.




To install the package in your environment execute the setup.py file with install as the first argument.
Notice that the package is installed in the forecast Conda environment.
python setup.py install

$ conda activate forecast
(forecast) $ cd mortgage_forecasts
(forecast) $ pwd
/home/repl/mortgage_forecasts
(forecast) $ ls
LICENSE  mortgage_forecasts  setup.py  version.py



(forecast) $ conda env list
# conda environments:
#
base                     /home/repl/miniconda
forecast              *  /home/repl/miniconda/envs/forecast



(forecast) $ python setup.py install
running install
running bdist_egg
running egg_info
creating mortgage_forecasts.egg-info
writing mortgage_forecasts.egg-info/PKG-INFO
writing dependency_links to mortgage_forecasts.egg-info/dependency_links.txt
writing top-level names to mortgage_forecasts.egg-info/top_level.txt
writing manifest file 'mortgage_forecasts.egg-info/SOURCES.txt'
reading manifest file 'mortgage_forecasts.egg-info/SOURCES.txt'
writing manifest file 'mortgage_forecasts.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_py
creating build
creating build/lib
creating build/lib/mortgage_forecasts
copying mortgage_forecasts/utils.py -> build/lib/mortgage_forecasts
copying mortgage_forecasts/models.py -> build/lib/mortgage_forecasts
copying mortgage_forecasts/__init__.py -> build/lib/mortgage_forecasts
creating build/bdist.linux-x86_64
creating build/bdist.linux-x86_64/egg
creating build/bdist.linux-x86_64/egg/mortgage_forecasts
copying build/lib/mortgage_forecasts/utils.py -> build/bdist.linux-x86_64/egg/mortgage_forecasts
copying build/lib/mortgage_forecasts/models.py -> build/bdist.linux-x86_64/egg/mortgage_forecasts
copying build/lib/mortgage_forecasts/__init__.py -> build/bdist.linux-x86_64/egg/mortgage_forecasts
byte-compiling build/bdist.linux-x86_64/egg/mortgage_forecasts/utils.py to utils.cpython-36.pyc
byte-compiling build/bdist.linux-x86_64/egg/mortgage_forecasts/models.py to models.cpython-36.pyc
byte-compiling build/bdist.linux-x86_64/egg/mortgage_forecasts/__init__.py to __init__.cpython-36.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying mortgage_forecasts.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying mortgage_forecasts.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying mortgage_forecasts.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying mortgage_forecasts.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
zip_safe flag not set; analyzing archive contents...
creating dist
creating 'dist/mortgage_forecasts-0.1-py3.6.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing mortgage_forecasts-0.1-py3.6.egg
Copying mortgage_forecasts-0.1-py3.6.egg to /home/repl/miniconda/envs/forecast/lib/python3.6/site-packages
Adding mortgage-forecasts 0.1 to easy-install.pth file

Installed /home/repl/miniconda/envs/forecast/lib/python3.6/site-packages/mortgage_forecasts-0.1-py3.6.egg
Processing dependencies for mortgage-forecasts==0.1
Finished processing dependencies for mortgage-forecasts==0.1

















In order to fit the MortgageRateModel autoregressive model you'll need to read mortgage rate data from the St. Louis Federal Reserve. The data has been downloaded for you.
Change directory to /home/repl/practice, where the data has been placed.


(forecast) $ cd /home/repl/practice















In the Python shell import MortgageRateModel and read_data from the mortgage_forecasts package and call:
read_data() with the argument mortgage_rates.csv -> df
MortgageRateModel() with the argument df -> model
model.forecast() with the argument 'January 2019'

You can continue to inspect the help() of the package, functions, and classes.
Exit the interpreter when you're done.

(forecast) $ ls
mortgage_rates.csv

# Run python without any arguments to open the python shell instead of the following command
# python -c "import mortgage_forecasts"

python
>>> from mortgage_forecasts import MortgageRateModel, read_data
>>> df = read_data('mortgage_rates.csv')
>>> model = MortgageRateModel(df)
>>> model.forecast('January 2019')
(4.247193105489958, 2.2347719989598485)
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()

