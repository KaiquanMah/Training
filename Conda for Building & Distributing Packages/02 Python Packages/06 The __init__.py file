The __init__.py file
As you saw in the previous exercise you have to individually import models and utils to access functions and classes defined in each module. These modules do not get automatically imported when you run import mortgage_forecasts, since mortgage_forecasts is a directory.
To define what gets imported from a directory you need a file called __init__.py. This file is executed when import mortgage_forecasts is run.

For the mortgage_forecasts package we wish to provide a more convenient way to import MortgageRateModel from models.py and read_data from utils.py. Our goal is to tell users of the package that they can access these tools as
from mortgage_forecasts import read_data, MortgageRateModel

The mortgage_forecasts directory has been prepared for you.


Create a new __init__.py file in /home/repl/mortgage_forecasts/mortgage_forecasts.
Add this docstring at the top of the file. This allows the user to run help(mortgage_forcecasts) after importing the package.
'''Predictive modeling of 30-year mortgage rates in the US.'''
You can use nano, vi, vim, or emacs to edit the file.

$ cd mortgage_forecasts
$ ls -lR
.:total 4
drwxr-xr-x 2 repl repl 4096 Jan 22 03:40 mortgage_forecasts

./mortgage_forecasts:
total 8
-rw-r--r-- 1 repl repl 1982 Jan 22 03:40 models.py
-rw-r--r-- 1 repl repl  907 Jan 22 03:40 utils.py

$ ls
mortgage_forecasts
$ pwd
/home/repl/mortgage_forecasts



$ cd /home/repl/mortgage_forecasts/mortgage_forecasts
$ ls
models.py  utils.py
$ nano __init__.py
'''Predictive modeling of 30-year mortgage rates in the US.'''













Edit the __init__.py to add the following lines.
from .models import MortgageRateModel
from .utils import read_data
Notice the use of . to mean the local directory of the __init__.py file. This helps avoid name collisions with other packages that have been installed.

$ ls
__init__.py  models.py  utils.py
$ nano __init__.py
'''Predictive modeling of 30-year mortgage rates in the US.'''
from .models import MortgageRateModel
from .utils import read_data

